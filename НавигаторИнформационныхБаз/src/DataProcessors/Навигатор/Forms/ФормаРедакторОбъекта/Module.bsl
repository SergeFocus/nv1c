
#Область Форма

#Область События

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	#Область Предусловия

	Если Не ТипЗнч(Параметры.ОбъектКонфигурации) = Тип("ДанныеФормыСтруктура") Тогда

		Если Не ЗначениеЗаполнено(Параметры.ОбъектКонфигурации) Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;

	КонецЕсли;

	Попытка
		МетаданныеОбъекта = Параметры.ОбъектКонфигурации.Метаданные();
	Исключение
		Отказ = Истина;
		Возврат;
	КонецПопытки;

	#КонецОбласти

	ОбъектКонфигурации = Параметры.ОбъектКонфигурации;

	ЗаполнитьПоДаннымОбъектаКонфигурации();

	ВключенРежимРедактированияОбъекта = Ложь;
	УстановитьСвойстваЭлементовФормы();

КонецПроцедуры
#КонецОбласти

#Область Таблицы

#Область ДанныеСвойства

#Область События

&НаКлиенте
Процедура ВсеРеквизитыВыбор(Элемент, ВыбраннаяСтрока, Поле,
		СтандартнаяОбработка)

	#Область Предусловия

	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	#КонецОбласти

	Если Элемент.ТекущиеДанные.РеквизитИмя = "Ссылка" Тогда
		ПоказатьЗначение(, Элемент.ТекущиеДанные.РеквизитЗначение);
	Иначе

		Если (Не ВключенРежимРедактированияОбъекта) Тогда

			ПараметрыФормы = Новый Структура("ОбъектКонфигурации", Элемент.ТекущиеДанные.РеквизитЗначение);
			ПолноеИмяФормы = ПолноеИмяФормыОбработки(ЭтаФорма.ИмяФормы, "ФормаРедакторОбъекта");

			ОткрытьФорму(ПолноеИмяФормы, ПараметрыФормы, ЭтаФорма, Истина);

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры
#КонецОбласти

#Область Команды
#КонецОбласти

#КонецОбласти

#Область ВсеРеквизиты

&НаКлиенте
Процедура ВсеРеквизитыРеквизитЗначениеПриИзменении(Элемент)

	ТекущиеДанные = Элементы.ВсеРеквизиты.ТекущиеДанные;

	Если (ТекущиеДанные = Неопределено) Тогда
		Возврат;
	КонецЕсли;

	ТекущиеДанные.РеквизитИзменен = Истина;

	Модифицированность = Истина;

КонецПроцедуры
#КонецОбласти

#Область ВсеТабличныеЧасти

#Область События

&НаКлиенте
Процедура ВсеТабличныеЧастиВыбор(Элемент, ВыбраннаяСтрока, Поле,
		СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	#Область Предусловия

	ТекущиеДанные = Элемент.ТекущиеДанные;

	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если Не (ТекущиеДанные.ТабличнаяЧастьТипСтроки = "ТабличнаяЧасть") Тогда
		Возврат;
	КонецЕсли;

	#КонецОбласти

	ПриВыбореСтрокиВсеТабличныеЧасти(ТекущиеДанные.ТабличнаяЧастьИмя);

КонецПроцедуры
#КонецОбласти

#КонецОбласти

#Область ВсеРегистрыНакопления

#Область События

&НаКлиенте
Процедура ВсеРегистрыНакопленияВыбор(Элемент, ВыбраннаяСтрока, Поле,
		СтандартнаяОбработка)

	#Область Предусловия

	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	#КонецОбласти

	ПриВыбореСтрокиВсеРегистрыНакопления(Элемент.ТекущиеДанные);

КонецПроцедуры
#КонецОбласти

#КонецОбласти

#Область ВсеРегистрыСведений

#Область События

&НаКлиенте
Процедура ВсеРегистрыСведенийВыбор(Элемент, ВыбраннаяСтрока, Поле,
		СтандартнаяОбработка)

	#Область Предусловия

	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	#КонецОбласти

	ПриВыбореСтрокиВсеРегистрыСведений(Элемент.ТекущиеДанные);

КонецПроцедуры
#КонецОбласти

#КонецОбласти

#Область ВсеРегистрыБухгалтерии

#Область События

&НаКлиенте
Процедура ВсеРегистрыБухгалтерииВыбор(Элемент, ВыбраннаяСтрока, Поле,
		СтандартнаяОбработка)

	#Область Предусловия

	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	#КонецОбласти

	ПриВыбореСтрокиВсеРегистрыБухгалтерии(Элемент.ТекущиеДанные);

КонецПроцедуры
#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура КомандаСтруктураПодчиненности(Команда)

	СтруктураПодчиненности();

КонецПроцедуры

&НаКлиенте
Процедура КомандаДвиженияДокумента(Команда)

	ДвиженияДокумента();

КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписатьИзмененияОбъекта(Команда)

	ЗаписатьИзмененияОбъекта();

КонецПроцедуры

&НаКлиенте
Процедура КомандаИзменитьЗначениеРеквизита(Команда)

	ИзменитьЗначениеРеквизита();

КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьОбъект(Команда)

	СсылкаНаОбъект = СсылкаНаОбъект();

	Если СсылкаНаОбъект = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ПоказатьЗначение(, СсылкаНаОбъект);

КонецПроцедуры

&НаКлиенте
Процедура КомандаПровестиДокумент(Команда)

	ПровестиДокумент();

КонецПроцедуры

&НаКлиенте
Процедура КомандаОтменитьПроведениеДокумента(Команда)

	ОтменитьПроведениеДокумента();

КонецПроцедуры

&НаКлиенте
Процедура КомандаПерейтиПоНавигационнойСсылкеНаЭлемент(Команда)

	ПерейтиПоНавигационнойСсылкеНаЭлемент();

КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавитьВИзбранное(Команда)

	ДобавитьВИзбранное();

КонецПроцедуры

&НаКлиенте
Процедура КомандаВключитьРежимРедактированияОбъекта(Команда)

	ВключитьРежимРедактированияОбъекта();
	УстановитьСвойстваЭлементовФормы();

КонецПроцедуры
#КонецОбласти

#КонецОбласти

#Область Процедуры

#Область НаКлиенте

&НаКлиенте
Процедура ПриВыбореСтрокиВсеТабличныеЧасти(ИмяТабличнойЧасти)

	#Область Предусловия

	Если Не ЗначениеЗаполнено(ИмяТабличнойЧасти) Тогда
		Возврат;
	КонецЕсли;

	#КонецОбласти

	ОтобразитьДанныеТабличнойЧасти(ИмяТабличнойЧасти);
	АктивизироватьСтраницуТаблицыОбъекта("ТабличнаяЧасть", ИмяТабличнойЧасти);

КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореСтрокиВсеРегистрыНакопления(СвойстваРегистра)

	#Область Предусловия

	Если СвойстваРегистра = Неопределено Тогда
		Возврат;
	КонецЕсли;

	#КонецОбласти

	ОтобразитьДанныеДвиженийПоРегистру("РегистрНакопления", СвойстваРегистра.РегистрНакопленияИмя);
	АктивизироватьСтраницуТаблицыОбъекта("РегистрНакопления", СвойстваРегистра.РегистрНакопленияИмя);

КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореСтрокиВсеРегистрыСведений(СвойстваРегистра)

	#Область Предусловия

	Если СвойстваРегистра = Неопределено Тогда
		Возврат;
	КонецЕсли;

	#КонецОбласти

	ОтобразитьДанныеДвиженийПоРегистру("РегистрСведений", СвойстваРегистра.РегистрСведенийИмя);
	АктивизироватьСтраницуТаблицыОбъекта("РегистрСведений", СвойстваРегистра.РегистрСведенийИмя);

КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореСтрокиВсеРегистрыБухгалтерии(СвойстваРегистра)

	ОтобразитьДанныеДвиженийПоРегистру("РегистрБухгалтерии", СвойстваРегистра.РегистрБухгалтерииИмя);
	АктивизироватьСтраницуТаблицыОбъекта("РегистрБухгалтерии", СвойстваРегистра.РегистрБухгалтерииИмя);

КонецПроцедуры

&НаКлиенте
Процедура ДвиженияДокумента()

	#Область Предусловия

	Если Не ЗначениеЗаполнено(ОбъектКонфигурации) Тогда
		Возврат;
	КонецЕсли;

	#КонецОбласти

	Попытка
		ОткрытьФорму("Отчет.ДвиженияДокумента.Форма.ФормаОтчета", Новый Структура("Документ", ОбъектКонфигурации), ЭтаФорма);
	Исключение
	//
	КонецПопытки;

КонецПроцедуры

&НаКлиенте
Процедура СтруктураПодчиненности()

	#Область Предусловия

	Если Не ЗначениеЗаполнено(ОбъектКонфигурации) Тогда
		Возврат;
	КонецЕсли;

	#КонецОбласти

	Попытка
		ОткрытьФорму("ОбщаяФорма.СтруктураПодчиненности", Новый Структура("ОбъектОтбора", ОбъектКонфигурации), ЭтаФорма);
	Исключение
	//
	КонецПопытки;

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЗначениеРеквизита()

	ТекущиеДанные = Элементы.ВсеРеквизиты.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ЗначениеРеквизита = ТекущиеДанные.РеквизитЗначение;

	ПараметрыРедактирования = Новый Структура("РеквизитИмя, РеквизитЗначение");
	ЗаполнитьЗначенияСвойств(ПараметрыРедактирования, ТекущиеДанные);

	Оповещение = Новый ОписаниеОповещения("ИзменитьЗначениеРеквизитаЗавершение", ЭтотОбъект, ПараметрыРедактирования);
	ПоказатьВводЗначения(Оповещение, ЗначениеРеквизита);

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЗначениеРеквизитаЗавершение(Значение,
		ПараметрыРедактирования) Экспорт

		//#Область Предусловия
	//
	//Если Значение = Неопределено Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Если (Значение = ПараметрыРедактирования.РеквизитЗначение) Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//#КонецОбласти
	//
	//Строки = ВсеРеквизиты.НайтиСтроки(Новый Структура("РеквизитИмя", ПараметрыРедактирования.РеквизитИмя));
	//
	//Если Строки.Количество() = 0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Строки[0].РеквизитЗначение = Значение;
	//Строки[0].РеквизитИзменен = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВИзбранное()

	стр_ИзбранныеЭлементы = Объект.ИзбранныеЭлементы.Добавить();
	//стр_ИзбранныеЭлементы.ИдЗаписи = Новый УникальныйИдентификатор();
	//стр_ИзбранныеЭлементы.Ссылка = ОбъектКонфигурации.Ссылка;
	//стр_ИзбранныеЭлементы.Представление = ОбъектКонфигурации.Ссылка;
КонецПроцедуры

#Область Подключаемые

&НаКлиенте
Процедура Подключаемый_Регистр_Выбор(Элемент, ВыбраннаяСтрока, Поле,
		СтандартнаяОбработка) Экспорт

	СтандартнаяОбработка = Ложь;

	Если Поле.Имя = "НомерСтроки" Тогда

	// Сделать:
		// Сформировать структру данных и передать в форму редактора.
	Иначе
		ПараметрыФормы = Новый Структура("ОбъектКонфигурации", Элемент.ТекущиеДанные[Поле.Имя]);
	КонецЕсли;

	ПолноеИмяФормы = ПолноеИмяФормыОбработки(ЭтаФорма.ИмяФормы, "ФормаРедакторОбъекта");
	ОткрытьФорму(ПолноеИмяФормы, ПараметрыФормы, ЭтаФорма, Истина);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ТабличнаяЧасть_Выбор(Элемент, ВыбраннаяСтрока, Поле,
		СтандартнаяОбработка) Экспорт

	СтандартнаяОбработка = Ложь;

	#Область Предусловия

	ТекущиеДанные = Элемент.ТекущиеДанные;

	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	#КонецОбласти

	ПараметрыФормы = Новый Структура("ОбъектКонфигурации", ТекущиеДанные[Поле.Имя]);

	ПолноеИмяФормы = ПолноеИмяФормыОбработки(ЭтаФорма.ИмяФормы, "ФормаРедакторОбъекта");
	ОткрытьФорму(ПолноеИмяФормы, ПараметрыФормы, ЭтаФорма, Истина);

КонецПроцедуры
#КонецОбласти

#КонецОбласти

#Область НаСервере

&НаСервере
Процедура ЗаполнитьВсеРеквизиты()

	#Область Предусловия

	Если Не ЗначениеЗаполнено(ОбъектКонфигурации) Тогда
		Возврат;
	КонецЕсли;

	МетаданныеОбъекта = ОбъектКонфигурации.Метаданные();

	Если Метаданные.Перечисления.Содержит(МетаданныеОбъекта) Тогда
		Возврат;
	КонецЕсли;

	#КонецОбласти

	ЭтаОбработка = ЭтаОбработка();

	дз_ВсеРеквизиты = РеквизитФормыВЗначение("ВсеРеквизиты");
	дз_ВсеРеквизиты.Строки.Очистить();

	// Заполнить системные реквизиты.
	ПорядокСортировки = 0;

	стр_СистемныеРеквизиты = дз_ВсеРеквизиты.Строки.Добавить();
	стр_СистемныеРеквизиты.РеквизитИмя = "СистемныеРеквизиты";
	стр_СистемныеРеквизиты.РеквизитПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("СистемныеРеквизиты (%1)", 2);
	стр_СистемныеРеквизиты.РеквизитПорядокСортировки = ПорядокСортировки;
	стр_СистемныеРеквизиты.РеквизитЭтоСистемный = Истина;
	стр_СистемныеРеквизиты.РеквизитТипСтроки = "СистемныеРеквизиты";

	ПорядокСортировки = ПорядокСортировки + 1;

	стр_СистемныйРеквизит = стр_СистемныеРеквизиты.Строки.Добавить();
	стр_СистемныйРеквизит.РеквизитИмя = "IdRef";
	стр_СистемныйРеквизит.РеквизитПредставление = "IdRef";
	стр_СистемныйРеквизит.РеквизитПорядокСортировки = ПорядокСортировки;
	стр_СистемныйРеквизит.РеквизитЭтоСистемный = Истина;
	стр_СистемныйРеквизит.РеквизитТипСтроки = "СистемныйРеквизит";
	стр_СистемныйРеквизит.РеквизитТип = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(36), , );
	стр_СистемныйРеквизит.РеквизитПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(стр_СистемныйРеквизит.РеквизитТип);
	стр_СистемныйРеквизит.РеквизитСиноним = "IdRef";
	стр_СистемныйРеквизит.РеквизитЗначение = ОбъектКонфигурации.Ссылка.УникальныйИдентификатор();

	ПорядокСортировки = ПорядокСортировки + 1;

	стр_СистемныйРеквизит = стр_СистемныеРеквизиты.Строки.Добавить();
	стр_СистемныйРеквизит.РеквизитИмя = "НавигационнаяСсылка";
	стр_СистемныйРеквизит.РеквизитПредставление = "НавигационнаяСсылка";
	стр_СистемныйРеквизит.РеквизитПорядокСортировки = ПорядокСортировки;
	стр_СистемныйРеквизит.РеквизитЭтоСистемный = Истина;
	стр_СистемныйРеквизит.РеквизитТипСтроки = "СистемныйРеквизит";
	стр_СистемныйРеквизит.РеквизитТип = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(0), , );
	стр_СистемныйРеквизит.РеквизитПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(стр_СистемныйРеквизит.РеквизитТип);
	стр_СистемныйРеквизит.РеквизитСиноним = "НавигационнаяСсылка";
	стр_СистемныйРеквизит.РеквизитЗначение = ПолучитьНавигационнуюСсылку(ОбъектКонфигурации.Ссылка);

	ПорядокСортировки = ПорядокСортировки + 1;

	стр_СистемныйРеквизит = стр_СистемныеРеквизиты.Строки.Добавить();
	стр_СистемныйРеквизит.РеквизитИмя = "ВерсияДанных";
	стр_СистемныйРеквизит.РеквизитПредставление = "ВерсияДанных";
	стр_СистемныйРеквизит.РеквизитПорядокСортировки = ПорядокСортировки;
	стр_СистемныйРеквизит.РеквизитЭтоСистемный = Истина;
	стр_СистемныйРеквизит.РеквизитТипСтроки = "СистемныйРеквизит";
	стр_СистемныйРеквизит.РеквизитТип = Новый ОписаниеТипов("Строка");
	стр_СистемныйРеквизит.РеквизитПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(стр_СистемныйРеквизит.РеквизитТип);
	стр_СистемныйРеквизит.РеквизитСиноним = "ВерсияДанных";
	стр_СистемныйРеквизит.РеквизитЗначение = ОбъектКонфигурации.Ссылка.ВерсияДанных;

	Если МетаданныеОбъекта.СтандартныеРеквизиты.Количество() > 0 Тогда

		ПорядокСортировки = ПорядокСортировки + 1;

		стр_СтРеквизиты = дз_ВсеРеквизиты.Строки.Добавить();
		стр_СтРеквизиты.РеквизитИмя = "СтандартныеРеквизиты";
		стр_СтРеквизиты.РеквизитПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("СтандартныеРеквизиты (%1)", МетаданныеОбъекта.СтандартныеРеквизиты.Количество());
		стр_СтРеквизиты.РеквизитПорядокСортировки = ПорядокСортировки;
		стр_СтРеквизиты.РеквизитЭтоСтандартный = Истина;
		стр_СтРеквизиты.РеквизитНомерКартинки = 44;
		стр_СтРеквизиты.РеквизитТипСтроки = "СтандартныеРеквизиты";

		Для каждого СтандартныйРеквизит Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл

			ПорядокСортировки = ПорядокСортировки + 1;

			стр_СтРеквизит = стр_СтРеквизиты.Строки.Добавить();
			стр_СтРеквизит.РеквизитИмя = СтандартныйРеквизит.Имя;
			стр_СтРеквизит.РеквизитПредставление = СтандартныйРеквизит.Имя;
			стр_СтРеквизит.РеквизитТип = СтандартныйРеквизит.Тип;
			стр_СтРеквизит.РеквизитПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(СтандартныйРеквизит.Тип);
			стр_СтРеквизит.РеквизитСиноним = СтандартныйРеквизит.Синоним;
			стр_СтРеквизит.РеквизитЗначение = ОбъектКонфигурации[СтандартныйРеквизит.Имя];
			стр_СтРеквизит.РеквизитПорядокСортировки = ПорядокСортировки;
			стр_СтРеквизит.РеквизитЭтоСтандартный = Истина;
			стр_СтРеквизит.РеквизитНомерКартинки = 44;
			стр_СтРеквизит.РеквизитТипСтроки = "СтандартныйРеквизит";

		КонецЦикла;

		стр_СтРеквизиты.Строки.Сортировать("РеквизитИмя");

	КонецЕсли;

	Если МетаданныеОбъекта.Реквизиты.Количество() > 0 Тогда

		стр_Реквизиты = дз_ВсеРеквизиты.Строки.Добавить();
		стр_Реквизиты.РеквизитИмя = "Реквизиты";
		стр_Реквизиты.РеквизитПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("Реквизиты (%1)", МетаданныеОбъекта.Реквизиты.Количество());
		стр_Реквизиты.РеквизитПорядокСортировки = ПорядокСортировки;
		стр_Реквизиты.РеквизитЭтоСтандартный = Истина;
		стр_Реквизиты.РеквизитНомерКартинки = 45;
		стр_Реквизиты.РеквизитТипСтроки = "Реквизиты";

		Для каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл

			стр_Реквизит = стр_Реквизиты.Строки.Добавить();
			стр_Реквизит.РеквизитИмя = Реквизит.Имя;
			стр_Реквизит.РеквизитПредставление = Реквизит.Имя;
			стр_Реквизит.РеквизитТип = Реквизит.Тип;
			стр_Реквизит.РеквизитПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(Реквизит.Тип);
			стр_Реквизит.РеквизитСиноним = Реквизит.Синоним;
			стр_Реквизит.РеквизитКомментарий = Реквизит.Комментарий;
			стр_Реквизит.РеквизитЗначение = ОбъектКонфигурации[Реквизит.Имя];
			стр_Реквизит.РеквизитПорядокСортировки = МетаданныеОбъекта.Реквизиты.Количество();
			стр_Реквизит.РеквизитНомерКартинки = 45;
			стр_Реквизит.РеквизитУдалить = Врег(Лев(Реквизит.Имя, СтрДлина("Удалить"))) = Врег("Удалить");

		КонецЦикла;

		стр_Реквизиты.Строки.Сортировать("РеквизитИмя");

	КонецЕсли;

	дз_ВсеРеквизиты.Строки.Сортировать("РеквизитПорядокСортировки, РеквизитИмя");

	ЗначениеВРеквизитФормы(дз_ВсеРеквизиты, "ВсеРеквизиты");

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВсеТабличныеЧасти()

	#Область Предусловия

	Если Не ЗначениеЗаполнено(ОбъектКонфигурации) Тогда
		Возврат;
	КонецЕсли;

	#КонецОбласти

	ЭтаОбработка = ЭтаОбработка();

	дз_ВсеТабличныеЧасти = РеквизитФормыВЗначение("ВсеТабличныеЧасти");
	дз_ВсеТабличныеЧасти.Строки.Очистить();

	ЕстьТабличныеЧасти = Ложь;
	ОбъектМд = ОбъектКонфигурации.Метаданные();

	Попытка
		ТЧ = ОбъектМд.ТабличныеЧасти;
		ЕстьТабличныеЧасти = Истина;
	Исключение
	//
	КонецПопытки;

	Если (ЕстьТабличныеЧасти) Тогда

		Для каждого ТаблЧастьМд Из ОбъектМд.ТабличныеЧасти Цикл

			стр_ТабличнаяЧасть = дз_ВсеТабличныеЧасти.Строки.Добавить();
			стр_ТабличнаяЧасть.ТабличнаяЧастьИмя = ТаблЧастьМд.Имя;
			стр_ТабличнаяЧасть.ТабличнаяЧастьСиноним = ТаблЧастьМд.Синоним;

			КоличествоСтрокТаблЧасти = ОбъектКонфигурации[ТаблЧастьМд.Имя].Количество();
			стр_ТабличнаяЧасть.ТабличнаяЧастьКоличествоСтрок = КоличествоСтрокТаблЧасти;

			стр_ТабличнаяЧасть.ТабличнаяЧастьНомерКартинки = 46;
			стр_ТабличнаяЧасть.ТабличнаяЧастьТипСтроки = "ТабличнаяЧасть";

			ПредставлениеТаблЧасти = ?(КоличествоСтрокТаблЧасти > 0, ЭтаОбработка.ПодставитьПараметрыВСтроку("%1 (%2)", ТаблЧастьМд.Имя, КоличествоСтрокТаблЧасти), ТаблЧастьМд.Имя);

			стр_ТабличнаяЧасть.ТабличнаяЧастьПредставление = ПредставлениеТаблЧасти;

			Для каждого РеквизитТаблЧасти Из ТаблЧастьМд.Реквизиты Цикл

				стр_Реквизит = стр_ТабличнаяЧасть.Строки.Добавить();
				стр_Реквизит.ТабличнаяЧастьИмя = РеквизитТаблЧасти.Имя;
				стр_Реквизит.ТабличнаяЧастьПредставление = РеквизитТаблЧасти.Имя;
				стр_Реквизит.ТабличнаяЧастьПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(РеквизитТаблЧасти.Тип);
				стр_Реквизит.ТабличнаяЧастьСиноним = РеквизитТаблЧасти.Синоним;
				стр_Реквизит.ТабличнаяЧастьКомментарий = РеквизитТаблЧасти.Комментарий;
				стр_Реквизит.ТабличнаяЧастьНомерКартинки = 45;
				стр_Реквизит.ТабличнаяЧастьТипСтроки = "Реквизит";

			КонецЦикла;

		КонецЦикла;

		дз_ВсеТабличныеЧасти.Строки.Сортировать("ТабличнаяЧастьИмя");

	КонецЕсли;

	Элементы.СтраницаТабличныеЧасти.Видимость = ЕстьТабличныеЧасти;

	ЗначениеВРеквизитФормы(дз_ВсеТабличныеЧасти, "ВсеТабличныеЧасти");

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВсеДвижения()

// TODO: Рефакторинг. Переделать на универсальное заполнение.
	// Работа с реквизитами всех регистров должна быть единой.
	ЭтаОбработка = ЭтаОбработка();

	дз_ВсеРегистрыНакопления = РеквизитФормыВЗначение("ВсеРегистрыНакопления");
	дз_ВсеРегистрыНакопления.Строки.Очистить();

	дз_ВсеРегистрыСведений = РеквизитФормыВЗначение("ВсеРегистрыСведений");
	дз_ВсеРегистрыСведений.Строки.Очистить();

	дз_ВсеРегистрыБухгалтерии = РеквизитФормыВЗначение("ВсеРегистрыБухгалтерии");
	дз_ВсеРегистрыБухгалтерии.Строки.Очистить();

	дз_ВсеРегистрыРасчета = РеквизитФормыВЗначение("ВсеРегистрыРасчета");
	дз_ВсеРегистрыРасчета.Очистить();

	МетаданныеОбъекта = ОбъектКонфигурации.Метаданные();
	ЭтоДокумент = Метаданные.Документы.Содержит(МетаданныеОбъекта);

	Если ЭтоДокумент Тогда

		Для каждого МетаданныеРегистра Из МетаданныеОбъекта.Движения Цикл

			Если Метаданные.РегистрыНакопления.Содержит(МетаданныеРегистра) Тогда

				стр_Регистр = дз_ВсеРегистрыНакопления.Строки.Добавить();
				стр_Регистр.РегистрНакопленияИмя = МетаданныеРегистра.Имя;
				стр_Регистр.РегистрНакопленияСиноним = МетаданныеРегистра.Синоним;
				стр_Регистр.РегистрНакопленияВид = МетаданныеРегистра.ВидРегистра;
				стр_Регистр.РегистрНакопленияТипСтроки = "РегистрНакопления";
				стр_Регистр.РегистрНакопленияНомерКартинки = 14;

				КолЗаписей = КоличествоЗаписейПоРегистру(МетаданныеРегистра);
				стр_Регистр.РегистрНакопленияКоличествоЗаписей = КолЗаписей;

				ПредставлениеРегистра = ?(КолЗаписей > 0, ЭтаОбработка.ПодставитьПараметрыВСтроку("%1 (%2)", МетаданныеРегистра.Имя, КолЗаписей), МетаданныеРегистра.Имя);
				стр_Регистр.РегистрНакопленияПредставление = ПредставлениеРегистра;

				стр_СтРеквизиты = стр_Регистр.Строки.Добавить();
				стр_СтРеквизиты.РегистрНакопленияИмя = "СтандартныеРеквизиты";
				стр_СтРеквизиты.РегистрНакопленияПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("СтандартныеРеквизиты (%1)", МетаданныеРегистра.СтандартныеРеквизиты.Количество());
				стр_СтРеквизиты.РегистрНакопленияНомерКартинки = 44;
				стр_СтРеквизиты.РегистрНакопленияТипСтроки = "СтандартныеРеквизиты";

				Для каждого СтРеквизит Из МетаданныеРегистра.СтандартныеРеквизиты Цикл

					стр_СтРеквизит = стр_СтРеквизиты.Строки.Добавить();
					стр_СтРеквизит.РегистрНакопленияИмя = СтРеквизит.Имя;
					стр_СтРеквизит.РегистрНакопленияПредставление = СтРеквизит.Имя;
					стр_СтРеквизит.РегистрНакопленияСиноним = СтРеквизит.Синоним;
					стр_СтРеквизит.РегистрНакопленияКомментарий = СтРеквизит.Комментарий;
					стр_СтРеквизит.РегистрНакопленияНомерКартинки = 44;
					стр_СтРеквизит.РегистрНакопленияТипСтроки = "СтандартныйРеквизит";
					стр_СтРеквизит.РегистрНакопленияПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(СтРеквизит.Тип);

				КонецЦикла;

				стр_СтРеквизиты.Строки.Сортировать("РегистрНакопленияИмя");

				стр_Измерения = стр_Регистр.Строки.Добавить();
				стр_Измерения.РегистрНакопленияИмя = "Измерения";
				стр_Измерения.РегистрНакопленияПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("Измерения (%1)", МетаданныеРегистра.Измерения.Количество());
				стр_Измерения.РегистрНакопленияНомерКартинки = 47;
				стр_Измерения.РегистрНакопленияТипСтроки = "Измерения";

				Для каждого Измерение Из МетаданныеРегистра.Измерения Цикл

					стр_Измерение = стр_Измерения.Строки.Добавить();
					стр_Измерение.РегистрНакопленияИмя = Измерение.Имя;
					стр_Измерение.РегистрНакопленияПредставление = Измерение.Имя;
					стр_Измерение.РегистрНакопленияСиноним = Измерение.Синоним;
					стр_Измерение.РегистрНакопленияКомментарий = Измерение.Комментарий;
					стр_Измерение.РегистрНакопленияНомерКартинки = 47;
					стр_Измерение.РегистрНакопленияТипСтроки = "Измерение";
					стр_Измерение.РегистрНакопленияПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(Измерение.Тип);

				КонецЦикла;

				стр_Измерения.Строки.Сортировать("РегистрНакопленияИмя");

				стр_Ресурсы = стр_Регистр.Строки.Добавить();
				стр_Ресурсы.РегистрНакопленияИмя = "Ресурсы";
				стр_Ресурсы.РегистрНакопленияПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("Ресурсы (%1)", МетаданныеРегистра.Ресурсы.Количество());
				стр_Ресурсы.РегистрНакопленияНомерКартинки = 48;
				стр_Ресурсы.РегистрНакопленияТипСтроки = "Ресурсы";

				Для каждого Ресурс Из МетаданныеРегистра.Ресурсы Цикл

					стр_Ресурс = стр_Ресурсы.Строки.Добавить();
					стр_Ресурс.РегистрНакопленияИмя = Ресурс.Имя;
					стр_Ресурс.РегистрНакопленияПредставление = Ресурс.Имя;
					стр_Ресурс.РегистрНакопленияСиноним = Ресурс.Синоним;
					стр_Ресурс.РегистрНакопленияКомментарий = Ресурс.Комментарий;
					стр_Ресурс.РегистрНакопленияНомерКартинки = 48;
					стр_Ресурс.РегистрНакопленияТипСтроки = "Ресурс";
					стр_Ресурс.РегистрНакопленияПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(Ресурс.Тип);

				КонецЦикла;

				стр_Ресурсы.Строки.Сортировать("РегистрНакопленияИмя");

				Если МетаданныеРегистра.Реквизиты.Количество() > 0 Тогда

					стр_Реквизиты = стр_Регистр.Строки.Добавить();
					стр_Реквизиты.РегистрНакопленияИмя = "Реквизиты";
					стр_Реквизиты.РегистрНакопленияПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("Реквизиты (%1)", МетаданныеРегистра.Ресурсы.Количество());
					стр_Реквизиты.РегистрНакопленияНомерКартинки = 45;
					стр_Реквизиты.РегистрНакопленияТипСтроки = "Реквизиты";

					Для каждого Реквизит Из МетаданныеРегистра.Реквизиты Цикл

						стр_Реквизит = стр_Реквизиты.Строки.Добавить();
						стр_Реквизит.РегистрНакопленияИмя = Реквизит.Имя;
						стр_Реквизит.РегистрНакопленияПредставление = Реквизит.Имя;
						стр_Реквизит.РегистрНакопленияСиноним = Реквизит.Синоним;
						стр_Реквизит.РегистрНакопленияКомментарий = Реквизит.Комментарий;
						стр_Реквизит.РегистрНакопленияНомерКартинки = 45;
						стр_Реквизит.РегистрНакопленияТипСтроки = "Реквизит";
						стр_Реквизит.РегистрНакопленияПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(Реквизит.Тип);

					КонецЦикла;

					стр_Реквизиты.Строки.Сортировать("РегистрНакопленияИмя");

				КонецЕсли;

			КонецЕсли;

			Если Метаданные.РегистрыСведений.Содержит(МетаданныеРегистра) Тогда

				стр_Регистр = дз_ВсеРегистрыСведений.Строки.Добавить();
				стр_Регистр.РегистрСведенийИмя = МетаданныеРегистра.Имя;
				стр_Регистр.РегистрСведенийСиноним = МетаданныеРегистра.Синоним;
				стр_Регистр.РегистрСведенийТипСтроки = "РегистрСведений";
				стр_Регистр.РегистрСведенийНомерКартинки = 13;

				КолЗаписей = КоличествоЗаписейПоРегистру(МетаданныеРегистра);
				стр_Регистр.РегистрСведенийКоличествоЗаписей = КолЗаписей;

				ПредставлениеРегистра = ?(КолЗаписей > 0, ЭтаОбработка.ПодставитьПараметрыВСтроку("%1 (%2)", МетаданныеРегистра.Имя, КолЗаписей), МетаданныеРегистра.Имя);
				стр_Регистр.РегистрСведенийПредставление = ПредставлениеРегистра;

				стр_СтРеквизиты = стр_Регистр.Строки.Добавить();
				стр_СтРеквизиты.РегистрСведенийИмя = "СтандартныеРеквизиты";
				стр_СтРеквизиты.РегистрСведенийПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("СтандартныеРеквизиты (%1)", МетаданныеРегистра.СтандартныеРеквизиты.Количество());
				стр_СтРеквизиты.РегистрСведенийНомерКартинки = 44;
				стр_СтРеквизиты.РегистрСведенийТипСтроки = "СтандартныеРеквизиты";

				Для каждого СтРеквизит Из МетаданныеРегистра.СтандартныеРеквизиты Цикл

					стр_СтРеквизит = стр_СтРеквизиты.Строки.Добавить();
					стр_СтРеквизит.РегистрСведенийИмя = СтРеквизит.Имя;
					стр_СтРеквизит.РегистрСведенийПредставление = СтРеквизит.Имя;
					стр_СтРеквизит.РегистрСведенийСиноним = СтРеквизит.Синоним;
					стр_СтРеквизит.РегистрСведенийКомментарий = СтРеквизит.Комментарий;
					стр_СтРеквизит.РегистрСведенийНомерКартинки = 44;
					стр_СтРеквизит.РегистрСведенийТипСтроки = "СтандартныйРеквизит";
					стр_СтРеквизит.РегистрСведенийПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(СтРеквизит.Тип);

				КонецЦикла;

				стр_СтРеквизиты.Строки.Сортировать("РегистрСведенийИмя");

				стр_Измерения = стр_Регистр.Строки.Добавить();
				стр_Измерения.РегистрСведенийИмя = "Измерения";
				стр_Измерения.РегистрСведенийПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("Измерения (%1)", МетаданныеРегистра.Измерения.Количество());
				стр_Измерения.РегистрСведенийНомерКартинки = 47;
				стр_Измерения.РегистрСведенийТипСтроки = "Измерения";

				Для каждого Измерение Из МетаданныеРегистра.Измерения Цикл

					стр_Измерение = стр_Измерения.Строки.Добавить();
					стр_Измерение.РегистрСведенийИмя = Измерение.Имя;
					стр_Измерение.РегистрСведенийПредставление = Измерение.Имя;
					стр_Измерение.РегистрСведенийСиноним = Измерение.Синоним;
					стр_Измерение.РегистрСведенийКомментарий = Измерение.Комментарий;
					стр_Измерение.РегистрСведенийНомерКартинки = 47;
					стр_Измерение.РегистрСведенийТипСтроки = "Измерение";
					стр_Измерение.РегистрСведенийПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(Измерение.Тип);

				КонецЦикла;

				стр_Измерения.Строки.Сортировать("РегистрСведенийИмя");

				стр_Ресурсы = стр_Регистр.Строки.Добавить();
				стр_Ресурсы.РегистрСведенийИмя = "Ресурсы";
				стр_Ресурсы.РегистрСведенийПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("Ресурсы (%1)", МетаданныеРегистра.Ресурсы.Количество());
				стр_Ресурсы.РегистрСведенийНомерКартинки = 48;
				стр_Ресурсы.РегистрСведенийТипСтроки = "Ресурсы";

				Для каждого Ресурс Из МетаданныеРегистра.Ресурсы Цикл

					стр_Ресурс = стр_Ресурсы.Строки.Добавить();
					стр_Ресурс.РегистрСведенийИмя = Ресурс.Имя;
					стр_Ресурс.РегистрСведенийПредставление = Ресурс.Имя;
					стр_Ресурс.РегистрСведенийСиноним = Ресурс.Синоним;
					стр_Ресурс.РегистрСведенийКомментарий = Ресурс.Комментарий;
					стр_Ресурс.РегистрСведенийНомерКартинки = 48;
					стр_Ресурс.РегистрСведенийТипСтроки = "Ресурс";
					стр_Ресурс.РегистрСведенийПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(Ресурс.Тип);

				КонецЦикла;

				стр_Ресурсы.Строки.Сортировать("РегистрСведенийИмя");

				Если МетаданныеРегистра.Реквизиты.Количество() > 0 Тогда

					стр_Реквизиты = стр_Регистр.Строки.Добавить();
					стр_Реквизиты.РегистрСведенийИмя = "Реквизиты";
					стр_Реквизиты.РегистрСведенийПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("Реквизиты (%1)", МетаданныеРегистра.Ресурсы.Количество());
					стр_Реквизиты.РегистрСведенийНомерКартинки = 45;
					стр_Реквизиты.РегистрСведенийТипСтроки = "Реквизиты";

					Для каждого Реквизит Из МетаданныеРегистра.Реквизиты Цикл

						стр_Реквизит = стр_Реквизиты.Строки.Добавить();
						стр_Реквизит.РегистрСведенийИмя = Реквизит.Имя;
						стр_Реквизит.РегистрСведенийПредставление = Реквизит.Имя;
						стр_Реквизит.РегистрСведенийСиноним = Реквизит.Синоним;
						стр_Реквизит.РегистрСведенийКомментарий = Реквизит.Комментарий;
						стр_Реквизит.РегистрСведенийНомерКартинки = 45;
						стр_Реквизит.РегистрСведенийТипСтроки = "Реквизит";
						стр_Реквизит.РегистрСведенийПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(Реквизит.Тип);

					КонецЦикла;

					стр_Реквизиты.Строки.Сортировать("РегистрСведенийИмя");

				КонецЕсли;

			КонецЕсли;

			Если Метаданные.РегистрыБухгалтерии.Содержит(МетаданныеРегистра) Тогда

				стр_Регистр = дз_ВсеРегистрыБухгалтерии.Строки.Добавить();
				стр_Регистр.РегистрБухгалтерииИмя = МетаданныеРегистра.Имя;
				стр_Регистр.РегистрБухгалтерииСиноним = МетаданныеРегистра.Синоним;
				стр_Регистр.РегистрБухгалтерииТипСтроки = "РегистрБухгалтерии";
				стр_Регистр.РегистрБухгалтерииНомерКартинки = 15;

				КолЗаписей = КоличествоЗаписейПоРегистру(МетаданныеРегистра);
				стр_Регистр.РегистрБухгалтерииКоличествоЗаписей = КолЗаписей;

				ПредставлениеРегистра = ?(КолЗаписей > 0, ЭтаОбработка.ПодставитьПараметрыВСтроку("%1 (%2)", МетаданныеРегистра.Имя, КолЗаписей), МетаданныеРегистра.Имя);
				стр_Регистр.РегистрБухгалтерииПредставление = ПредставлениеРегистра;

				стр_СтРеквизиты = стр_Регистр.Строки.Добавить();
				стр_СтРеквизиты.РегистрБухгалтерииИмя = "СтандартныеРеквизиты";
				стр_СтРеквизиты.РегистрБухгалтерииПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("СтандартныеРеквизиты (%1)", МетаданныеРегистра.СтандартныеРеквизиты.Количество());
				стр_СтРеквизиты.РегистрБухгалтерииНомерКартинки = 44;
				стр_СтРеквизиты.РегистрБухгалтерииТипСтроки = "СтандартныеРеквизиты";

				Для каждого СтРеквизит Из МетаданныеРегистра.СтандартныеРеквизиты Цикл

					стр_СтРеквизит = стр_СтРеквизиты.Строки.Добавить();
					стр_СтРеквизит.РегистрБухгалтерииИмя = СтРеквизит.Имя;
					стр_СтРеквизит.РегистрБухгалтерииПредставление = СтРеквизит.Имя;
					стр_СтРеквизит.РегистрБухгалтерииСиноним = СтРеквизит.Синоним;
					стр_СтРеквизит.РегистрБухгалтерииКомментарий = СтРеквизит.Комментарий;
					стр_СтРеквизит.РегистрБухгалтерииНомерКартинки = 44;
					стр_СтРеквизит.РегистрБухгалтерииТипСтроки = "СтандартныйРеквизит";
					стр_СтРеквизит.РегистрБухгалтерииПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(СтРеквизит.Тип);

				КонецЦикла;

				стр_СтРеквизиты.Строки.Сортировать("РегистрБухгалтерииИмя");

				стр_Измерения = стр_Регистр.Строки.Добавить();
				стр_Измерения.РегистрБухгалтерииИмя = "Измерения";
				стр_Измерения.РегистрБухгалтерииПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("Измерения (%1)", МетаданныеРегистра.Измерения.Количество());
				стр_Измерения.РегистрБухгалтерииНомерКартинки = 47;
				стр_Измерения.РегистрБухгалтерииТипСтроки = "Измерения";

				Для каждого Измерение Из МетаданныеРегистра.Измерения Цикл

					стр_Измерение = стр_Измерения.Строки.Добавить();
					стр_Измерение.РегистрБухгалтерииИмя = Измерение.Имя;
					стр_Измерение.РегистрБухгалтерииПредставление = Измерение.Имя;
					стр_Измерение.РегистрБухгалтерииСиноним = Измерение.Синоним;
					стр_Измерение.РегистрБухгалтерииКомментарий = Измерение.Комментарий;
					стр_Измерение.РегистрБухгалтерииНомерКартинки = 47;
					стр_Измерение.РегистрБухгалтерииТипСтроки = "Измерение";
					стр_Измерение.РегистрБухгалтерииПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(Измерение.Тип);

				КонецЦикла;

				стр_Измерения.Строки.Сортировать("РегистрБухгалтерииИмя");

				стр_Ресурсы = стр_Регистр.Строки.Добавить();
				стр_Ресурсы.РегистрБухгалтерииИмя = "Ресурсы";
				стр_Ресурсы.РегистрБухгалтерииПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("Ресурсы (%1)", МетаданныеРегистра.Ресурсы.Количество());
				стр_Ресурсы.РегистрБухгалтерииНомерКартинки = 48;
				стр_Ресурсы.РегистрБухгалтерииТипСтроки = "Ресурсы";

				Для каждого Ресурс Из МетаданныеРегистра.Ресурсы Цикл

					стр_Ресурс = стр_Ресурсы.Строки.Добавить();
					стр_Ресурс.РегистрБухгалтерииИмя = Ресурс.Имя;
					стр_Ресурс.РегистрБухгалтерииПредставление = Ресурс.Имя;
					стр_Ресурс.РегистрБухгалтерииСиноним = Ресурс.Синоним;
					стр_Ресурс.РегистрБухгалтерииКомментарий = Ресурс.Комментарий;
					стр_Ресурс.РегистрБухгалтерииНомерКартинки = 48;
					стр_Ресурс.РегистрБухгалтерииТипСтроки = "Ресурс";
					стр_Ресурс.РегистрБухгалтерииПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(Ресурс.Тип);

				КонецЦикла;

				стр_Ресурсы.Строки.Сортировать("РегистрБухгалтерииИмя");

				Если МетаданныеРегистра.Реквизиты.Количество() > 0 Тогда

					стр_Реквизиты = стр_Регистр.Строки.Добавить();
					стр_Реквизиты.РегистрБухгалтерииИмя = "Реквизиты";
					стр_Реквизиты.РегистрБухгалтерииПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("Реквизиты (%1)", МетаданныеРегистра.Ресурсы.Количество());
					стр_Реквизиты.РегистрБухгалтерииНомерКартинки = 45;
					стр_Реквизиты.РегистрБухгалтерииТипСтроки = "Реквизиты";

					Для каждого Реквизит Из МетаданныеРегистра.Реквизиты Цикл

						стр_Реквизит = стр_Реквизиты.Строки.Добавить();
						стр_Реквизит.РегистрБухгалтерииИмя = Реквизит.Имя;
						стр_Реквизит.РегистрБухгалтерииПредставление = Реквизит.Имя;
						стр_Реквизит.РегистрБухгалтерииСиноним = Реквизит.Синоним;
						стр_Реквизит.РегистрБухгалтерииКомментарий = Реквизит.Комментарий;
						стр_Реквизит.РегистрБухгалтерииНомерКартинки = 45;
						стр_Реквизит.РегистрБухгалтерииТипСтроки = "Реквизит";
						стр_Реквизит.РегистрБухгалтерииПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(Реквизит.Тип);

					КонецЦикла;

					стр_Реквизиты.Строки.Сортировать("РегистрБухгалтерииИмя");

				КонецЕсли;

			КонецЕсли;

			Если Метаданные.РегистрыРасчета.Содержит(МетаданныеРегистра) Тогда

				стр_Регистр = дз_ВсеРегистрыРасчета.Добавить();
				стр_Регистр.РегистрРасчетаИмя = МетаданныеРегистра.Имя;
				стр_Регистр.РегистрРасчетаСиноним = МетаданныеРегистра.Синоним;
				//стр_Регистр.РегистрРасчетаТипСтроки = "РегистрРасчета";
				//стр_Регистр.РегистрРасчетаНомерКартинки = 14;
				КолЗаписей = КоличествоЗаписейПоРегистру(МетаданныеРегистра);
				стр_Регистр.РегистрРасчетаКоличествоЗаписей = КолЗаписей;

				ПредставлениеРегистра = ?(КолЗаписей > 0, ЭтаОбработка.ПодставитьПараметрыВСтроку("%1 (%2)", МетаданныеРегистра.Имя, КолЗаписей), МетаданныеРегистра.Имя);
				стр_Регистр.РегистрРасчетаПредставление = ПредставлениеРегистра;

			КонецЕсли;

		КонецЦикла;

	КонецЕсли;

	Элементы.СтраницаДвижения.Видимость = ЭтоДокумент;

	дз_ВсеРегистрыНакопления.Строки.Сортировать("РегистрНакопленияИмя");
	дз_ВсеРегистрыСведений.Строки.Сортировать("РегистрСведенийИмя");
	дз_ВсеРегистрыБухгалтерии.Строки.Сортировать("РегистрБухгалтерииИмя");
	дз_ВсеРегистрыРасчета.Сортировать("РегистрРасчетаИмя");

	ЗначениеВРеквизитФормы(дз_ВсеРегистрыНакопления, "ВсеРегистрыНакопления");
	ЗначениеВРеквизитФормы(дз_ВсеРегистрыСведений, "ВсеРегистрыСведений");
	ЗначениеВРеквизитФормы(дз_ВсеРегистрыБухгалтерии, "ВсеРегистрыБухгалтерии");
	ЗначениеВРеквизитФормы(дз_ВсеРегистрыРасчета, "ВсеРегистрыРасчета");

КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокСтраницыРеквизиты()

	ЗаголовокСтраницы = ЭтаОбработка().ПодставитьПараметрыВСтроку("Реквизиты (%1)", РеквизитФормыВЗначение("ВсеРеквизиты").Строки.Количество());
	Элементы.СтраницаРеквизиты.Заголовок = ЗаголовокСтраницы;

КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокСтраницыТабличныеЧасти()

	ЭтаОбработка = ЭтаОбработка();

	ЗаголовокСтраницы = ЭтаОбработка.ПодставитьПараметрыВСтроку("Табличные части (%1)", РеквизитФормыВЗначение("ВсеТабличныеЧасти").Строки.Количество());
	Элементы.СтраницаТабличныеЧасти.Заголовок = ЗаголовокСтраницы;

КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокСтраницыДвижения()

	ЭтаОбработка = ЭтаОбработка();

	ЗаголовокСтраницы = ЭтаОбработка.ПодставитьПараметрыВСтроку("Регистры накопления (%1)", РеквизитФормыВЗначение("ВсеРегистрыНакопления").Строки.Количество());
	Элементы.СтраницаРегистрыНакопления.Заголовок = ЗаголовокСтраницы;

	ЗаголовокСтраницы = ЭтаОбработка.ПодставитьПараметрыВСтроку("Регистры сведений (%1)", РеквизитФормыВЗначение("ВсеРегистрыСведений").Строки.Количество());
	Элементы.СтраницаРегистрыСведений.Заголовок = ЗаголовокСтраницы;

	ЗаголовокСтраницы = ЭтаОбработка.ПодставитьПараметрыВСтроку("Регистры бухгалтерии (%1)", РеквизитФормыВЗначение("ВсеРегистрыБухгалтерии").Строки.Количество());
	Элементы.СтраницаРегистрыБухгалтерии.Заголовок = ЗаголовокСтраницы;

	ЗаголовокСтраницы = ЭтаОбработка.ПодставитьПараметрыВСтроку("Регистры расчета (%1)", ВсеРегистрыРасчета.Количество());
	Элементы.СтраницаРегистрыРасчета.Заголовок = ЗаголовокСтраницы;

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыТабличныеЧасти()

	МетаданныеОбъекта = ОбъектКонфигурации.Метаданные();

	Попытка
		ТабличныеЧастиОбъекта = МетаданныеОбъекта.ТабличныеЧасти;
		ВидимостьСтраницы = Истина;
	Исключение
		ВидимостьСтраницы = Ложь;
	КонецПопытки;

	ВидимостьСтраницы = Не (РеквизитФормыВЗначение("ВсеТабличныеЧасти").Строки.Количество() = 0);

	Элементы.СтраницаТабличныеЧасти.Видимость = ВидимостьСтраницы;

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыДвижения()

	МетаданныеОбъекта = ОбъектКонфигурации.Метаданные();

	Попытка
		ЕстьДвижения = МетаданныеОбъекта.Движения;
		ВидимостьСтраницы = Истина;
	Исключение
		ВидимостьСтраницы = Ложь;
	КонецПопытки;

	Элементы.СтраницаДвижения.Видимость = ВидимостьСтраницы;

	Если Не Элементы.СтраницаДвижения.Видимость Тогда
		Возврат;
	КонецЕсли;

	Элементы.СтраницаРегистрыНакопления.Видимость = Не (РеквизитФормыВЗначение("ВсеРегистрыНакопления").Строки.Количество() = 0);
	Элементы.СтраницаРегистрыСведений.Видимость = Не (РеквизитФормыВЗначение("ВсеРегистрыСведений").Строки.Количество() = 0);
	Элементы.СтраницаРегистрыБухгалтерии.Видимость = Не (РеквизитФормыВЗначение("ВсеРегистрыБухгалтерии").Строки.Количество() = 0);
	Элементы.СтраницаРегистрыРасчета.Видимость = Не (ВсеРегистрыРасчета.Количество() = 0);

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыРеквизиты()

	МетаданныеОбъекта = ОбъектКонфигурации.Метаданные();

	Попытка
		ЕстьРеквизиты = МетаданныеОбъекта.Реквизиты;
		ВидимостьСтраницы = Истина;
	Исключение
		ВидимостьСтраницы = Ложь;
	КонецПопытки;

	Элементы.СтраницаРеквизиты.Видимость = ВидимостьСтраницы;

КонецПроцедуры

// Отображает выбранную табличную часть элемента базы на форме.
//
// Параметры:
//	ИмяТабличнойЧасти - Строка - имя табличной части элемента базы, например: "Товары"
//
&НаСервере
Процедура ОтобразитьДанныеТабличнойЧасти(ИмяТабличнойЧасти)

	#Область Предусловия

	Если Не ЗначениеЗаполнено(ИмяТабличнойЧасти) Тогда
		Возврат;
	КонецЕсли;

	УжеОтображена = ТаблицаОбъектаУжеОтображена("ТабличнаяЧасть", ИмяТабличнойЧасти);

	Если УжеОтображена Тогда
		Возврат;
	КонецЕсли;

	#КонецОбласти

	ЭтаОбработка = ЭтаОбработка();

	// Добавить реквизиты формы относящиеся к табличной части.

	// ... добавить реквизит - динамический список самой табличной части.
	ИмяРеквизита = ИмяРеквизитаФормыТаблицаОбъекта("ТабличнаяЧасть", ИмяТабличнойЧасти);
	РеквизитДанныеТабличнойЧасти = Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("ДинамическийСписок"));

	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(РеквизитДанныеТабличнойЧасти);

	// ... добавить колонки динамического списка данных табличной части.
	ОбъектМд = ОбъектКонфигурации.Метаданные();

	Для Каждого РеквизитТабличнойЧасти Из ОбъектМд.ТабличныеЧасти[ИмяТабличнойЧасти].СтандартныеРеквизиты Цикл

		ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкиТаблицыДанныхОбъекта("ТабличнаяЧасть", ИмяТабличнойЧасти, РеквизитТабличнойЧасти.Имя);
		РеквизитКолонкаТабличнойЧасти = Новый РеквизитФормы(ИмяРеквизитаКолонка, РеквизитТабличнойЧасти.Тип);

		ДобавляемыеРеквизиты.Добавить(РеквизитКолонкаТабличнойЧасти);

	КонецЦикла;

	Для Каждого РеквизитТабличнойЧасти Из ОбъектМд.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты Цикл

		ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкиТаблицыДанныхОбъекта("ТабличнаяЧасть", ИмяТабличнойЧасти, РеквизитТабличнойЧасти.Имя);
		РеквизитКолонкаТабличнойЧасти = Новый РеквизитФормы(ИмяРеквизитаКолонка, РеквизитТабличнойЧасти.Тип);

		ДобавляемыеРеквизиты.Добавить(РеквизитКолонкаТабличнойЧасти);

	КонецЦикла;

	// ... изменить состав реквизитов формы.
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);

	// ... установить текст запроса для отображения данных табличной части.
	ТекстЗапроса = ТекстЗапросаСпискаТаблицыОбъектаКонфигурации("ТабличнаяЧасть", ИмяТабличнойЧасти);
	ЭтаФорма[ИмяРеквизита].ТекстЗапроса = ТекстЗапроса;

	// ... установить параметр динамического списка данных табличной части - отбор по ссылке на элемент.
	ЭтаФорма[ИмяРеквизита].Параметры.Элементы[0].Значение = ОбъектКонфигурации;
	ЭтаФорма[ИмяРеквизита].Параметры.Элементы[0].Использование = Истина;

	// Добавить элементы формы, относящиеся к табличной части.

	// ... добавить страницу.
	ИмяСтраницы = ИмяСтраницыТаблицыОбъекта("ТабличнаяЧасть", ИмяТабличнойЧасти);
	СтраницаДанныеТабличнойЧасти = Элементы.Добавить(ИмяСтраницы, Тип("ГруппаФормы"), Элементы.СтраницыДанныеТабличныхЧастей);

	КолЗаписейТаблЧасти = ОбъектКонфигурации[ИмяТабличнойЧасти].Количество();
	Если КолЗаписейТаблЧасти > 0 Тогда
		СтраницаДанныеТабличнойЧасти.Заголовок = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1 (%2)", ИмяТабличнойЧасти, КолЗаписейТаблЧасти);
	Иначе
		СтраницаДанныеТабличнойЧасти.Заголовок = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1", ИмяТабличнойЧасти);
	КонецЕсли;

	// ... добавить табличную часть на страницу.
	ЭлементТаблица = Элементы.Добавить(ИмяРеквизита, Тип("ТаблицаФормы"), СтраницаДанныеТабличнойЧасти);
	ЭлементТаблица.ПутьКДанным = ИмяРеквизита;
	ЭлементТаблица.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементТаблица.Заголовок = ИмяТабличнойЧасти;
	ЭлементТаблица.Видимость = Истина;

	// ... добавить колонки табличной части.
	Для Каждого РеквизитТабличнойЧасти Из ОбъектМд.ТабличныеЧасти[ИмяТабличнойЧасти].СтандартныеРеквизиты Цикл

		ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкиТаблицыДанныхОбъекта("ТабличнаяЧасть", ИмяТабличнойЧасти, РеквизитТабличнойЧасти.Имя);
		ПутьКДаннымДляКолонки = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1.%2", ИмяРеквизита, ИмяРеквизитаКолонка);

		ЭлементКолонка = Элементы.Добавить(ИмяРеквизитаКолонка, Тип("ПолеФормы"), ЭлементТаблица);
		ЭлементКолонка.Видимость = Истина;
		ЭлементКолонка.ПутьКДанным = ПутьКДаннымДляКолонки;
		ЭлементКолонка.Заголовок = РеквизитТабличнойЧасти.Имя;

		Если РеквизитТабличнойЧасти.Имя = "НомерСтроки" Тогда
			ЭлементКолонка.Заголовок = "№";
		КонецЕсли;

	КонецЦикла;

	Для Каждого РеквизитТабличнойЧасти Из ОбъектМд.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты Цикл

		ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкиТаблицыДанныхОбъекта("ТабличнаяЧасть", ИмяТабличнойЧасти, РеквизитТабличнойЧасти.Имя);
		ПутьКДаннымДляКолонки = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1.%2", ИмяРеквизита, ИмяРеквизитаКолонка);

		ЭлементКолонка = Элементы.Добавить(ИмяРеквизитаКолонка, Тип("ПолеФормы"), ЭлементТаблица);
		ЭлементКолонка.Видимость = Истина;
		ЭлементКолонка.ПутьКДанным = ПутьКДаннымДляКолонки;
		ЭлементКолонка.Заголовок = РеквизитТабличнойЧасти.Имя;

	КонецЦикла;

	// Установить обработчик событий для таблицы данных табличной части.
	ЭлементТаблица.УстановитьДействие("Выбор", "Подключаемый_ТабличнаяЧасть_Выбор");

КонецПроцедуры

&НаСервере
Процедура АктивизироватьСтраницуТаблицыОбъекта(ТипТаблицы, ИмяТаблицы)

	#Область Предусловия

	Если Не ЗначениеЗаполнено(ТипТаблицы) Тогда
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ИмяТаблицы) Тогда
		Возврат;
	КонецЕсли;

	#КонецОбласти

	ИмяСтраницы = ИмяСтраницыТаблицыОбъекта(ТипТаблицы, ИмяТаблицы);

	ИмяКоллекции = "";

	Если ТипТаблицы = "ТабличнаяЧасть" Тогда
		ИмяКоллекции = "СтраницыДанныеТабличныхЧастей";
	ИначеЕсли ТипТаблицы = "РегистрНакопления" Тогда
		ИмяКоллекции = "СтраницыДанныеРегистрыНакопления";
	ИначеЕсли ТипТаблицы = "РегистрСведений" Тогда
		ИмяКоллекции = "СтраницыДанныеРегистрыСведений";
	ИначеЕсли ТипТаблицы = "РегистрБухгалтерии" Тогда
		ИмяКоллекции = "СтраницыДанныеРегистрыБухгалтерии";
	КонецЕсли;

	Элементы[ИмяКоллекции].ТекущаяСтраница = Элементы[ИмяСтраницы];

КонецПроцедуры

&НаСервере
Процедура ОтобразитьДанныеДвиженийПоРегистру(ТипРегистра, ИмяРегистра)

	#Область Предусловия

	Если Не ЗначениеЗаполнено(ТипРегистра) Тогда
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ИмяРегистра) Тогда
		Возврат;
	КонецЕсли;

	УжеОтображена = ТаблицаДиженийОбъектаУжеОтображена(ТипРегистра, ИмяРегистра);

	Если УжеОтображена Тогда
		Возврат;
	КонецЕсли;

	#КонецОбласти

	ЭтаОбработка = ЭтаОбработка();

	// Добавить реквизиты формы.

	// ... добавить реквизит - динамический список.
	ИмяДинамическогоСписка = ИмяРеквизитаФормыТаблицаОбъекта(ТипРегистра, ИмяРегистра);
	РеквизитДанныеРегистра = Новый РеквизитФормы(ИмяДинамическогоСписка, Новый ОписаниеТипов("ДинамическийСписок"));

	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(РеквизитДанныеРегистра);

	// ... добавить колонки динамического списка данных регистра.
	ИмяКоллекции = "";

	Если ТипРегистра = "РегистрНакопления" Тогда
		ИмяКоллекции = "РегистрыНакопления";
	ИначеЕсли ТипРегистра = "РегистрСведений" Тогда
		ИмяКоллекции = "РегистрыСведений";
	ИначеЕсли ТипРегистра = "РегистрБухгалтерии" Тогда
		ИмяКоллекции = "РегистрыБухгалтерии";
	КонецЕсли;

	Для Каждого СтандартныйРеквизит Из Метаданные[ИмяКоллекции][ИмяРегистра].СтандартныеРеквизиты Цикл

		Если (ЭтоПолеСубконто(СтандартныйРеквизит.Имя)) Тогда

			СтруктураПоля = СтруктураПоляСубконто(СтандартныйРеквизит.Имя);

			//	Дебет
			ИмяПоляСубконто = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1Дт%2", СтруктураПоля.ИмяПоля, СтруктураПоля.НомерСубконто);

			ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкиТаблицыДанныхОбъекта(ТипРегистра, ИмяРегистра, ИмяПоляСубконто);
			РеквизитКолонка = Новый РеквизитФормы(ИмяРеквизитаКолонка, СтандартныйРеквизит.Тип, "");
			ДобавляемыеРеквизиты.Добавить(РеквизитКолонка);

			// Кредит
			ИмяПоляСубконто = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1Кт%2", СтруктураПоля.ИмяПоля, СтруктураПоля.НомерСубконто);

			ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкиТаблицыДанныхОбъекта(ТипРегистра, ИмяРегистра, ИмяПоляСубконто);
			РеквизитКолонка = Новый РеквизитФормы(ИмяРеквизитаКолонка, СтандартныйРеквизит.Тип, "");
			ДобавляемыеРеквизиты.Добавить(РеквизитКолонка);

			Продолжить;

		ИначеЕсли (ЭтоПолеВидаСубконто(СтандартныйРеквизит.Имя)) Тогда

			СтруктураПоля = СтруктураПоляВидаСубконто(СтандартныйРеквизит.Имя);

			//	Дебет
			ИмяПоляВидаСубконто = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1Дт%2", СтруктураПоля.ИмяПоля, СтруктураПоля.НомерСубконто);

			ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкиТаблицыДанныхОбъекта(ТипРегистра, ИмяРегистра, ИмяПоляВидаСубконто);
			РеквизитКолонка = Новый РеквизитФормы(ИмяРеквизитаКолонка, СтандартныйРеквизит.Тип, "");
			ДобавляемыеРеквизиты.Добавить(РеквизитКолонка);

			// Кредит
			ИмяПоляВидаСубконто = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1Кт%2", СтруктураПоля.ИмяПоля, СтруктураПоля.НомерСубконто);

			ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкиТаблицыДанныхОбъекта(ТипРегистра, ИмяРегистра, ИмяПоляВидаСубконто);
			РеквизитКолонка = Новый РеквизитФормы(ИмяРеквизитаКолонка, СтандартныйРеквизит.Тип, "");
			ДобавляемыеРеквизиты.Добавить(РеквизитКолонка);

			Продолжить;

		Иначе

			ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкиТаблицыДанныхОбъекта(ТипРегистра, ИмяРегистра, СтандартныйРеквизит.Имя);
			РеквизитКолонка = Новый РеквизитФормы(ИмяРеквизитаКолонка, СтандартныйРеквизит.Тип, "");
			ДобавляемыеРеквизиты.Добавить(РеквизитКолонка);

		КонецЕсли;

	КонецЦикла;

	Для Каждого Измерение Из Метаданные[ИмяКоллекции][ИмяРегистра].Измерения Цикл

		ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкиТаблицыДанныхОбъекта(ТипРегистра, ИмяРегистра, Измерение.Имя);
		РеквизитКолонка = Новый РеквизитФормы(ИмяРеквизитаКолонка, Измерение.Тип, "");

		ДобавляемыеРеквизиты.Добавить(РеквизитКолонка);

	КонецЦикла;

	Для Каждого Реквизит Из Метаданные[ИмяКоллекции][ИмяРегистра].Реквизиты Цикл

		ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкиТаблицыДанныхОбъекта(ТипРегистра, ИмяРегистра, Реквизит.Имя);
		РеквизитКолонка = Новый РеквизитФормы(ИмяРеквизитаКолонка, Реквизит.Тип, "");

		ДобавляемыеРеквизиты.Добавить(РеквизитКолонка);

	КонецЦикла;

	Для Каждого Ресурс Из Метаданные[ИмяКоллекции][ИмяРегистра].Ресурсы Цикл

		ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкиТаблицыДанныхОбъекта(ТипРегистра, ИмяРегистра, Ресурс.Имя);
		РеквизитКолонка = Новый РеквизитФормы(ИмяРеквизитаКолонка, Ресурс.Тип, "");

		ДобавляемыеРеквизиты.Добавить(РеквизитКолонка);

	КонецЦикла;

	// ... изменить состав реквизитов формы.
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);

	// ... установить текст запроса для отображения данных регистра.
	ТекстЗапроса = ТекстЗапросаСпискаТаблицыОбъектаКонфигурации(ТипРегистра, ИмяРегистра);
	ЭтаФорма[ИмяДинамическогоСписка].ТекстЗапроса = ТекстЗапроса;

	// ... установить параметр динамического списка данных регистра - отбор по ссылке на элемент.
	ИндексПараметраОтбораПоСсылке = 0;

	Если (ТипРегистра = "РегистрБухгалтерии") Тогда
		ИндексПараметраОтбораПоСсылке = 3;
	КонецЕсли;

	ЭтаФорма[ИмяДинамическогоСписка].Параметры.Элементы[ИндексПараметраОтбораПоСсылке].Значение = ОбъектКонфигурации;
	ЭтаФорма[ИмяДинамическогоСписка].Параметры.Элементы[ИндексПараметраОтбораПоСсылке].Использование = Истина;

	// Добавить элементы формы, относящиеся к регистру.

	// ... добавить страницу.
	ИмяКоллекцииСтраниц = "";

	Если ТипРегистра = "РегистрНакопления" Тогда
		ИмяКоллекцииСтраниц = "СтраницыДанныеРегистрыНакопления";
	ИначеЕсли ТипРегистра = "РегистрСведений" Тогда
		ИмяКоллекцииСтраниц = "СтраницыДанныеРегистрыСведений";
	ИначеЕсли ТипРегистра = "РегистрБухгалтерии" Тогда
		ИмяКоллекцииСтраниц = "СтраницыДанныеРегистрыБухгалтерии";
	КонецЕсли;

	ИмяСтраницы = ИмяСтраницыТаблицыОбъекта(ТипРегистра, ИмяРегистра);
	СтраницаДанныеРегистра = Элементы.Добавить(ИмяСтраницы, Тип("ГруппаФормы"), Элементы[ИмяКоллекцииСтраниц]);
	СтраницаДанныеРегистра.Заголовок = ИмяРегистра;

	// ... добавить таблицу с данными на страницу.
	ЭлементТаблица = Элементы.Добавить(ИмяДинамическогоСписка, Тип("ТаблицаФормы"), СтраницаДанныеРегистра);
	ЭлементТаблица.ПутьКДанным = ИмяДинамическогоСписка;
	ЭлементТаблица.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементТаблица.Заголовок = ИмяРегистра;
	ЭлементТаблица.Видимость = Истина;

	// ... добавить колонки табличной части.
	Для Каждого СтандартныйРеквизит Из Метаданные[ИмяКоллекции][ИмяРегистра].СтандартныеРеквизиты Цикл

		Если (ЭтоПолеСубконто(СтандартныйРеквизит.Имя)) Тогда
			
			СтруктураПоля = СтруктураПоляСубконто(СтандартныйРеквизит.Имя);
			
			// Дебет
			
			ИмяПоляСубконто = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1Дт%2", СтруктураПоля.ИмяПоля, СтруктураПоля.НомерСубконто);
				
			ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкиТаблицыДанныхОбъекта(ТипРегистра, ИмяРегистра, ИмяПоляСубконто);
			ПутьКДаннымДляКолонки = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1.%2", ИмяДинамическогоСписка, ИмяРеквизитаКолонка);

			Элемент = Элементы.Добавить(ИмяРеквизитаКолонка, Тип("ПолеФормы"), ЭлементТаблица);
			Элемент.Видимость = Истина;
			Элемент.ПутьКДанным = ПутьКДаннымДляКолонки;
			Элемент.Заголовок = ИмяПоляСубконто;
			
			// Кредит
			
			ИмяПоляСубконто = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1Кт%2", СтруктураПоля.ИмяПоля, СтруктураПоля.НомерСубконто);
				
			ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкиТаблицыДанныхОбъекта(ТипРегистра, ИмяРегистра, ИмяПоляСубконто);
			ПутьКДаннымДляКолонки = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1.%2", ИмяДинамическогоСписка, ИмяРеквизитаКолонка);

			Элемент = Элементы.Добавить(ИмяРеквизитаКолонка, Тип("ПолеФормы"), ЭлементТаблица);
			Элемент.Видимость = Истина;
			Элемент.ПутьКДанным = ПутьКДаннымДляКолонки;
			Элемент.Заголовок = ИмяПоляСубконто;
			
		ИначеЕсли (ЭтоПолеВидаСубконто(СтандартныйРеквизит.Имя)) Тогда
			
			СтруктураПоля = СтруктураПоляВидаСубконто(СтандартныйРеквизит.Имя);
			
			// Дебет
			
			ИмяПоляВидаСубконто = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1Дт%2", СтруктураПоля.ИмяПоля, СтруктураПоля.НомерСубконто);
				
			ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкиТаблицыДанныхОбъекта(ТипРегистра, ИмяРегистра, ИмяПоляВидаСубконто);
			ПутьКДаннымДляКолонки = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1.%2", ИмяДинамическогоСписка, ИмяРеквизитаКолонка);

			Элемент = Элементы.Добавить(ИмяРеквизитаКолонка, Тип("ПолеФормы"), ЭлементТаблица);
			Элемент.Видимость = Истина;
			Элемент.ПутьКДанным = ПутьКДаннымДляКолонки;
			Элемент.Заголовок = ИмяПоляВидаСубконто;
			
			// Кредит
			
			ИмяПоляВидаСубконто = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1Кт%2", СтруктураПоля.ИмяПоля, СтруктураПоля.НомерСубконто);
				
			ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкиТаблицыДанныхОбъекта(ТипРегистра, ИмяРегистра, ИмяПоляВидаСубконто);
			ПутьКДаннымДляКолонки = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1.%2", ИмяДинамическогоСписка, ИмяРеквизитаКолонка);

			Элемент = Элементы.Добавить(ИмяРеквизитаКолонка, Тип("ПолеФормы"), ЭлементТаблица);
			Элемент.Видимость = Истина;
			Элемент.ПутьКДанным = ПутьКДаннымДляКолонки;
			Элемент.Заголовок = ИмяПоляВидаСубконто;
			
		Иначе
			
			ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкиТаблицыДанныхОбъекта(ТипРегистра, ИмяРегистра, СтандартныйРеквизит.Имя);
			ПутьКДаннымДляКолонки = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1.%2", ИмяДинамическогоСписка, ИмяРеквизитаКолонка);

			Элемент = Элементы.Добавить(ИмяРеквизитаКолонка, Тип("ПолеФормы"), ЭлементТаблица);
			Элемент.Видимость = Истина;
			Элемент.ПутьКДанным = ПутьКДаннымДляКолонки;
			Элемент.Заголовок = СтандартныйРеквизит.Имя;
			
		КонецЕсли;
		
		// Установить параметры отображения поля.
		Если СтандартныйРеквизит.Имя = "НомерСтроки" Тогда
			Элемент.Заголовок = "№";
		ИначеЕсли СтандартныйРеквизит.Имя = "Активность" Тогда
			Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Элемент.Вид = ВидПоляФормы.ПолеФлажка;
		КонецЕсли;

	КонецЦикла;

	Для Каждого Измерение Из Метаданные[ИмяКоллекции][ИмяРегистра].Измерения Цикл

		ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкиТаблицыДанныхОбъекта(ТипРегистра, ИмяРегистра, Измерение.Имя);
		ПутьКДаннымДляКолонки = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1.%2", ИмяДинамическогоСписка, ИмяРеквизитаКолонка);

		Элемент = Элементы.Добавить(ИмяРеквизитаКолонка, Тип("ПолеФормы"), ЭлементТаблица);
		Элемент.Видимость = Истина;
		Элемент.ПутьКДанным = ПутьКДаннымДляКолонки;
		Элемент.Заголовок = Измерение.Имя;

		Если Измерение.Имя = "НомерСтроки" Тогда
			Элемент.Заголовок = "№";
		КонецЕсли;

		Если Измерение.Имя = "Активность" Тогда
			Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Элемент.Вид = ВидПоляФормы.ПолеФлажка;
		КонецЕсли;

	КонецЦикла;

	Для Каждого Реквизит Из Метаданные[ИмяКоллекции][ИмяРегистра].Реквизиты Цикл

		ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкиТаблицыДанныхОбъекта(ТипРегистра, ИмяРегистра, Реквизит.Имя);
		ПутьКДаннымДляКолонки = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1.%2", ИмяДинамическогоСписка, ИмяРеквизитаКолонка);

		Элемент = Элементы.Добавить(ИмяРеквизитаКолонка, Тип("ПолеФормы"), ЭлементТаблица);
		Элемент.Видимость = Истина;
		Элемент.ПутьКДанным = ПутьКДаннымДляКолонки;
		Элемент.Заголовок = Реквизит.Имя;

	КонецЦикла;

	Для Каждого Ресурс Из Метаданные[ИмяКоллекции][ИмяРегистра].Ресурсы Цикл

		ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкиТаблицыДанныхОбъекта(ТипРегистра, ИмяРегистра, Ресурс.Имя);
		ПутьКДаннымДляКолонки = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1.%2", ИмяДинамическогоСписка, ИмяРеквизитаКолонка);

		Элемент = Элементы.Добавить(ИмяРеквизитаКолонка, Тип("ПолеФормы"), ЭлементТаблица);
		Элемент.Видимость = Истина;
		Элемент.ПутьКДанным = ПутьКДаннымДляКолонки;
		Элемент.Заголовок = Ресурс.Имя;

	КонецЦикла;
	
	Если (ТипРегистра = "РегистрБухгалтерии") Тогда
		
		// TODO: Изменить расположение колонок динамического списка для отображения
		// движений по регистру бухгалтерии: колонки вида субконто и колонки субконто
		// должны располагаться в группах - в начале дебетовые колонки, затем кредиттовые.
		
	КонецЕсли;
	
	ЭлементТаблица.УстановитьДействие("Выбор", "Подключаемый_Регистр_Выбор");

КонецПроцедуры

&НаСервере
Процедура ОтменитьПроведениеДокумента()

	ОбъектБазы = ОбъектКонфигурации.ПолучитьОбъект();
	ОбъектБазы.Записать(РежимЗаписиДокумента.ОтменаПроведения);

	ЗаполнитьВсеРеквизиты();
	ЗаполнитьВсеТабличныеЧасти();
	ЗаполнитьВсеДвижения();

КонецПроцедуры

&НаСервере
Процедура ПровестиДокумент()

	ОбъектБазы = ОбъектКонфигурации.ПолучитьОбъект();
	ОбъектБазы.Записать(РежимЗаписиДокумента.Проведение);

	ЗаполнитьВсеРеквизиты();
	ЗаполнитьВсеТабличныеЧасти();
	ЗаполнитьВсеДвижения();

КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзмененияОбъекта()

	дз_ВсеРеквизиты = РеквизитФормыВЗначение("ВсеРеквизиты");
	СтрокиИзмРеквизитов = дз_ВсеРеквизиты.Строки.НайтиСтроки(Новый Структура("РеквизитИзменен", Истина), Истина);

	Если СтрокиИзмРеквизитов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ОбъектБазы = ОбъектКонфигурации.ПолучитьОбъект();

	Для каждого стр_ВсеРеквизиты Из СтрокиИзмРеквизитов Цикл
		ОбъектБазы[стр_ВсеРеквизиты.РеквизитИмя] = стр_ВсеРеквизиты.РеквизитЗначение;
	КонецЦикла;

	Если ЗаписыватьКакПриЗагрузке Тогда
		ОбъектБазы.ОбменДанными.Загрузка = Истина;
	КонецЕсли;

	ОбъектБазы.Записать();

	ЗаполнитьВсеРеквизиты();
	ЗаполнитьВсеТабличныеЧасти();
	ЗаполнитьВсеДвижения();

	Модифицированность = Ложь;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоДаннымОбъектаКонфигурации()

	ЭтаОбработка = ЭтаОбработка();

	Заголовок = ТекстЗаголовкаФормы();

	ЗаполнитьВсеРеквизиты();
	УстановитьВидимостьСтраницыРеквизиты();
	УстановитьЗаголовокСтраницыРеквизиты();

	ЗаполнитьВсеТабличныеЧасти();
	УстановитьВидимостьСтраницыТабличныеЧасти();
	УстановитьЗаголовокСтраницыТабличныеЧасти();

	ЗаполнитьВсеДвижения();
	УстановитьВидимостьСтраницыДвижения();
	УстановитьЗаголовокСтраницыДвижения();

	Элементы.НадписьОбъектКонфигурацииИнфо.Заголовок = ЭтаОбработка.ПредставлениеТипаОбъектаКонфигурации(ОбъектКонфигурации);

	// Отобразить необходимые элементы в зависимости от типа объекта.
	ОтображатьЭлементыДляДокумента = Метаданные.Документы.Содержит(ОбъектКонфигурации.Метаданные());

	Элементы.КомандаПровестиДокумент.Видимость = ОтображатьЭлементыДляДокумента;
	Элементы.КомандаОтменитьПроведениеДокумента.Видимость = ОтображатьЭлементыДляДокумента;
	Элементы.КомандаДвиженияДокумента.Видимость = ОтображатьЭлементыДляДокумента;

	// Получить навигационную ссылку на элемент.
	НавигационнаяСсылкаНаЭлемент = ПолучитьНавигационнуюСсылку(ОбъектКонфигурации);

КонецПроцедуры

&НаСервере
Процедура ПерейтиПоНавигационнойСсылкеНаЭлемент()

	#Область Предусловия

	Если (Не ЗначениеЗаполнено(НавигационнаяСсылкаНаЭлемент)) Тогда
		Возврат;
	КонецЕсли;

	#КонецОбласти

	СсылкаНаЭлемент = ЭтаОбработка().ПолучитьСсылкуНаЭлементИзНавигационнойСсылки(НавигационнаяСсылкаНаЭлемент);

	Если (Не ЗначениеЗаполнено(СсылкаНаЭлемент)) Тогда
		Возврат;
	КонецЕсли;

	ОбъектКонфигурации = СсылкаНаЭлемент;

	ЗаполнитьПоДаннымОбъектаКонфигурации();

КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваЭлементовФормы()

	Элементы.ВсеРеквизиты.ТолькоПросмотр = Не ВключенРежимРедактированияОбъекта;

КонецПроцедуры

&НаСервере
Процедура ВключитьРежимРедактированияОбъекта()

	ВключенРежимРедактированияОбъекта = Не ВключенРежимРедактированияОбъекта;
	Элементы.КомандаВключитьРежимРедактированияОбъекта.Пометка = ВключенРежимРедактированияОбъекта;

КонецПроцедуры
#КонецОбласти

#КонецОбласти

#Область Функции

#Область НаСервере

&НаСервере
Функция ЭтаОбработка()

	Результат = РеквизитФормыВЗначение("Объект");

	Возврат Результат;

КонецФункции

&НаСервере
Функция ТекстЗаголовкаФормы()

	Результат = "";
	ПустойРезультат = "";

	#Область Предусловия

	Если Не ЗначениеЗаполнено(ОбъектКонфигурации) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;

	#КонецОбласти

	Результат = ЭтаОбработка().ПодставитьПараметрыВСтроку("%1 %2", "(...)", ОбъектКонфигурации);

	Возврат Результат;

КонецФункции

&НаСервере
Функция ИмяРеквизитаФормыТаблицаОбъекта(ТипТаблицы, ИмяТаблицы)

	Результат = "";
	ПустойРезультат = "";

	#Область Предусловия

	Если Не ЗначениеЗаполнено(ТипТаблицы) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ИмяТаблицы) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;

	#КонецОбласти

	Результат = ЭтаОбработка().ПодставитьПараметрыВСтроку("%1"
		+ Объект.Система_РазделительЧастейИмен + "%2", ТипТаблицы, ИмяТаблицы);

	Возврат Результат;

КонецФункции

&НаСервере
Функция ТекстЗапросаСпискаТаблицыОбъектаКонфигурации(ТипТаблицы, ИмяТаблицы)

	Результат = "";
	ПустойРезультат = "";

	#Область Предусловия

	Если Не ЗначениеЗаполнено(ТипТаблицы) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ИмяТаблицы) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;

	#КонецОбласти

	Если (ТипТаблицы = "ТабличнаяЧасть") Тогда
		Результат = ТекстЗапросаСпискаТаблицыДанныхОбъектаКонфигурации(ТипТаблицы, ИмяТаблицы);
	ИначеЕсли (ТипТаблицы = "РегистрБухгалтерии") Тогда
		Результат = ТекстЗапросаТаблицыДвиженийРегистраБухгалтерииОбъектаКонфигурации(ТипТаблицы, ИмяТаблицы);
	Иначе
		Результат = ТекстЗапросаТаблицыДвиженийОбъектаКонфигурации(ТипТаблицы, ИмяТаблицы);
	КонецЕсли;

	Возврат Результат;

КонецФункции

// Формирует текст запроса для отображения списка указанного объекта конфигурации.
//
// Параметры:
//	ТипТаблицы - Строка, тип таблицы (например: "РегистрБухгалтерии"). 
//	ИмяТаблицы - Строка, имя таблицы (например: "ХозрасчетныйОбычныйКорр3Субконто").
//
// Возвращаемое значение:
//	Строка. Текст запроса списка таблицы.
//	
&НаСервере
Функция ТекстЗапросаСпискаТаблицыДанныхОбъектаКонфигурации(ТипТаблицы,
		ИмяТаблицы)

	Результат = "";

	ЭтаОбработка = ЭтаОбработка();

	МетаданныеОбъекта = ОбъектКонфигурации.Метаданные();

	ПолноеИмяТаблицы = ЭтаОбработка.ПолноеИмяТабличнойЧастиОбъектаМетаданных(МетаданныеОбъекта, ИмяТаблицы);
	МетаданныеТабличнойЧасти = МетаданныеОбъекта["ТабличныеЧасти"][ИмяТаблицы];

	СхемаЗапроса = Новый СхемаЗапроса;
	ЗапросСхемы = СхемаЗапроса.ПакетЗапросов[0];
	Оператор = ЗапросСхемы.Операторы[0];

	// Добавить источник в запрос.
	Оператор.Источники.Добавить(ПолноеИмяТаблицы, "Т");

	// Добавить поля в запрос.
	Для Каждого СтандартныйРеквизит Из МетаданныеТабличнойЧасти.СтандартныеРеквизиты Цикл

		СинонимПоля = ТипТаблицы + Объект.Система_РазделительЧастейИмен + ИмяТаблицы
			+ Объект.Система_РазделительЧастейИмен + СтандартныйРеквизит.Имя;

		Оператор.ВыбираемыеПоля.Добавить(СтандартныйРеквизит.Имя);

		ЗапросСхемы.Колонки[ЗапросСхемы.Колонки.Количество()
			- 1].Псевдоним = СинонимПоля;

	КонецЦикла;

	Для Каждого Реквизит Из МетаданныеТабличнойЧасти.Реквизиты Цикл

		СинонимПоля = ТипТаблицы + Объект.Система_РазделительЧастейИмен + ИмяТаблицы
			+ Объект.Система_РазделительЧастейИмен + Реквизит.Имя;

		Оператор.ВыбираемыеПоля.Добавить(Реквизит.Имя);

		ЗапросСхемы.Колонки[ЗапросСхемы.Колонки.Количество()
			- 1].Псевдоним = СинонимПоля;

	КонецЦикла;

	Оператор.Отбор.Добавить("Т.Ссылка = &Ссылка");

	Результат = СхемаЗапроса.ПолучитьТекстЗапроса();

	Возврат Результат;

КонецФункции

&НаСервере
Функция ТекстЗапросаТаблицыДвиженийРегистраБухгалтерииОбъектаКонфигурации(ТипТаблицы,
		ИмяТаблицы)

	Результат = "";

	ЭтаОбработка = ЭтаОбработка();

	МетаданныеРегистра = Метаданные.РегистрыБухгалтерии[ИмяТаблицы];

	СхемаЗапроса = Новый СхемаЗапроса;

	ЗапросСхемы = СхемаЗапроса.ПакетЗапросов[0];

	Оператор = ЗапросСхемы.Операторы[0];

	// Добавить источник в запрос.
	ПолноеИмяТаблицыРегистра = ТипТаблицы + "." + ИмяТаблицы
		+ ".ДвиженияССубконто";

	Оператор.Источники.Добавить(ПолноеИмяТаблицыРегистра, "Т");

	// Добавить поля в запрос.
	Для Каждого СтандартныйРеквизит Из МетаданныеРегистра.СтандартныеРеквизиты Цикл

		Если ЭтоПолеСубконто(СтандартныйРеквизит.Имя) Тогда

			СтруктураПоля = СтруктураПоляСубконто(СтандартныйРеквизит.Имя);

			// Дебет
			ИмяВыбираемогоПоля = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1Дт%2", СтруктураПоля.ИмяПоля, СтруктураПоля.НомерСубконто);

			СинонимПоля = ТипТаблицы + Объект.Система_РазделительЧастейИмен
				+ ИмяТаблицы + Объект.Система_РазделительЧастейИмен + ИмяВыбираемогоПоля;

			Оператор.ВыбираемыеПоля.Добавить(ИмяВыбираемогоПоля);

			ЗапросСхемы.Колонки[ЗапросСхемы.Колонки.Количество()
				- 1].Псевдоним = СинонимПоля;

				// Кредит
			ИмяВыбираемогоПоля = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1Кт%2", СтруктураПоля.ИмяПоля, СтруктураПоля.НомерСубконто);

			СинонимПоля = ТипТаблицы + Объект.Система_РазделительЧастейИмен
				+ ИмяТаблицы + Объект.Система_РазделительЧастейИмен + ИмяВыбираемогоПоля;

			Оператор.ВыбираемыеПоля.Добавить(ИмяВыбираемогоПоля);

			ЗапросСхемы.Колонки[ЗапросСхемы.Колонки.Количество()
				- 1].Псевдоним = СинонимПоля;

			Продолжить;

		ИначеЕсли ЭтоПолеВидаСубконто(СтандартныйРеквизит.Имя) Тогда

			СтруктураПоля = СтруктураПоляВидаСубконто(СтандартныйРеквизит.Имя);

			// Дебет
			ИмяВыбираемогоПоля = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1Дт%2", СтруктураПоля.ИмяПоля, СтруктураПоля.НомерСубконто);

			СинонимПоля = ТипТаблицы + Объект.Система_РазделительЧастейИмен
				+ ИмяТаблицы + Объект.Система_РазделительЧастейИмен + ИмяВыбираемогоПоля;

			Оператор.ВыбираемыеПоля.Добавить(ИмяВыбираемогоПоля);

			ЗапросСхемы.Колонки[ЗапросСхемы.Колонки.Количество()
				- 1].Псевдоним = СинонимПоля;

				// Кредит
			ИмяВыбираемогоПоля = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1Кт%2", СтруктураПоля.ИмяПоля, СтруктураПоля.НомерСубконто);

			СинонимПоля = ТипТаблицы + Объект.Система_РазделительЧастейИмен
				+ ИмяТаблицы + Объект.Система_РазделительЧастейИмен + ИмяВыбираемогоПоля;

			Оператор.ВыбираемыеПоля.Добавить(ИмяВыбираемогоПоля);

			ЗапросСхемы.Колонки[ЗапросСхемы.Колонки.Количество()
				- 1].Псевдоним = СинонимПоля;

			Продолжить;

		Иначе

			ИмяВыбираемогоПоля = СтандартныйРеквизит.Имя;

			СинонимПоля = ТипТаблицы + Объект.Система_РазделительЧастейИмен
				+ ИмяТаблицы + Объект.Система_РазделительЧастейИмен
				+ СтандартныйРеквизит.Имя;

		КонецЕсли;

		Оператор.ВыбираемыеПоля.Добавить(ИмяВыбираемогоПоля);

		ЗапросСхемы.Колонки[ЗапросСхемы.Колонки.Количество()
			- 1].Псевдоним = СинонимПоля;

	КонецЦикла;

	Для Каждого Измерение Из МетаданныеРегистра.Измерения Цикл

		СинонимПоля = ТипТаблицы + Объект.Система_РазделительЧастейИмен + ИмяТаблицы
			+ Объект.Система_РазделительЧастейИмен + Измерение.Имя;

		Оператор.ВыбираемыеПоля.Добавить(Измерение.Имя);

		ЗапросСхемы.Колонки[ЗапросСхемы.Колонки.Количество()
			- 1].Псевдоним = СинонимПоля;

	КонецЦикла;

	Для Каждого Реквизит Из МетаданныеРегистра.Реквизиты Цикл

		СинонимПоля = ТипТаблицы + Объект.Система_РазделительЧастейИмен + ИмяТаблицы
			+ Объект.Система_РазделительЧастейИмен + Реквизит.Имя;

		Оператор.ВыбираемыеПоля.Добавить(Реквизит.Имя);

		ЗапросСхемы.Колонки[ЗапросСхемы.Колонки.Количество()
			- 1].Псевдоним = СинонимПоля;

	КонецЦикла;

	Для Каждого Ресурс Из МетаданныеРегистра.Ресурсы Цикл

		СинонимПоля = ТипТаблицы + Объект.Система_РазделительЧастейИмен + ИмяТаблицы
			+ Объект.Система_РазделительЧастейИмен + Ресурс.Имя;

		Оператор.ВыбираемыеПоля.Добавить(Ресурс.Имя);

		ЗапросСхемы.Колонки[ЗапросСхемы.Колонки.Количество()
			- 1].Псевдоним = СинонимПоля;

	КонецЦикла;

	Оператор.Отбор.Добавить("Т.Регистратор = &Ссылка");

	Результат = СхемаЗапроса.ПолучитьТекстЗапроса();

	Возврат Результат;

КонецФункции

&НаСервере
Функция ТекстЗапросаТаблицыДвиженийОбъектаКонфигурации(ТипТаблицы, ИмяТаблицы)

	Результат = "";

	Если ТипТаблицы = "РегистрНакопления" Тогда
		МетаданныеРегистра = Метаданные.РегистрыНакопления[ИмяТаблицы];
	ИначеЕсли ТипТаблицы = "РегистрСведений" Тогда
		МетаданныеРегистра = Метаданные.РегистрыСведений[ИмяТаблицы];
	ИначеЕсли ТипТаблицы = "РегистрРасчета" Тогда
		МетаданныеРегистра = Метаданные.РегистрыРасчета[ИмяТаблицы];
	КонецЕсли;

	СхемаЗапроса = Новый СхемаЗапроса;

	ЗапросСхемы = СхемаЗапроса.ПакетЗапросов[0];

	Оператор = ЗапросСхемы.Операторы[0];

	// Добавить источник в запрос.
	ПолноеИмяТаблицыРегистра = ТипТаблицы + "." + ИмяТаблицы;
	Оператор.Источники.Добавить(ПолноеИмяТаблицыРегистра, "Т");

	// Добавить поля в запрос.
	Для Каждого СтандартныйРеквизит Из МетаданныеРегистра.СтандартныеРеквизиты Цикл

		СинонимПоля = ТипТаблицы + Объект.Система_РазделительЧастейИмен + ИмяТаблицы
			+ Объект.Система_РазделительЧастейИмен + СтандартныйРеквизит.Имя;

		Оператор.ВыбираемыеПоля.Добавить(СтандартныйРеквизит.Имя);

		ЗапросСхемы.Колонки[ЗапросСхемы.Колонки.Количество()
			- 1].Псевдоним = СинонимПоля;

	КонецЦикла;

	Для Каждого Измерение Из МетаданныеРегистра.Измерения Цикл

		СинонимПоля = ТипТаблицы + Объект.Система_РазделительЧастейИмен + ИмяТаблицы
			+ Объект.Система_РазделительЧастейИмен + Измерение.Имя;

		Оператор.ВыбираемыеПоля.Добавить(Измерение.Имя);

		ЗапросСхемы.Колонки[ЗапросСхемы.Колонки.Количество()
			- 1].Псевдоним = СинонимПоля;

	КонецЦикла;

	Для Каждого Реквизит Из МетаданныеРегистра.Реквизиты Цикл

		СинонимПоля = ТипТаблицы + Объект.Система_РазделительЧастейИмен + ИмяТаблицы
			+ Объект.Система_РазделительЧастейИмен + Реквизит.Имя;

		Оператор.ВыбираемыеПоля.Добавить(Реквизит.Имя);

		ЗапросСхемы.Колонки[ЗапросСхемы.Колонки.Количество()
			- 1].Псевдоним = СинонимПоля;

	КонецЦикла;

	Для Каждого Ресурс Из МетаданныеРегистра.Ресурсы Цикл

		СинонимПоля = ТипТаблицы + Объект.Система_РазделительЧастейИмен + ИмяТаблицы
			+ Объект.Система_РазделительЧастейИмен + Ресурс.Имя;

		Оператор.ВыбираемыеПоля.Добавить(Ресурс.Имя);

		ЗапросСхемы.Колонки[ЗапросСхемы.Колонки.Количество()
			- 1].Псевдоним = СинонимПоля;

	КонецЦикла;

	Оператор.Отбор.Добавить("Т.Регистратор = &Ссылка");

	Результат = СхемаЗапроса.ПолучитьТекстЗапроса();

	Возврат Результат;

КонецФункции

// Имя реквизита формы колонки табличной части.
//
// Параметры:
//	ТипТаблицы - Строка, имя табличной части (например: "ТабличнаяЧасть"). 
//	ИмяТаблицы - Строка, имя таблицы (например: "Товары").
//	ИмяРеквизитаТаблицы - Строка, имя реквизита таблицы (например: "Номенклатура").
//
// Возвращаемое значение:
//	Строка. Имя реквизита формы колонки таблицы данных объекта (например: "Товары_Номенклатура").
//
&НаСервере
Функция ИмяРеквизитаФормыКолонкиТаблицыДанныхОбъекта(ТипТаблицы, ИмяТаблицы,
		ИмяРеквизитаТаблицы)

	Результат = "";

	Результат = ТипТаблицы + Объект.Система_РазделительЧастейИмен + ИмяТаблицы
		+ Объект.Система_РазделительЧастейИмен + ИмяРеквизитаТаблицы;

	Возврат Результат;

КонецФункции

&НаСервере
Функция ИмяСтраницыТаблицыОбъекта(ТипТаблицы, ИмяТаблицы)

	Результат = "";
	ПустойРезультат = "";

	#Область Предусловия

	Если Не ЗначениеЗаполнено(ИмяТаблицы) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;

	#КонецОбласти

	ЭтаОбработка = ЭтаОбработка();

	Результат = ЭтаОбработка.ПодставитьПараметрыВСтроку("Страница"
		+ Объект.Система_РазделительЧастейИмен + "%1"
		+ Объект.Система_РазделительЧастейИмен + "%2", ТипТаблицы, ИмяТаблицы);

	Возврат Результат;

КонецФункции

&НаСервере
Функция ТаблицаОбъектаУжеОтображена(ТипТаблицы, ИмяТаблицы)

	#Область Предусловия

	Если (Не ЗначениеЗаполнено(ИмяТаблицы)) Тогда
		Возврат Ложь;
	КонецЕсли;

	#КонецОбласти

	ИмяРеквизита = ИмяРеквизитаФормыТаблицаОбъекта(ТипТаблицы, ИмяТаблицы);

	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить(ИмяРеквизита, Неопределено);

	ЗаполнитьЗначенияСвойств(СтруктураПоиска, ЭтаФорма);

	Если (СтруктураПоиска[ИмяРеквизита] = Неопределено) Тогда
		Возврат Ложь;
	КонецЕсли;

	Возврат Истина;

КонецФункции

&НаСервере
Функция ТаблицаДиженийОбъектаУжеОтображена(ТипТаблицы, ИмяТаблицы)

	#Область Предусловия

	Если (Не ЗначениеЗаполнено(ИмяТаблицы)) Тогда
		Возврат Ложь;
	КонецЕсли;

	#КонецОбласти

	ИмяРеквизита = ИмяРеквизитаФормыТаблицаОбъекта(ТипТаблицы, ИмяТаблицы);

	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить(ИмяРеквизита, Неопределено);

	ЗаполнитьЗначенияСвойств(СтруктураПоиска, ЭтаФорма);

	Если (СтруктураПоиска[ИмяРеквизита] = Неопределено) Тогда
		Возврат Ложь;
	КонецЕсли;

	Возврат Истина;

КонецФункции

&НаСервере
Функция КоличествоЗаписейПоРегистру(РегистрМд)

	Результат = 0;
	ПустойРезультат = 0;

	#Область Предусловия

	Если РегистрМд = Неопределено Тогда
		Возврат ПустойРезультат;
	КонецЕсли;

	#КонецОбласти

	Если Метаданные.РегистрыНакопления.Содержит(РегистрМд) Тогда
		ИмяТипаРегистра = "РегистрНакопления";
	ИначеЕсли Метаданные.РегистрыСведений.Содержит(РегистрМд) Тогда
		ИмяТипаРегистра = "РегистрСведений";
	ИначеЕсли Метаданные.РегистрыБухгалтерии.Содержит(РегистрМд) Тогда
		ИмяТипаРегистра = "РегистрБухгалтерии";
	ИначеЕсли Метаданные.РегистрыРасчета.Содержит(РегистрМд) Тогда
		ИмяТипаРегистра = "РегистрРасчета";
	Иначе
		Возврат ПустойРезультат;
	КонецЕсли;

	ТекстЗапроса = ЭтаОбработка().ПодставитьПараметрыВСтроку("ВЫБРАТЬ
		|	КОЛИЧЕСТВО(*) КАК Количество
		|ИЗ
		|	%1.%2 КАК Т
		|ГДЕ
		|	Т.Регистратор = &Регистратор", ИмяТипаРегистра, РегистрМд.Имя);

	Запрос = Новый Запрос();
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Регистратор", ОбъектКонфигурации);

	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	Результат = Выборка.Количество;

	Возврат Результат;

КонецФункции

&НаСервере
Функция ПолноеИмяФормыОбработки(ИмяТекущейФормы, ИмяФормыОбработки)

	Результат = ЭтаОбработка().ПолноеИмяФормыОбработки(ИмяТекущейФормы, ИмяФормыОбработки);

	Возврат Результат;

КонецФункции

&НаСервере
Функция СсылкаНаОбъект()

	Результат = Неопределено;
	ПустойРезультат = Неопределено;

	Попытка
		Результат = ОбъектКонфигурации.Ссылка;
	Исключение
		Возврат ПустойРезультат;
	КонецПопытки;

	Возврат Результат;

КонецФункции

&НаСервере
Функция ЭтоПолеСубконто(ИмяПоляРегистраБухгалтерии)

	#Область Предусловия

	Если (Не ЗначениеЗаполнено(ИмяПоляРегистраБухгалтерии)) Тогда
		Возврат Ложь;
	КонецЕсли;

	#КонецОбласти

	Если Не (Лев(ИмяПоляРегистраБухгалтерии, СтрДлина("Субконто")) = "Субконто") Тогда
		Возврат Ложь;
	КонецЕсли;

	Возврат Истина;

КонецФункции

&НаСервере
Функция ЭтоПолеВидаСубконто(ИмяПоляРегистраБухгалтерии)

	#Область Предусловия

	Если Не ЗначениеЗаполнено(ИмяПоляРегистраБухгалтерии) Тогда
		Возврат Ложь;
	КонецЕсли;

	#КонецОбласти

	Если Не (Лев(ИмяПоляРегистраБухгалтерии, СтрДлина("ВидСубконто")) = "ВидСубконто") Тогда
		Возврат Ложь;
	КонецЕсли;

	Возврат Истина;

КонецФункции

&НаСервере
Функция СтруктураПоляСубконто(Знач ИмяПоляСубконто)

	Результат = Новый Структура("ИмяПоля, НомерСубконто");
	Результат.ИмяПоля = "Субконто";
	Результат.НомерСубконто = СтрЗаменить(ИмяПоляСубконто, "Субконто", "");

	Возврат Результат;

КонецФункции

&НаСервере
Функция СтруктураПоляВидаСубконто(Знач ИмяПоляВидаСубконто)

	Результат = Новый Структура("ИмяПоля, НомерСубконто");
	Результат.ИмяПоля = "ВидСубконто";
	Результат.НомерСубконто = СтрЗаменить(ИмяПоляВидаСубконто, "ВидСубконто", "");

	Возврат Результат;

КонецФункции
#КонецОбласти

#КонецОбласти
