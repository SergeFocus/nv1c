#Область Форма

#Область События

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	#Область Предусловия
	
	Если Не ТипЗнч(Параметры.ОбъектКонфигурации) = Тип("ДанныеФормыСтруктура") Тогда
		
		Если Не ЗначениеЗаполнено(Параметры.ОбъектКонфигурации) Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Попытка
		ОбъектМд = Параметры.ОбъектКонфигурации.Метаданные();
	Исключение
		Отказ = Истина;
		Возврат;
	КонецПопытки;
	
	#КонецОбласти
	
	ЭтаОбработка = ЭтаОбработка();
	
	ОбъектКонфигурации = Параметры.ОбъектКонфигурации;
	Заголовок = ТекстЗаголовкаФормы();
	
	ЗаполнитьВсеРеквизиты();
	УстановитьВидимостьСтраницыРеквизиты();
	УстановитьЗаголовокСтраницыРеквизиты();
	
	ЗаполнитьВсеТабличныеЧасти();
	УстановитьВидимостьСтраницыТабличныеЧасти();
	УстановитьЗаголовокСтраницыТабличныеЧасти();
	
	ЗаполнитьВсеДвижения();
	УстановитьВидимостьСтраницыДвижения();
	УстановитьЗаголовокСтраницыДвижения();
	
	Элементы.НадписьОбъектКонфигурацииИнфо.Заголовок = ЭтаОбработка.ПредставлениеТипаОбъектаКонфигурации(ОбъектКонфигурации);
	
	Если Не Метаданные.Документы.Содержит(ОбъектКонфигурации.Метаданные()) Тогда
		
		Элементы.КомандаПровестиДокумент.Видимость = Ложь;
		Элементы.КомандаОтменитьПроведениеДокумента.Видимость = Ложь;
		Элементы.КомандаДвиженияДокумента.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Элементы
#КонецОбласти

#Область Таблицы

#Область ДанныеСвойства

#Область События

&НаКлиенте
Процедура ВсеРеквизитыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	#Область Предусловия
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	Если Элемент.ТекущиеДанные.РеквизитИмя = "Ссылка" Тогда
		ПоказатьЗначение(, Элемент.ТекущиеДанные.РеквизитЗначение);
	Иначе
		ПараметрыФормы = Новый Структура("ОбъектКонфигурации", Элемент.ТекущиеДанные.РеквизитЗначение);
		ПолноеИмяФормы = ПолноеИмяФормыОбработки(ЭтаФорма.ИмяФормы, "ФормаРедакторОбъекта");
		ОткрытьФорму(ПолноеИмяФормы, ПараметрыФормы, ЭтаФорма, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Команды
#КонецОбласти

#КонецОбласти

#Область ВсеТабличныеЧасти

#Область События

&НаКлиенте
Процедура ВсеТабличныеЧастиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	#Область Предусловия
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не (ТекущиеДанные.ТабличнаяЧастьТипСтроки = "ТабличнаяЧасть") Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ПриВыбореСтрокиВсеТабличныеЧасти(ТекущиеДанные.ТабличнаяЧастьИмя);
	
КонецПроцедуры
	
#КонецОбласти

#КонецОбласти

#Область ВсеРегистрыНакопления

#Область События

&НаКлиенте
Процедура ВсеРегистрыНакопленияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	#Область Предусловия
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ПриВыбореСтрокиВсеРегистрыНакопления(Элемент.ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти 

#КонецОбласти 

#Область ВсеРегистрыСведений

#Область События

&НаКлиенте
Процедура ВсеРегистрыСведенийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	#Область Предусловия
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ПриВыбореСтрокиВсеРегистрыСведений(Элемент.ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти 

#Область ВсеРегистрыБухгалтерии

#Область События

&НаКлиенте
Процедура ВсеРегистрыБухгалтерииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	#Область Предусловия
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ПриВыбореСтрокиВсеРегистрыБухгалтерии(Элемент.ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура КомандаСтруктураПодчиненности(Команда)
	
	СтруктураПодчиненности();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаДвиженияДокумента(Команда)
	
	ДвиженияДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписатьИзмененияОбъекта(Команда)
	
	ЗаписатьИзмененияОбъекта();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаИзменитьЗначениеРеквизита(Команда)
	
	ИзменитьЗначениеРеквизита();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьОбъект(Команда)
	
	СсылкаНаОбъект = СсылкаНаОбъект();
	
	Если СсылкаНаОбъект = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, СсылкаНаОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПровестиДокумент(Команда)
	
	ПровестиДокумент();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтменитьПроведениеДокумента(Команда)
	
	ОтменитьПроведениеДокумента();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Оповещения
#КонецОбласти

#Область Подключаемые
#КонецОбласти

#Область Процедуры

#Область НаКлиенте

&НаКлиенте
Процедура ПриВыбореСтрокиВсеТабличныеЧасти(ИмяТабличнойЧасти)
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ИмяТабличнойЧасти) Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ОтобразитьДанныеТабличнойЧасти(ИмяТабличнойЧасти);
	АктивизироватьСтраницуТаблицыОбъекта("ТабличнаяЧасть", ИмяТабличнойЧасти);
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриВыбореСтрокиВсеРегистрыНакопления(СвойстваРегистра)
	
	#Область Предусловия
	
	Если СвойстваРегистра = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ОтобразитьДанныеРегистра("РегистрНакопления", СвойстваРегистра.РегистрНакопленияИмя);
	АктивизироватьСтраницуТаблицыОбъекта("РегистрНакопления", СвойстваРегистра.РегистрНакопленияИмя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореСтрокиВсеРегистрыСведений(СвойстваРегистра)
	
	#Область Предусловия
	
	Если СвойстваРегистра = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ОтобразитьДанныеРегистра("РегистрСведений", СвойстваРегистра.РегистрСведенийИмя);
	АктивизироватьСтраницуТаблицыОбъекта("РегистрСведений", СвойстваРегистра.РегистрСведенийИмя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореСтрокиВсеРегистрыБухгалтерии(СвойстваРегистра)
	
	ОтобразитьДанныеРегистра("РегистрБухгалтерии", СвойстваРегистра.РегистрБухгалтерииИмя);
	АктивизироватьСтраницуТаблицыОбъекта("РегистрБухгалтерии", СвойстваРегистра.РегистрБухгалтерииИмя);
	
КонецПроцедуры

&НаКлиенте
Процедура ДвиженияДокумента()
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ОбъектКонфигурации) Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	Попытка
		ОткрытьФорму("Отчет.ДвиженияДокумента.Форма.ФормаОтчета", Новый Структура("Документ", ОбъектКонфигурации), ЭтаФорма);
	Исключение
		//
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура СтруктураПодчиненности()
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ОбъектКонфигурации) Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	Попытка
		ОткрытьФорму("ОбщаяФорма.СтруктураПодчиненности", Новый Структура("ОбъектОтбора", ОбъектКонфигурации), ЭтаФорма);
	Исключение
		//
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЗначениеРеквизита()
	
	ТекущиеДанные = Элементы.ВсеРеквизиты.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗначениеРеквизита = ТекущиеДанные.РеквизитЗначение;
	
	ПараметрыРедактирования = Новый Структура("РеквизитИмя, РеквизитЗначение");
	ЗаполнитьЗначенияСвойств(ПараметрыРедактирования, ТекущиеДанные);
	
	Оповещение = Новый ОписаниеОповещения("ИзменитьЗначениеРеквизитаЗавершение", ЭтотОбъект, ПараметрыРедактирования);
	ПоказатьВводЗначения(Оповещение, ЗначениеРеквизита);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЗначениеРеквизитаЗавершение(Значение, ПараметрыРедактирования) Экспорт
	
	//#Область Предусловия
	//
	//Если Значение = Неопределено Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Если (Значение = ПараметрыРедактирования.РеквизитЗначение) Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//#КонецОбласти
	//
	//Строки = ВсеРеквизиты.НайтиСтроки(Новый Структура("РеквизитИмя", ПараметрыРедактирования.РеквизитИмя));
	//
	//Если Строки.Количество() = 0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Строки[0].РеквизитЗначение = Значение;
	//Строки[0].РеквизитИзменен = Истина;
	
КонецПроцедуры

#Область Подключаемые

&НаКлиенте
Процедура Подключаемый_Регистр_Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Если Поле.Имя = "НомерСтроки" Тогда
		
		// Сделать:
		// Сформировать структру данных и передать в форму редактора.
		
	Иначе
		ПараметрыФормы = Новый Структура("ОбъектКонфигурации", Элемент.ТекущиеДанные[Поле.Имя]);
	КонецЕсли;
	
	ПолноеИмяФормы = ПолноеИмяФормыОбработки(ЭтаФорма.ИмяФормы, "ФормаРедакторОбъекта");
	ОткрытьФорму(ПолноеИмяФормы, ПараметрыФормы, ЭтаФорма, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ТабличнаяЧасть_Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	#Область Предусловия
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ПараметрыФормы = Новый Структура("ОбъектКонфигурации", ТекущиеДанные[Поле.Имя]);
	
	ПолноеИмяФормы = ПолноеИмяФормыОбработки(ЭтаФорма.ИмяФормы, "ФормаРедакторОбъекта");
	ОткрытьФорму(ПолноеИмяФормы, ПараметрыФормы, ЭтаФорма, Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область НаСервере

&НаСервере
Процедура ЗаполнитьВсеРеквизиты()
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ОбъектКонфигурации) Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектМд = ОбъектКонфигурации.Метаданные();
	
	Если Метаданные.Перечисления.Содержит(ОбъектМд) Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ЭтаОбработка = ЭтаОбработка();
	
	дз_ВсеРеквизиты = РеквизитФормыВЗначение("ВсеРеквизиты");
	дз_ВсеРеквизиты.Строки.Очистить();
	
	Если ОбъектМд.СтандартныеРеквизиты.Количество() > 0 Тогда
		
		ПорядокСортировки = 0;
		
		стр_СтРеквизиты = дз_ВсеРеквизиты.Строки.Добавить();
		стр_СтРеквизиты.РеквизитИмя               = "СтандартныеРеквизиты";
		стр_СтРеквизиты.РеквизитПредставление     = ЭтаОбработка.ПодставитьПараметрыВСтроку("СтандартныеРеквизиты (%1)", ОбъектМд.СтандартныеРеквизиты.Количество());
		стр_СтРеквизиты.РеквизитПорядокСортировки = ПорядокСортировки;
		стр_СтРеквизиты.РеквизитЭтоСтандартный    = Истина;
		стр_СтРеквизиты.РеквизитНомерКартинки     = 44;
		стр_СтРеквизиты.РеквизитТипСтроки         = "СтандартныеРеквизиты";
		
		Для каждого СтандартныйРеквизит Из ОбъектМд.СтандартныеРеквизиты Цикл
			
			ПорядокСортировки = ПорядокСортировки + 1;
			
			стр_СтРеквизит = стр_СтРеквизиты.Строки.Добавить();
			стр_СтРеквизит.РеквизитИмя               = СтандартныйРеквизит.Имя;
			стр_СтРеквизит.РеквизитПредставление     = СтандартныйРеквизит.Имя;
			стр_СтРеквизит.РеквизитТип               = СтандартныйРеквизит.Тип;
			стр_СтРеквизит.РеквизитПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(СтандартныйРеквизит.Тип);
			стр_СтРеквизит.РеквизитСиноним           = СтандартныйРеквизит.Синоним;
			стр_СтРеквизит.РеквизитЗначение          = ОбъектКонфигурации[СтандартныйРеквизит.Имя];
			стр_СтРеквизит.РеквизитПорядокСортировки = ПорядокСортировки;
			стр_СтРеквизит.РеквизитЭтоСтандартный    = Истина;
			стр_СтРеквизит.РеквизитНомерКартинки     = 44;
			стр_СтРеквизит.РеквизитТипСтроки         = "СтандартныйРеквизит";
			
		КонецЦикла;
		
		стр_СтРеквизиты.Строки.Сортировать("РеквизитИмя");
		
	КонецЕсли;
	
	Если ОбъектМд.Реквизиты.Количество() > 0 Тогда
		
		стр_Реквизиты = дз_ВсеРеквизиты.Строки.Добавить();
		стр_Реквизиты.РеквизитИмя = "Реквизиты";
		стр_Реквизиты.РеквизитПредставление     = ЭтаОбработка.ПодставитьПараметрыВСтроку("Реквизиты (%1)", ОбъектМд.Реквизиты.Количество());
		стр_Реквизиты.РеквизитПорядокСортировки = ПорядокСортировки;
		стр_Реквизиты.РеквизитЭтоСтандартный    = Истина;
		стр_Реквизиты.РеквизитНомерКартинки     = 45;
		стр_Реквизиты.РеквизитТипСтроки         = "Реквизиты";
		
		Для каждого Реквизит Из ОбъектМд.Реквизиты Цикл
			
			стр_Реквизит = стр_Реквизиты.Строки.Добавить();
			стр_Реквизит.РеквизитИмя               = Реквизит.Имя;
			стр_Реквизит.РеквизитПредставление     = Реквизит.Имя;
			стр_Реквизит.РеквизитТип               = Реквизит.Тип;
			стр_Реквизит.РеквизитПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(Реквизит.Тип);
			стр_Реквизит.РеквизитСиноним           = Реквизит.Синоним;
			стр_Реквизит.РеквизитКомментарий       = Реквизит.Комментарий;
			стр_Реквизит.РеквизитЗначение          = ОбъектКонфигурации[Реквизит.Имя];
			стр_Реквизит.РеквизитПорядокСортировки = ОбъектМд.Реквизиты.Количество();
			стр_Реквизит.РеквизитНомерКартинки     = 45;
			стр_Реквизит.РеквизитУдалить           = Врег(Лев(Реквизит.Имя, СтрДлина("Удалить"))) = Врег("Удалить");
			
		КонецЦикла;
		
		стр_Реквизиты.Строки.Сортировать("РеквизитИмя");
		
	КонецЕсли;
	
	дз_ВсеРеквизиты.Строки.Сортировать("РеквизитПорядокСортировки, РеквизитИмя");
	
	ЗначениеВРеквизитФормы(дз_ВсеРеквизиты, "ВсеРеквизиты");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВсеТабличныеЧасти()

	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ОбъектКонфигурации) Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектМд = ОбъектКонфигурации.Метаданные();
	
	Попытка
		ТЧ = ОбъектМд.ТабличныеЧасти;
	Исключение
		Возврат;
	КонецПопытки;
	
	#КонецОбласти
	
	ЭтаОбработка = ЭтаОбработка();
	
	дз_ВсеТабличныеЧасти = РеквизитФормыВЗначение("ВсеТабличныеЧасти");
	дз_ВсеТабличныеЧасти.Строки.Очистить();
	
	Для каждого ТаблЧастьМд Из ОбъектМд.ТабличныеЧасти Цикл
		
		стр_ТабличнаяЧасть = дз_ВсеТабличныеЧасти.Строки.Добавить();
		стр_ТабличнаяЧасть.ТабличнаяЧастьИмя = ТаблЧастьМд.Имя;
		стр_ТабличнаяЧасть.ТабличнаяЧастьСиноним = ТаблЧастьМд.Синоним;
		
		КоличествоСтрокТаблЧасти = ОбъектКонфигурации[ТаблЧастьМд.Имя].Количество();
		стр_ТабличнаяЧасть.ТабличнаяЧастьКоличествоСтрок = КоличествоСтрокТаблЧасти;
		
		стр_ТабличнаяЧасть.ТабличнаяЧастьНомерКартинки = 46;
		стр_ТабличнаяЧасть.ТабличнаяЧастьТипСтроки = "ТабличнаяЧасть";
		
		ПредставлениеТаблЧасти = ?(КоличествоСтрокТаблЧасти > 0, 
			ЭтаОбработка.ПодставитьПараметрыВСтроку("%1 (%2)", 
			ТаблЧастьМд.Имя, КоличествоСтрокТаблЧасти), ТаблЧастьМд.Имя
		);
		
		стр_ТабличнаяЧасть.ТабличнаяЧастьПредставление = ПредставлениеТаблЧасти;
		
		Для каждого РеквизитТаблЧасти Из ТаблЧастьМд.Реквизиты Цикл
			
			стр_Реквизит = стр_ТабличнаяЧасть.Строки.Добавить();
			стр_Реквизит.ТабличнаяЧастьИмя = РеквизитТаблЧасти.Имя;
			стр_Реквизит.ТабличнаяЧастьПредставление = РеквизитТаблЧасти.Имя;
			стр_Реквизит.ТабличнаяЧастьПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(РеквизитТаблЧасти.Тип);
			стр_Реквизит.ТабличнаяЧастьСиноним = РеквизитТаблЧасти.Синоним;
			стр_Реквизит.ТабличнаяЧастьКомментарий = РеквизитТаблЧасти.Комментарий;
			стр_Реквизит.ТабличнаяЧастьНомерКартинки = 45;
			стр_Реквизит.ТабличнаяЧастьТипСтроки = "Реквизит";
			
		КонецЦикла; 
		
	КонецЦикла;
	
	дз_ВсеТабличныеЧасти.Строки.Сортировать("ТабличнаяЧастьИмя");
	
	ЗначениеВРеквизитФормы(дз_ВсеТабличныеЧасти, "ВсеТабличныеЧасти");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВсеДвижения()
	
	#Область Предусловия
	
	ОбъектМд = ОбъектКонфигурации.Метаданные();
	
	Если Не Метаданные.Документы.Содержит(ОбъектМд) Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ЭтаОбработка = ЭтаОбработка();
	
	дз_ВсеРегистрыНакопления = РеквизитФормыВЗначение("ВсеРегистрыНакопления");
	дз_ВсеРегистрыНакопления.Строки.Очистить();
	
	дз_ВсеРегистрыСведений = РеквизитФормыВЗначение("ВсеРегистрыСведений");
	дз_ВсеРегистрыСведений.Строки.Очистить();
	
	Для каждого РегистрМд Из ОбъектМд.Движения Цикл
		
		Если Метаданные.РегистрыНакопления.Содержит(РегистрМд) Тогда
			
			стр_Регистр = дз_ВсеРегистрыНакопления.Строки.Добавить();
			стр_Регистр.РегистрНакопленияИмя           = РегистрМд.Имя;
			стр_Регистр.РегистрНакопленияСиноним       = РегистрМд.Синоним;
			стр_Регистр.РегистрНакопленияВид           = РегистрМд.ВидРегистра;
			стр_Регистр.РегистрНакопленияТипСтроки     = "РегистрНакопления";
			стр_Регистр.РегистрНакопленияНомерКартинки = 14;
			
			КолЗаписей = КоличествоЗаписейПоРегистру(РегистрМд);
			стр_Регистр.РегистрНакопленияКоличествоЗаписей = КолЗаписей;
			
			ПредставлениеРегистра = ?(КолЗаписей > 0, ЭтаОбработка.ПодставитьПараметрыВСтроку("%1 (%2)", РегистрМд.Имя, КолЗаписей), РегистрМд.Имя);
			стр_Регистр.РегистрНакопленияПредставление = ПредставлениеРегистра;
			
			стр_СтРеквизиты = стр_Регистр.Строки.Добавить();
			стр_СтРеквизиты.РегистрНакопленияИмя           = "СтандартныеРеквизиты";
			стр_СтРеквизиты.РегистрНакопленияПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("СтандартныеРеквизиты (%1)", РегистрМд.СтандартныеРеквизиты.Количество());
			стр_СтРеквизиты.РегистрНакопленияНомерКартинки = 44;
			стр_СтРеквизиты.РегистрНакопленияТипСтроки     = "СтандартныеРеквизиты";
			
			Для каждого СтРеквизит Из РегистрМд.СтандартныеРеквизиты Цикл
				
				стр_СтРеквизит = стр_СтРеквизиты.Строки.Добавить();
				стр_СтРеквизит.РегистрНакопленияИмя           = СтРеквизит.Имя;
				стр_СтРеквизит.РегистрНакопленияПредставление = СтРеквизит.Имя;
				стр_СтРеквизит.РегистрНакопленияСиноним       = СтРеквизит.Синоним;
				стр_СтРеквизит.РегистрНакопленияКомментарий   = СтРеквизит.Комментарий;
				стр_СтРеквизит.РегистрНакопленияНомерКартинки = 44;
				стр_СтРеквизит.РегистрНакопленияТипСтроки     = "СтандартныйРеквизит";
				стр_СтРеквизит.РегистрНакопленияПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(СтРеквизит.Тип);
				
			КонецЦикла;
			
			стр_СтРеквизиты.Строки.Сортировать("РегистрНакопленияИмя");
			
			стр_Измерения = стр_Регистр.Строки.Добавить();
			стр_Измерения.РегистрНакопленияИмя           = "Измерения";
			стр_Измерения.РегистрНакопленияПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("Измерения (%1)", РегистрМд.Измерения.Количество());
			стр_Измерения.РегистрНакопленияНомерКартинки = 47;
			стр_Измерения.РегистрНакопленияТипСтроки     = "Измерения";
			
			Для каждого Измерение Из РегистрМд.Измерения Цикл
				
				стр_Измерение = стр_Измерения.Строки.Добавить();
				стр_Измерение.РегистрНакопленияИмя           = Измерение.Имя;
				стр_Измерение.РегистрНакопленияПредставление = Измерение.Имя;
				стр_Измерение.РегистрНакопленияСиноним       = Измерение.Синоним;
				стр_Измерение.РегистрНакопленияКомментарий   = Измерение.Комментарий;
				стр_Измерение.РегистрНакопленияНомерКартинки = 47;
				стр_Измерение.РегистрНакопленияТипСтроки     = "Измерение";
				стр_Измерение.РегистрНакопленияПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(Измерение.Тип);
				
			КонецЦикла;
			
			стр_Измерения.Строки.Сортировать("РегистрНакопленияИмя");
			
			стр_Ресурсы = стр_Регистр.Строки.Добавить();
			стр_Ресурсы.РегистрНакопленияИмя           = "Ресурсы";
			стр_Ресурсы.РегистрНакопленияПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("Ресурсы (%1)", РегистрМд.Ресурсы.Количество());
			стр_Ресурсы.РегистрНакопленияНомерКартинки = 48;
			стр_Ресурсы.РегистрНакопленияТипСтроки     = "Ресурсы";
			
			Для каждого Ресурс Из РегистрМд.Ресурсы Цикл
				
				стр_Ресурс = стр_Ресурсы.Строки.Добавить();
				стр_Ресурс.РегистрНакопленияИмя           = Ресурс.Имя;
				стр_Ресурс.РегистрНакопленияПредставление = Ресурс.Имя;
				стр_Ресурс.РегистрНакопленияСиноним       = Ресурс.Синоним;
				стр_Ресурс.РегистрНакопленияКомментарий   = Ресурс.Комментарий;
				стр_Ресурс.РегистрНакопленияНомерКартинки = 48;
				стр_Ресурс.РегистрНакопленияТипСтроки     = "Ресурс";
				стр_Ресурс.РегистрНакопленияПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(Ресурс.Тип);
				
			КонецЦикла;
			
			стр_Ресурсы.Строки.Сортировать("РегистрНакопленияИмя");
			
			Если РегистрМд.Реквизиты.Количество() > 0 Тогда
				
				стр_Реквизиты = стр_Регистр.Строки.Добавить();
				стр_Реквизиты.РегистрНакопленияИмя           = "Реквизиты";
				стр_Реквизиты.РегистрНакопленияПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("Реквизиты (%1)", РегистрМд.Ресурсы.Количество());
				стр_Реквизиты.РегистрНакопленияНомерКартинки = 45;
				стр_Реквизиты.РегистрНакопленияТипСтроки     = "Реквизиты";
				
				Для каждого Реквизит Из РегистрМд.Реквизиты Цикл
					
					стр_Реквизит = стр_Реквизиты.Строки.Добавить();
					стр_Реквизит.РегистрНакопленияИмя           = Реквизит.Имя;
					стр_Реквизит.РегистрНакопленияПредставление = Реквизит.Имя;
					стр_Реквизит.РегистрНакопленияСиноним       = Реквизит.Синоним;
					стр_Реквизит.РегистрНакопленияКомментарий   = Реквизит.Комментарий;
					стр_Реквизит.РегистрНакопленияНомерКартинки = 45;
					стр_Реквизит.РегистрНакопленияТипСтроки     = "Реквизит";
					стр_Реквизит.РегистрНакопленияПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(Реквизит.Тип);
					
				КонецЦикла;
				
				стр_Реквизиты.Строки.Сортировать("РегистрНакопленияИмя");
				
			КонецЕсли;
			
		ИначеЕсли Метаданные.РегистрыСведений.Содержит(РегистрМд) Тогда
			
			стр_Регистр = дз_ВсеРегистрыСведений.Строки.Добавить();
			стр_Регистр.РегистрСведенийИмя           = РегистрМд.Имя;
			стр_Регистр.РегистрСведенийСиноним       = РегистрМд.Синоним;
			стр_Регистр.РегистрСведенийТипСтроки     = "РегистрСведений";
			стр_Регистр.РегистрСведенийНомерКартинки = 13;
			
			КолЗаписей = КоличествоЗаписейПоРегистру(РегистрМд);
			стр_Регистр.РегистрСведенийКоличествоЗаписей = КолЗаписей;
			
			ПредставлениеРегистра = ?(КолЗаписей > 0, ЭтаОбработка.ПодставитьПараметрыВСтроку("%1 (%2)", РегистрМд.Имя, КолЗаписей), РегистрМд.Имя);
			стр_Регистр.РегистрСведенийПредставление = ПредставлениеРегистра;
			
			стр_СтРеквизиты = стр_Регистр.Строки.Добавить();
			стр_СтРеквизиты.РегистрСведенийИмя           = "СтандартныеРеквизиты";
			стр_СтРеквизиты.РегистрСведенийПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("СтандартныеРеквизиты (%1)", РегистрМд.СтандартныеРеквизиты.Количество());
			стр_СтРеквизиты.РегистрСведенийНомерКартинки = 44;
			стр_СтРеквизиты.РегистрСведенийТипСтроки     = "СтандартныеРеквизиты";
			
			Для каждого СтРеквизит Из РегистрМд.СтандартныеРеквизиты Цикл
				
				стр_СтРеквизит = стр_СтРеквизиты.Строки.Добавить();
				стр_СтРеквизит.РегистрСведенийИмя           = СтРеквизит.Имя;
				стр_СтРеквизит.РегистрСведенийПредставление = СтРеквизит.Имя;
				стр_СтРеквизит.РегистрСведенийСиноним       = СтРеквизит.Синоним;
				стр_СтРеквизит.РегистрСведенийКомментарий   = СтРеквизит.Комментарий;
				стр_СтРеквизит.РегистрСведенийНомерКартинки = 44;
				стр_СтРеквизит.РегистрСведенийТипСтроки     = "СтандартныйРеквизит";
				
			КонецЦикла;
			
			стр_СтРеквизиты.Строки.Сортировать("РегистрСведенийИмя");
			
			стр_Измерения = стр_Регистр.Строки.Добавить();
			стр_Измерения.РегистрСведенийИмя           = "Измерения";
			стр_Измерения.РегистрСведенийПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("Измерения (%1)", РегистрМд.Измерения.Количество());
			стр_Измерения.РегистрСведенийНомерКартинки = 47;
			стр_Измерения.РегистрСведенийТипСтроки     = "Измерения";
			
			Для каждого Измерение Из РегистрМд.Измерения Цикл
				
				стр_Измерение = стр_Измерения.Строки.Добавить();
				стр_Измерение.РегистрСведенийИмя           = Измерение.Имя;
				стр_Измерение.РегистрСведенийПредставление = Измерение.Имя;
				стр_Измерение.РегистрСведенийСиноним       = Измерение.Синоним;
				стр_Измерение.РегистрСведенийКомментарий   = Измерение.Комментарий;
				стр_Измерение.РегистрСведенийНомерКартинки = 47;
				стр_Измерение.РегистрСведенийТипСтроки     = "Измерение";
				
			КонецЦикла;
			
			стр_Измерения.Строки.Сортировать("РегистрСведенийИмя");
			
			стр_Ресурсы = стр_Регистр.Строки.Добавить();
			стр_Ресурсы.РегистрСведенийИмя           = "Ресурсы";
			стр_Ресурсы.РегистрСведенийПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("Ресурсы (%1)", РегистрМд.Ресурсы.Количество());
			стр_Ресурсы.РегистрСведенийНомерКартинки = 48;
			стр_Ресурсы.РегистрСведенийТипСтроки     = "Ресурсы";
			
			Для каждого Ресурс Из РегистрМд.Ресурсы Цикл
				
				стр_Ресурс = стр_Ресурсы.Строки.Добавить();
				стр_Ресурс.РегистрСведенийИмя           = Ресурс.Имя;
				стр_Ресурс.РегистрСведенийПредставление = Ресурс.Имя;
				стр_Ресурс.РегистрСведенийСиноним       = Ресурс.Синоним;
				стр_Ресурс.РегистрСведенийКомментарий   = Ресурс.Комментарий;
				стр_Ресурс.РегистрСведенийНомерКартинки = 48;
				стр_Ресурс.РегистрСведенийТипСтроки     = "Ресурс";
				
			КонецЦикла;
			
			стр_Ресурсы.Строки.Сортировать("РегистрСведенийИмя");
			
			Если РегистрМд.Реквизиты.Количество() > 0 Тогда
				
				стр_Реквизиты = стр_Регистр.Строки.Добавить();
				стр_Реквизиты.РегистрСведенийИмя           = "Реквизиты";
				стр_Реквизиты.РегистрСведенийПредставление = ЭтаОбработка.ПодставитьПараметрыВСтроку("Реквизиты (%1)", РегистрМд.Ресурсы.Количество());
				стр_Реквизиты.РегистрСведенийНомерКартинки = 45;
				стр_Реквизиты.РегистрСведенийТипСтроки     = "Реквизиты";
				
				Для каждого Реквизит Из РегистрМд.Реквизиты Цикл
					
					стр_Реквизит = стр_Реквизиты.Строки.Добавить();
					стр_Реквизит.РегистрСведенийИмя           = Реквизит.Имя;
					стр_Реквизит.РегистрСведенийПредставление = Реквизит.Имя;
					стр_Реквизит.РегистрСведенийСиноним       = Реквизит.Синоним;
					стр_Реквизит.РегистрСведенийКомментарий   = Реквизит.Комментарий;
					стр_Реквизит.РегистрСведенийНомерКартинки = 45;
					стр_Реквизит.РегистрСведенийТипСтроки     = "Реквизит";
					
				КонецЦикла;
				
				стр_Реквизиты.Строки.Сортировать("РегистрСведенийИмя");
				
			КонецЕсли;
			
		ИначеЕсли Метаданные.РегистрыБухгалтерии.Содержит(РегистрМд) Тогда
			
			СтрокаТбл = ВсеРегистрыБухгалтерии.Добавить();
			СтрокаТбл.РегистрБухгалтерииИмя = РегистрМд.Имя;
			СтрокаТбл.РегистрБухгалтерииСиноним = РегистрМд.Синоним;
			СтрокаТбл.РегистрБухгалтерииКоличествоЗаписей = КоличествоЗаписейПоРегистру(РегистрМд);
			
		ИначеЕсли Метаданные.РегистрыРасчета.Содержит(РегистрМд) Тогда
			
			СтрокаТбл = ВсеРегистрыРасчета.Добавить();
			СтрокаТбл.РегистрРасчетаИмя = РегистрМд.Имя;
			СтрокаТбл.РегистрРасчетаСиноним = РегистрМд.Синоним;
			СтрокаТбл.РегистрРасчетаКоличествоЗаписей = КоличествоЗаписейПоРегистру(РегистрМд);
			
		КонецЕсли;
		
	КонецЦикла;
	
	дз_ВсеРегистрыНакопления.Строки.Сортировать("РегистрНакопленияИмя");
	дз_ВсеРегистрыСведений.Строки.Сортировать("РегистрСведенийИмя");
	
	ЗначениеВРеквизитФормы(дз_ВсеРегистрыНакопления, "ВсеРегистрыНакопления");
	ЗначениеВРеквизитФормы(дз_ВсеРегистрыСведений, "ВсеРегистрыСведений");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокСтраницыРеквизиты()
	
	ЗаголовокСтраницы = ЭтаОбработка().ПодставитьПараметрыВСтроку("Реквизиты (%1)", РеквизитФормыВЗначение("ВсеРеквизиты").Строки.Количество()); 
	Элементы.СтраницаРеквизиты.Заголовок = ЗаголовокСтраницы; 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокСтраницыТабличныеЧасти()
	
	ЭтаОбработка = ЭтаОбработка();
	
	ЗаголовокСтраницы = ЭтаОбработка.ПодставитьПараметрыВСтроку("Табличные части (%1)", РеквизитФормыВЗначение("ВсеТабличныеЧасти").Строки.Количество()); 
	Элементы.СтраницаТабличныеЧасти.Заголовок = ЗаголовокСтраницы;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокСтраницыДвижения()
	
	ЭтаОбработка = ЭтаОбработка();
	
	ЗаголовокСтраницы = ЭтаОбработка.ПодставитьПараметрыВСтроку("Регистры накопления (%1)", РеквизитФормыВЗначение("ВсеРегистрыНакопления").Строки.Количество()); 
	Элементы.СтраницаРегистрыНакопления.Заголовок = ЗаголовокСтраницы;
	
	ЗаголовокСтраницы = ЭтаОбработка.ПодставитьПараметрыВСтроку("Регистры сведений (%1)", РеквизитФормыВЗначение("ВсеРегистрыСведений").Строки.Количество()); 
	Элементы.СтраницаРегистрыСведений.Заголовок = ЗаголовокСтраницы;
	
	ЗаголовокСтраницы = ЭтаОбработка.ПодставитьПараметрыВСтроку("Регистры бухгалтерии (%1)", ВсеРегистрыБухгалтерии.Количество()); 
	Элементы.СтраницаРегистрыБухгалтерии.Заголовок = ЗаголовокСтраницы;
	
	ЗаголовокСтраницы = ЭтаОбработка.ПодставитьПараметрыВСтроку("Регистры расчета (%1)", ВсеРегистрыРасчета.Количество()); 
	Элементы.СтраницаРегистрыРасчета.Заголовок = ЗаголовокСтраницы;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыТабличныеЧасти()
	
	ОбъектМд = ОбъектКонфигурации.Метаданные();
	
	Попытка
		А = ОбъектМд.ТабличныеЧасти;
		ВидимостьСтраницы = Истина;
	Исключение
		ВидимостьСтраницы = Ложь;
	КонецПопытки;
	
	ВидимостьСтраницы = Не (РеквизитФормыВЗначение("ВсеТабличныеЧасти").Строки.Количество() = 0);
	
	Элементы.СтраницаТабличныеЧасти.Видимость = ВидимостьСтраницы;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыДвижения()
	
	ОбъектМд = ОбъектКонфигурации.Метаданные();
	
	Попытка
		ЕстьДвижения = ОбъектМд.Движения;
		ВидимостьСтраницы = Истина;
	Исключение
		ВидимостьСтраницы = Ложь;
	КонецПопытки;
	
	Элементы.СтраницаДвижения.Видимость = ВидимостьСтраницы;
	
	Если Не Элементы.СтраницаДвижения.Видимость Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.СтраницаРегистрыНакопления.Видимость = Не (РеквизитФормыВЗначение("ВсеРегистрыНакопления").Строки.Количество() = 0);
	Элементы.СтраницаРегистрыСведений.Видимость = Не (РеквизитФормыВЗначение("ВсеРегистрыСведений").Строки.Количество() = 0);
	Элементы.СтраницаРегистрыБухгалтерии.Видимость = Не (ВсеРегистрыБухгалтерии.Количество() = 0);
	Элементы.СтраницаРегистрыРасчета.Видимость = Не (ВсеРегистрыРасчета.Количество() = 0);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраницыРеквизиты()
	
	ОбъектМд = ОбъектКонфигурации.Метаданные();
	
	Попытка
		ЕстьРеквизиты = ОбъектМд.Реквизиты;
		ВидимостьСтраницы = Истина;
	Исключение
		ВидимостьСтраницы = Ложь;
	КонецПопытки;
	
	Элементы.СтраницаРеквизиты.Видимость = ВидимостьСтраницы;
	
КонецПроцедуры

// Отображает выбранную табличную часть элемента базы на форме.
//
// Параметры:
//	ИмяТабличнойЧасти - Строка - имя табличной части элемента базы, например: "Товары"
//
&НаСервере
Процедура ОтобразитьДанныеТабличнойЧасти(ИмяТабличнойЧасти)
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ИмяТабличнойЧасти) Тогда
		Возврат;
	КонецЕсли;
	
	УжеОтображена = ТаблицаОбъектаУжеОтображена("ТабличнаяЧасть", ИмяТабличнойЧасти);
	
	Если УжеОтображена Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ЭтаОбработка = ЭтаОбработка();
	
	// Добавить реквизиты формы относящиеся к табличной части.
	
	// ... добавить реквизит - динамический список самой табличной части.
	
	ИмяРеквизита = ИмяРеквизитаФормыТаблицаОбъекта("ТабличнаяЧасть", ИмяТабличнойЧасти); 	 
	РеквизитДанныеТабличнойЧасти = Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("ДинамическийСписок"));
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(РеквизитДанныеТабличнойЧасти);
	
	// ... добавить колонки динамического списка данных табличной части.
	
	ОбъектМд = ОбъектКонфигурации.Метаданные();
	
	Для Каждого РеквизитТабличнойЧасти Из ОбъектМд.ТабличныеЧасти[ИмяТабличнойЧасти].СтандартныеРеквизиты Цикл
		
		ИмяРеквизитаКолонка  = ИмяРеквизитаФормыКолонкаТаблицыОбъекта("ТабличнаяЧасть", ИмяТабличнойЧасти, РеквизитТабличнойЧасти.Имя);
		РеквизитКолонкаТабличнойЧасти = Новый РеквизитФормы(ИмяРеквизитаКолонка, РеквизитТабличнойЧасти.Тип);
		
		ДобавляемыеРеквизиты.Добавить(РеквизитКолонкаТабличнойЧасти);
		
	КонецЦикла;
	
	Для Каждого РеквизитТабличнойЧасти Из ОбъектМд.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты Цикл
		
		ИмяРеквизитаКолонка  = ИмяРеквизитаФормыКолонкаТаблицыОбъекта("ТабличнаяЧасть", ИмяТабличнойЧасти, РеквизитТабличнойЧасти.Имя);
		РеквизитКолонкаТабличнойЧасти = Новый РеквизитФормы(ИмяРеквизитаКолонка, РеквизитТабличнойЧасти.Тип);
		
		ДобавляемыеРеквизиты.Добавить(РеквизитКолонкаТабличнойЧасти);
		
	КонецЦикла;
	
	// ... изменить состав реквизитов формы.
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	// ... установить текст запроса для отображения данных табличной части.
	
	ТекстЗапроса = ТекстЗапросаСпискаТаблицыОбъектаКонфигурации("ТабличнаяЧасть", ИмяТабличнойЧасти);
	ЭтаФорма[ИмяРеквизита].ТекстЗапроса = ТекстЗапроса;
	
	// ... установить параметр динамического списка данных табличной части - отбор по ссылке на элемент.
	
	ЭтаФорма[ИмяРеквизита].Параметры.Элементы[0].Значение = ОбъектКонфигурации;
	ЭтаФорма[ИмяРеквизита].Параметры.Элементы[0].Использование = Истина;
	
	// Добавить элементы формы, относящиеся к табличной части.
	
	// ... добавить страницу.
	
	ИмяСтраницы = ИмяСтраницыТаблицыОбъекта("ТабличнаяЧасть", ИмяТабличнойЧасти);
	СтраницаДанныеТабличнойЧасти = Элементы.Добавить(ИмяСтраницы, Тип("ГруппаФормы"), Элементы.СтраницыДанныеТабличныхЧастей); 
	
	КолЗаписейТаблЧасти = ОбъектКонфигурации[ИмяТабличнойЧасти].Количество();
	Если КолЗаписейТаблЧасти > 0 Тогда
		СтраницаДанныеТабличнойЧасти.Заголовок = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1 (%2)", ИмяТабличнойЧасти, КолЗаписейТаблЧасти);
	Иначе
		СтраницаДанныеТабличнойЧасти.Заголовок = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1", ИмяТабличнойЧасти);
	КонецЕсли;
	
	// ... добавить табличную часть на страницу.
	
	ЭлементТаблица = Элементы.Добавить(ИмяРеквизита, Тип("ТаблицаФормы"), СтраницаДанныеТабличнойЧасти);
	ЭлементТаблица.ПутьКДанным = ИмяРеквизита;
	ЭлементТаблица.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементТаблица.Заголовок = ИмяТабличнойЧасти;
	ЭлементТаблица.Видимость = Истина;
	
	// ... добавить колонки табличной части.
	
	Для Каждого РеквизитТабличнойЧасти Из ОбъектМд.ТабличныеЧасти[ИмяТабличнойЧасти].СтандартныеРеквизиты Цикл
		
		ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкаТаблицыОбъекта("ТабличнаяЧасть", ИмяТабличнойЧасти, РеквизитТабличнойЧасти.Имя);
		ПутьКДаннымДляКолонки = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1.%2", ИмяРеквизита, ИмяРеквизитаКолонка);
		
		ЭлементКолонка = Элементы.Добавить(ИмяРеквизитаКолонка, Тип("ПолеФормы"), ЭлементТаблица);
		ЭлементКолонка.Видимость = Истина;
		ЭлементКолонка.ПутьКДанным = ПутьКДаннымДляКолонки;
		ЭлементКолонка.Заголовок = РеквизитТабличнойЧасти.Имя;
		
		Если РеквизитТабличнойЧасти.Имя = "НомерСтроки" Тогда
			ЭлементКолонка.Заголовок = "№";
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого РеквизитТабличнойЧасти Из ОбъектМд.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты Цикл
		
		ИмяРеквизитаКолонка = ИмяРеквизитаФормыКолонкаТаблицыОбъекта("ТабличнаяЧасть", ИмяТабличнойЧасти, РеквизитТабличнойЧасти.Имя);
		ПутьКДаннымДляКолонки = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1.%2", ИмяРеквизита, ИмяРеквизитаКолонка);
		
		ЭлементКолонка = Элементы.Добавить(ИмяРеквизитаКолонка, Тип("ПолеФормы"), ЭлементТаблица);
		ЭлементКолонка.Видимость = Истина;
		ЭлементКолонка.ПутьКДанным = ПутьКДаннымДляКолонки;
		ЭлементКолонка.Заголовок = РеквизитТабличнойЧасти.Имя;  
		
	КонецЦикла;
	
	// Установить обработчик событий для таблицы данных табличной части.
	
	ЭлементТаблица.УстановитьДействие("Выбор", "Подключаемый_ТабличнаяЧасть_Выбор");
	
КонецПроцедуры

&НаСервере
Процедура АктивизироватьСтраницуТаблицыОбъекта(ТипТаблицы, ИмяТаблицы)
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ТипТаблицы) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИмяТаблицы) Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ИмяСтраницы = ИмяСтраницыТаблицыОбъекта(ТипТаблицы, ИмяТаблицы);
	
	ИмяКоллекции = "";
	
	Если ТипТаблицы = "ТабличнаяЧасть" Тогда
		ИмяКоллекции = "СтраницыДанныеТабличныхЧастей";
	ИначеЕсли ТипТаблицы = "РегистрНакопления" Тогда
		ИмяКоллекции = "СтраницыДанныеРегистрыНакопления";
	ИначеЕсли ТипТаблицы = "РегистрСведений" Тогда
		ИмяКоллекции = "СтраницыДанныеРегистрыСведений";
	КонецЕсли; 
	
	Элементы[ИмяКоллекции].ТекущаяСтраница = Элементы[ИмяСтраницы];
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьДанныеРегистра(ТипРегистра, ИмяРегистра)
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ИмяРегистра) Тогда
		Возврат;
	КонецЕсли;
	
	УжеОтображена = ТаблицаОбъектаУжеОтображена(ТипРегистра, ИмяРегистра);
	
	Если УжеОтображена Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ЭтаОбработка = ЭтаОбработка();
	
	// Добавить реквизиты формы.
	
	// ... добавить реквизит - динамический список.
	
	ИмяРеквизита = ИмяРеквизитаФормыТаблицаОбъекта(ТипРегистра, ИмяРегистра);
	РеквизитДанныеРегистра = Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("ДинамическийСписок"));
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(РеквизитДанныеРегистра);
	
	// ... добавить колонки динамического списка данных регистра.
	
	ОбъектМд = ОбъектКонфигурации.Метаданные();
	
	ИмяКоллекции = "";
	
	Если ТипРегистра = "РегистрНакопления" Тогда
		ИмяКоллекции = "РегистрыНакопления";
	ИначеЕсли ТипРегистра = "РегистрСведений" Тогда
		ИмяКоллекции = "РегистрыСведений";
	ИначеЕсли ТипРегистра = "РегистрБухгалтерии" Тогда
		ИмяКоллекции = "РегистрыБухгалтерии";
	КонецЕсли; 
	
	Для Каждого Реквизит Из Метаданные[ИмяКоллекции][ИмяРегистра].СтандартныеРеквизиты Цикл
		
		ИмяРеквизитаКолонка  = ИмяРеквизитаФормыКолонкаТаблицыОбъекта(ТипРегистра, ИмяРегистра, Реквизит.Имя);
		РеквизитКолонка = Новый РеквизитФормы(ИмяРеквизитаКолонка, Реквизит.Тип, "");
		
		ДобавляемыеРеквизиты.Добавить(РеквизитКолонка);
		
	КонецЦикла;
	
	Для Каждого Реквизит Из Метаданные[ИмяКоллекции][ИмяРегистра].Измерения Цикл
		
		ИмяРеквизитаКолонка  = ИмяРеквизитаФормыКолонкаТаблицыОбъекта(ТипРегистра, ИмяРегистра, Реквизит.Имя);
		РеквизитКолонка = Новый РеквизитФормы(ИмяРеквизитаКолонка, Реквизит.Тип, "");
		
		ДобавляемыеРеквизиты.Добавить(РеквизитКолонка);
		
	КонецЦикла;
	
	Для Каждого Реквизит Из Метаданные[ИмяКоллекции][ИмяРегистра].Реквизиты Цикл
		
		ИмяРеквизитаКолонка  = ИмяРеквизитаФормыКолонкаТаблицыОбъекта(ТипРегистра, ИмяРегистра, Реквизит.Имя);
		РеквизитКолонка = Новый РеквизитФормы(ИмяРеквизитаКолонка, Реквизит.Тип, "");
		
		ДобавляемыеРеквизиты.Добавить(РеквизитКолонка);
		
	КонецЦикла;
	
	Для Каждого Реквизит Из Метаданные[ИмяКоллекции][ИмяРегистра].Ресурсы Цикл
		
		ИмяРеквизитаКолонка  = ИмяРеквизитаФормыКолонкаТаблицыОбъекта(ТипРегистра, ИмяРегистра, Реквизит.Имя);
		РеквизитКолонка = Новый РеквизитФормы(ИмяРеквизитаКолонка, Реквизит.Тип, "");
		
		ДобавляемыеРеквизиты.Добавить(РеквизитКолонка);
		
	КонецЦикла;
	
	// ... изменить состав реквизитов формы.
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	// ... установить текст запроса для отображения данных регистра.
	
	ТекстЗапроса = ТекстЗапросаСпискаТаблицыОбъектаКонфигурации(ТипРегистра, ИмяРегистра);
	ЭтаФорма[ИмяРеквизита].ТекстЗапроса = ТекстЗапроса;
	
	// ... установить параметр динамического списка данных регистра - отбор по ссылке на элемент.
	
	ЭтаФорма[ИмяРеквизита].Параметры.Элементы[0].Значение = ОбъектКонфигурации;
	ЭтаФорма[ИмяРеквизита].Параметры.Элементы[0].Использование = Истина;
	
	// Добавить элементы формы, относящиеся к регистру.
	
	// ... добавить страницу.
	
	ИмяКоллекцииСтраниц = "";
	
	Если ТипРегистра = "РегистрНакопления" Тогда
		ИмяКоллекцииСтраниц = "СтраницыДанныеРегистрыНакопления";
	ИначеЕсли ТипРегистра = "РегистрСведений" Тогда
		ИмяКоллекцииСтраниц = "СтраницыДанныеРегистрыСведений";
	ИначеЕсли ТипРегистра = "РегистрБухгалтерии" Тогда
		ИмяКоллекцииСтраниц = "СтраницыДанныеРегистрыБухгалтерии";
	КонецЕсли; 
	
	ИмяСтраницы = ИмяСтраницыТаблицыОбъекта(ТипРегистра, ИмяРегистра);
	СтраницаДанныеРегистра = Элементы.Добавить(ИмяСтраницы, Тип("ГруппаФормы"), Элементы[ИмяКоллекцииСтраниц]); 
	СтраницаДанныеРегистра.Заголовок = ИмяРегистра;
	
	// ... добавить табличную часть на страницу.
	
	ЭлементТаблица = Элементы.Добавить(ИмяРеквизита, Тип("ТаблицаФормы"), СтраницаДанныеРегистра);
	ЭлементТаблица.ПутьКДанным = ИмяРеквизита;
	ЭлементТаблица.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементТаблица.Заголовок = ИмяРегистра;
	ЭлементТаблица.Видимость = Истина;
	
	// ... добавить колонки табличной части.
	
	Для Каждого Реквизит Из Метаданные[ИмяКоллекции][ИмяРегистра].СтандартныеРеквизиты Цикл
		
		ИмяРеквизитаКолонка  = ИмяРеквизитаФормыКолонкаТаблицыОбъекта(ТипРегистра, ИмяРегистра, Реквизит.Имя);
		ПутьКДаннымДляКолонки = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1.%2", ИмяРеквизита, ИмяРеквизитаКолонка);
		
		Элемент = Элементы.Добавить(ИмяРеквизитаКолонка, Тип("ПолеФормы"), ЭлементТаблица);
		Элемент.Видимость = Истина;
		Элемент.ПутьКДанным = ПутьКДаннымДляКолонки;
		Элемент.Заголовок = Реквизит.Имя;
		
		Если Реквизит.Имя = "НомерСтроки" Тогда
			Элемент.Заголовок = "№";
		КонецЕсли;
		
		Если Реквизит.Имя = "Активность" Тогда
			Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Элемент.Вид = ВидПоляФормы.ПолеФлажка;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Реквизит Из Метаданные[ИмяКоллекции][ИмяРегистра].Измерения Цикл
		
		ИмяРеквизитаКолонка  = ИмяРеквизитаФормыКолонкаТаблицыОбъекта(ТипРегистра, ИмяРегистра, Реквизит.Имя);
		ПутьКДаннымДляКолонки = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1.%2", ИмяРеквизита, ИмяРеквизитаКолонка);
		
		Элемент = Элементы.Добавить(ИмяРеквизитаКолонка, Тип("ПолеФормы"), ЭлементТаблица);
		Элемент.Видимость = Истина;
		Элемент.ПутьКДанным = ПутьКДаннымДляКолонки;
		Элемент.Заголовок = Реквизит.Имя;
		
		Если Реквизит.Имя = "НомерСтроки" Тогда
			Элемент.Заголовок = "№";
		КонецЕсли;
		
		Если Реквизит.Имя = "Активность" Тогда
			Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			Элемент.Вид = ВидПоляФормы.ПолеФлажка;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Реквизит Из Метаданные[ИмяКоллекции][ИмяРегистра].Реквизиты Цикл
		
		ИмяРеквизитаКолонка  = ИмяРеквизитаФормыКолонкаТаблицыОбъекта(ТипРегистра, ИмяРегистра, Реквизит.Имя);
		ПутьКДаннымДляКолонки = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1.%2", ИмяРеквизита, ИмяРеквизитаКолонка);
		
		Элемент = Элементы.Добавить(ИмяРеквизитаКолонка, Тип("ПолеФормы"), ЭлементТаблица);
		Элемент.Видимость = Истина;
		Элемент.ПутьКДанным = ПутьКДаннымДляКолонки;
		Элемент.Заголовок = Реквизит.Имя;
		
	КонецЦикла;
	
	Для Каждого Реквизит Из Метаданные[ИмяКоллекции][ИмяРегистра].Ресурсы Цикл
		
		ИмяРеквизитаКолонка  = ИмяРеквизитаФормыКолонкаТаблицыОбъекта(ТипРегистра, ИмяРегистра, Реквизит.Имя);
		ПутьКДаннымДляКолонки = ЭтаОбработка.ПодставитьПараметрыВСтроку("%1.%2", ИмяРеквизита, ИмяРеквизитаКолонка);
		
		Элемент = Элементы.Добавить(ИмяРеквизитаКолонка, Тип("ПолеФормы"), ЭлементТаблица);
		Элемент.Видимость = Истина;
		Элемент.ПутьКДанным = ПутьКДаннымДляКолонки;
		Элемент.Заголовок = Реквизит.Имя;
		
	КонецЦикла;
	
	// Установить обработчик событий для таблицы данных регистра.
	
	ЭлементТаблица.УстановитьДействие("Выбор", "Подключаемый_Регистр_Выбор");
	
КонецПроцедуры

&НаСервере
Процедура ОтменитьПроведениеДокумента()
	
	ОбъектБазы = ОбъектКонфигурации.ПолучитьОбъект();
	ОбъектБазы.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	
	ЗаполнитьВсеРеквизиты();
	ЗаполнитьВсеТабличныеЧасти();
	ЗаполнитьВсеДвижения();
	
КонецПроцедуры

&НаСервере
Процедура ПровестиДокумент()
	
	ОбъектБазы = ОбъектКонфигурации.ПолучитьОбъект();
	ОбъектБазы.Записать(РежимЗаписиДокумента.Проведение);
	
	ЗаполнитьВсеРеквизиты();
	ЗаполнитьВсеТабличныеЧасти();
	ЗаполнитьВсеДвижения();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзмененияОбъекта()
	
	тз_ВсеРеквизиты = РеквизитФормыВЗначение("ВсеРеквизиты");
	СтрокиИзмРеквизитов = тз_ВсеРеквизиты.НайтиСтроки(Новый Структура("РеквизитИзменен", Истина));
	
	Если СтрокиИзмРеквизитов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектБазы = ОбъектКонфигурации.ПолучитьОбъект();
	
	Для каждого стр_ВсеРеквизиты Из СтрокиИзмРеквизитов Цикл
		ОбъектБазы[стр_ВсеРеквизиты.РеквизитИмя] = стр_ВсеРеквизиты.РеквизитЗначение;
	КонецЦикла;
	
	Если ЗаписыватьКакПриЗагрузке Тогда
		ОбъектБазы.ОбменДанными.Загрузка = Истина;
	КонецЕсли;
	
	ОбъектБазы.Записать();
	
	ЗаполнитьВсеРеквизиты();
	ЗаполнитьВсеТабличныеЧасти();
	ЗаполнитьВсеДвижения();
	
КонецПроцедуры

#КонецОбласти

#Область НаСервереБезКонтекста
#КонецОбласти

#Область НаКлиентеНаСервереБезКонтекста
#КонецОбласти

#КонецОбласти

#Область Функции

#Область НаКлиенте
#КонецОбласти

#Область НаСервере

&НаСервере
Функция ЭтаОбработка()
	
	Результат = РеквизитФормыВЗначение("Объект");
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ТекстЗаголовкаФормы()
	
	Результат = "";
	ПустойРезультат = "";
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ОбъектКонфигурации) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	#КонецОбласти
	
	Результат = ЭтаОбработка().ПодставитьПараметрыВСтроку("%1 %2", "(...)", ОбъектКонфигурации);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ИмяРеквизитаФормыТаблицаОбъекта(ТипТаблицы, ИмяТаблицы)
	
	Результат = "";
	ПустойРезультат = "";
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ТипТаблицы) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИмяТаблицы) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	#КонецОбласти
	
	Результат = ЭтаОбработка().ПодставитьПараметрыВСтроку("%1" + Объект.РазделительЧастейИмен + "%2", ТипТаблицы, ИмяТаблицы);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ТекстЗапросаСпискаТаблицыОбъектаКонфигурации(ТипТаблицы, ИмяТаблицы)
	
	Результат = "";
	ПустойРезультат = "";
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ИмяТаблицы) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	#КонецОбласти
	
	ЭтаОбработка = ЭтаОбработка();
	
	ОбъектМд = ОбъектКонфигурации.Метаданные();
	
	Если ТипТаблицы = "ТабличнаяЧасть" Тогда
		
		ПолноеИмяТаблицы = ЭтаОбработка.ПолноеИмяТабличнойЧастиОбъектаМетаданных(ОбъектМд, ИмяТаблицы);
		ИмяКоллекции = "ТабличныеЧасти";
		КоллекцияМд = ОбъектМд[ИмяКоллекции][ИмяТаблицы];
		
	Иначе
		
		Если ТипТаблицы = "РегистрБухгалтерии" Тогда
			ПолноеИмяТаблицы = ТипТаблицы + "." + ИмяТаблицы + ".ДвиженияССубконто";
		Иначе
			ПолноеИмяТаблицы = ТипТаблицы + "." + ИмяТаблицы;
		КонецЕсли;
		
		ИмяКоллекции = "Движения";
		
		Если ТипТаблицы = "РегистрНакопления" Тогда
			КоллекцияМд = Метаданные.РегистрыНакопления[ИмяТаблицы];
		ИначеЕсли ТипТаблицы = "РегистрСведений" Тогда
			КоллекцияМд = Метаданные.РегистрыСведений[ИмяТаблицы];
		ИначеЕсли ТипТаблицы = "РегистрБухгалтерии" Тогда
			КоллекцияМд = Метаданные.РегистрыБухгалтерии[ИмяТаблицы];
		КонецЕсли;
		
	КонецЕсли;
	
	СхемаЗапроса = Новый СхемаЗапроса;
	ЗапросСхемы = СхемаЗапроса.ПакетЗапросов[0];
	Оператор = ЗапросСхемы.Операторы[0];
	
	// Добавить источник в запрос.
	
	Оператор.Источники.Добавить(ПолноеИмяТаблицы, "Т");
	
	// Добавить поля в запрос.
	
	ДобавленныеПоляБухРегистра = Новый Массив;
	
	Для Каждого СтРеквизит Из КоллекцияМд.СтандартныеРеквизиты Цикл
		
		Если ТипТаблицы = "РегистрБухгалтерии" Тогда
			
			СинонимПоля = ТипТаблицы + Объект.РазделительЧастейИмен + ИмяТаблицы + Объект.РазделительЧастейИмен + СтРеквизит.Имя;
			Если Лев(СтРеквизит.Имя, СтрДлина("Субконто")) = "Субконто" Тогда
				ИмяВыбираемогоПоля = ЭтаОбработка.ПодставитьПараметрыВСтроку("Т.%1 КАК %2", СтРеквизит.Имя, СинонимПоля);
			Иначе
				ИмяВыбираемогоПоля = ЭтаОбработка.ПодставитьПараметрыВСтроку("Т.%1 КАК %2", СтРеквизит.Имя, СинонимПоля);
			КонецЕсли;
			
		Иначе
			СинонимПоля = ТипТаблицы + Объект.РазделительЧастейИмен + ИмяТаблицы + Объект.РазделительЧастейИмен + СтРеквизит.Имя;
			ИмяВыбираемогоПоля = ЭтаОбработка.ПодставитьПараметрыВСтроку("Т.%1 КАК %2", СтРеквизит.Имя, СинонимПоля);
		КонецЕсли;
		ВыбираемоеПоле = Оператор.ВыбираемыеПоля.Добавить(СтРеквизит.Имя);
		
		ЗапросСхемы.Колонки[ЗапросСхемы.Колонки.Количество() - 1].Псевдоним = СинонимПоля;
		
	КонецЦикла;
	
	Если ТипТаблицы = "РегистрНакопления" Или ТипТаблицы = "РегистрСведений" Или ТипТаблицы = "РегистрБухгалтерии" Тогда
		
		Для Каждого Реквизит Из КоллекцияМд.Измерения Цикл
			
			СинонимПоля = ТипТаблицы + Объект.РазделительЧастейИмен + ИмяТаблицы + Объект.РазделительЧастейИмен + Реквизит.Имя;
			ИмяВыбираемогоПоля = ЭтаОбработка.ПодставитьПараметрыВСтроку("Т.%1 КАК %2", Реквизит.Имя, СинонимПоля);
			ВыбираемоеПоле = Оператор.ВыбираемыеПоля.Добавить(Реквизит.Имя);
			
			ЗапросСхемы.Колонки[ЗапросСхемы.Колонки.Количество() - 1].Псевдоним = СинонимПоля;
			
		КонецЦикла;
		
	КонецЕсли; 
	
	Для Каждого Реквизит Из КоллекцияМд.Реквизиты Цикл
		
		СинонимПоля = ТипТаблицы + Объект.РазделительЧастейИмен + ИмяТаблицы + Объект.РазделительЧастейИмен + Реквизит.Имя;
		ИмяВыбираемогоПоля = ЭтаОбработка.ПодставитьПараметрыВСтроку("Т.%1 КАК %2", Реквизит.Имя, СинонимПоля);
		ВыбираемоеПоле = Оператор.ВыбираемыеПоля.Добавить(Реквизит.Имя);
		
		ЗапросСхемы.Колонки[ЗапросСхемы.Колонки.Количество() - 1].Псевдоним = СинонимПоля;
		 
	КонецЦикла;
	
	Если ТипТаблицы = "РегистрНакопления" Или ТипТаблицы = "РегистрСведений" Или ТипТаблицы = "РегистрБухгалтерии" Тогда
		
		Для Каждого Реквизит Из КоллекцияМд.Ресурсы Цикл
			
			СинонимПоля = ТипТаблицы + Объект.РазделительЧастейИмен + ИмяТаблицы + Объект.РазделительЧастейИмен + Реквизит.Имя;
			ИмяВыбираемогоПоля = ЭтаОбработка.ПодставитьПараметрыВСтроку("Т.%1 КАК %2", Реквизит.Имя, СинонимПоля);
			ВыбираемоеПоле = Оператор.ВыбираемыеПоля.Добавить(Реквизит.Имя);
			
			ЗапросСхемы.Колонки[ЗапросСхемы.Колонки.Количество() - 1].Псевдоним = СинонимПоля;
			
		КонецЦикла;
		
	КонецЕсли; 
	
	Если ТипТаблицы = "ТабличнаяЧасть" Тогда
		УсловиеОтбора = "Т.Ссылка = &Ссылка";
	Иначе
		УсловиеОтбора = "Т.Регистратор = &Ссылка";
	КонецЕсли;
	
	Оператор.Отбор.Добавить(УсловиеОтбора);
	
	Результат = СхемаЗапроса.ПолучитьТекстЗапроса(); 
	
	Возврат Результат;
	
КонецФункции

// Имя реквизита формы колонки табличной части.
//
// Параметры:
//	ИмяТабличнойЧасти - Строка - имя табличной части, например: "Товары", 
//	ИмяРеквизитаТабличнойЧасти - Строка - имя реквизита табличной части, например: "Номенклатура".
//
// Возвращаемое значение:
//	Тип: Строка
//	Имя реквизита формы колонки табличной части, например: "Товары_Номенклатура".
//
&НаСервере
Функция ИмяРеквизитаФормыКолонкаТаблицыОбъекта(ТипТаблицы, ИмяТаблицы, ИмяРеквизитаТаблицы)
	
	Результат = "";
	ПустойРезультат = "";
	
	Результат = ТипТаблицы + Объект.РазделительЧастейИмен + ИмяТаблицы + Объект.РазделительЧастейИмен + ИмяРеквизитаТаблицы;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПутьРеквизитаФормыКолонкаТабличнойЧасти(ИмяТабличнойЧасти, ИмяРеквизитаФормыТаблицаОбъекта, ИмяРеквизитаТабличнойЧасти)
	
	Результат = "";
	ПустойРезультат = "";
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ИмяСтраницыТаблицыОбъекта(ТипТаблицы, ИмяТаблицы)
	
	Результат = "";
	ПустойРезультат = "";
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ИмяТаблицы) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	#КонецОбласти
	
	ЭтаОбработка = ЭтаОбработка();
	Результат = ЭтаОбработка.ПодставитьПараметрыВСтроку("Страница" + Объект.РазделительЧастейИмен + "%1" + Объект.РазделительЧастейИмен + "%2", ТипТаблицы, ИмяТаблицы); 
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ТаблицаОбъектаУжеОтображена(ТипТаблицы, ИмяТаблицы)
	
	#Область Предусловия
	
	Если (Не ЗначениеЗаполнено(ИмяТаблицы)) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	#КонецОбласти
	
	ИмяРеквизита = ИмяРеквизитаФормыТаблицаОбъекта(ТипТаблицы, ИмяТаблицы);
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить(ИмяРеквизита, Неопределено);
	
	ЗаполнитьЗначенияСвойств(СтруктураПоиска, ЭтаФорма);
	
	Если (СтруктураПоиска[ИмяРеквизита] = Неопределено) Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция КоличествоЗаписейПоРегистру(РегистрМд)
	
	Результат = 0;
	ПустойРезультат = 0;
	
	#Область Предусловия
	
	Если РегистрМд = Неопределено Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	#КонецОбласти
	
	Если Метаданные.РегистрыНакопления.Содержит(РегистрМд) Тогда
		ИмяТипаРегистра = "РегистрНакопления";
	ИначеЕсли Метаданные.РегистрыСведений.Содержит(РегистрМд) Тогда
		ИмяТипаРегистра = "РегистрСведений";
	ИначеЕсли Метаданные.РегистрыБухгалтерии.Содержит(РегистрМд) Тогда
		ИмяТипаРегистра = "РегистрБухгалтерии";
	ИначеЕсли Метаданные.РегистрыРасчета.Содержит(РегистрМд) Тогда
		ИмяТипаРегистра = "РегистрРасчета";
	Иначе
		Возврат ПустойРезультат;
	КонецЕсли;
	
	ТекстЗапроса = ЭтаОбработка().ПодставитьПараметрыВСтроку(
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК Количество
	|ИЗ
	|	%1.%2 КАК Т
	|ГДЕ
	|	Т.Регистратор = &Регистратор", ИмяТипаРегистра, РегистрМд.Имя);
	
	Запрос = Новый Запрос();
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Регистратор", ОбъектКонфигурации);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Результат = Выборка.Количество;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолноеИмяФормыОбработки(ИмяТекущейФормы, ИмяФормыОбработки)
	
	Результат = ЭтаОбработка().ПолноеИмяФормыОбработки(ИмяТекущейФормы, ИмяФормыОбработки);
	
	Возврат Результат; 
	
КонецФункции

&НаСервере
Функция СсылкаНаОбъект()
	
	Результат = Неопределено;
	ПустойРезультат = Неопределено;
	
	Попытка
		Результат = ОбъектКонфигурации.Ссылка;
	Исключение
		Возврат ПустойРезультат;
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область НаСервереБезКонтекста
#КонецОбласти

#Область НаКлиентеНаСервереБезКонтекста
#КонецОбласти

#КонецОбласти

#Область Контракты
#КонецОбласти