#Область Форма

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	тз_СтруктураМетаданныхКонфигурации = ЭтаОбработка().СтруктураМетаданныхКонфигурации();
	ЗначениеВРеквизитФормы(тз_СтруктураМетаданныхКонфигурации, "СтруктураМетаданныхКонфигурации");
	
	Элементы.СтруктураМетаданныхКонфигурацииПредставление.Заголовок = ЭтаОбработка().КраткаяИнформацияОКонфигурации();
	
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура КомандаОткрытьИспользованныйСписокЭлементов(Элемент)
	// TODO: Разобрать имя элемента, и обработать команду открытия.
КонецПроцедуры

&НаКлиенте
Процедура КомандаСписокЭлементовОМНастроитьКолонки(Элемент)
	
	СписокЭлементовОМНастроитьКолонки(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСписокЭлементовОМЗакрыть(Элемент)
	
	Попытка
		СписокЭлементовОМЗакрыть(Элемент.Имя);
	Исключение
		//
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтобразитьСтруктуруОМ(Команда)
	
	#Область Предусловия
	
	Если Элементы.СтруктураМетаданныхКонфигурации.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ОтобразитьСтруктуруОбъектаМетаданных(Элементы.СтруктураМетаданныхКонфигурации.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтобразитьСвойстваОМ(Команда)
	
	ОтобразитьСвойстваОбъектаМетаданных();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСкрытьПоказатьСтруктуруМетаданныхКонфигурации(Команда)
	
	СкрытьПоказатьСтруктураМетаданныхКонфигурации();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтобразитьКоличество(Команда)
	
	ОтобразитьКоличествоЭлементовКоллекции(Элементы.СтруктураМетаданныхКонфигурации.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьСписокЭлементовОМ(Команда)
	
	ДанныеСтроки = СтруктураСтрокиМетаданныхКонфигурации(Элементы.СтруктураМетаданныхКонфигурации.ТекущиеДанные);
	ОтобразитьСписокЭлементовКоллекции(ДанныеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗакрытьНастройкиКолонокСписка(Команда)
	
	Элементы.ГруппаНастройкаКолонокСписка.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьФормуОПрограмме(Команда)
	
	ПолноеИмяФормы = ПолноеИмяФормыОбработки(ЭтаФорма.ИмяФормы, "ФормаОПрограмме");
	ОткрытьФорму(ПолноеИмяФормы, , ЭтаФорма, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьФормуНастройкиНавигатора(Команда)
	
	ПолноеИмяФормы = ПолноеИмяФормыОбработки(ЭтаФорма.ИмяФормы, "ФормаНастройкиНавигатора");
	ОткрытьФорму(ПолноеИмяФормы, , ЭтаФорма, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗакрытьВсеОкна(Команда)
	//TODO: Вставить содержимое обработчика для команды ЗакрытьВсеОкна.
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтобразитьКоличествоВсехЭлементов(Команда)
	
	ОтобразитьКоличествоВсехЭлементовВсехКоллекций();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьЭлементПоНавигационнойСсылкеВРедакторе(Команда)
	
	ОткрытьЭлементПоНавигационнойСсылкеВРедакторе();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСкрытьПоказатьПанельИзбранныхЭлементов(Команда)
	
	СкрытьПоказатьПанельИзбранныхЭлементов();
	
КонецПроцедуры

#КонецОбласти

#Область Таблицы

#Область СтруктураМетаданныхКонфигурации

&НаКлиенте
Процедура СтруктураМетаданныхКонфигурацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.СтруктураМетаданныхКонфигурации.ТекущиеДанные;
	
	#Область Предусловия
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	Если ТекущиеДанные.Имя = "Константы" 
		И ТекущиеДанные.ТипЗаписи = "КоллекцияОбъектовМетаданных" 
		И ТекущиеДанные.ИмяКоллекции = "Константы" Тогда
		
		ПолноеИмяФормы = ПолноеИмяФормыОбработки(ЭтаФорма.ИмяФормы, "ФормаЗначенияКонстант");
		ОткрытьФорму(ПолноеИмяФормы, , ЭтаФорма, Истина);
		
		Возврат;
		
	КонецЕсли;
	
	Если ТекущиеДанные.Имя = "Пользователи" 
		И ТекущиеДанные.ТипЗаписи = "КоллекцияОбъектовМетаданных" 
		И ТекущиеДанные.ИмяКоллекции = "Пользователи" Тогда
		
		ПолноеИмяФормы = ПолноеИмяФормыОбработки(ЭтаФорма.ИмяФормы, "ФормаПользователиБазы");
		ОткрытьФорму(ПолноеИмяФормы, , ЭтаФорма, Истина);
		
		Возврат;
		
	КонецЕсли;
	
	Если ТекущиеДанные.ТипЗаписи = "ПользовательИнформационнойБазы" Тогда
		
		ОбъектКонфигурации = Новый Структура;
		ОбъектКонфигурации.Вставить("ТипОбъекта", "ПользовательИнформационнойБазы");
		ОбъектКонфигурации.Вставить("ИмяПользователя", ТекущиеДанные.Имя);
		
		ПолноеИмяФормы = ПолноеИмяФормыОбработки(ЭтаФорма.ИмяФормы, "ФормаПользователиБазы");
		ОткрытьФорму(ПолноеИмяФормы, ОбъектКонфигурации, ЭтаФорма, Истина);
		
		Возврат;
		
	КонецЕсли;
	
	Если Поле.Имя = "КоличествоЗаписей" Тогда
		ОтобразитьКоличествоЭлементовКоллекции(ТекущиеДанные);
	Иначе
		
		ОтобразитьКоличествоЭлементовКоллекции(ТекущиеДанные);
		
		// Обработать выбор строки дерева метаданных.
		
		СтруктураСтрокиМетаданных = СтруктураСтрокиМетаданныхКонфигурации(ТекущиеДанные);
		ПриВыбореСтрокиСтруктурыМетаданныхКонфигурации(СтруктураСтрокиМетаданных);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область КолонкиСпискаВидимостьКолонки

&НаКлиенте
Процедура НастройкиКолонокСпискаНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	//
КонецПроцедуры

&НаКлиенте
Процедура НастройкиКолонокСпискаОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	//
КонецПроцедуры

&НаКлиенте
Процедура НастройкиКолонокСпискаВидимостьПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НастройкиКолонокСписка.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы[ТекущиеДанные.ИмяКолонки].Видимость = ТекущиеДанные.Видимость;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиКолонокСпискаПриИзменении(Элемент)
	
	// Сделать:
	// Добавить возможность изменять порядок колонок.
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНастройкиКолонокСпискаОтметитьВсе(Команда)
	НастройкиКолонокСпискаУстановитьПометки(Истина);
КонецПроцедуры

&НаКлиенте
Процедура КомандаНастройкиКолонокСпискаСнятьВсе(Команда)
	НастройкиКолонокСпискаУстановитьПометки(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура НастройкиКолонокСпискаУстановитьПометки(Пометка)
	
	ЭлементыНастройкиКолонокСписка = НастройкиКолонокСписка.ПолучитьЭлементы();
	
	Для каждого ЭлементСтрокаНастройкиКолонокСписка Из ЭлементыНастройкиКолонокСписка Цикл
		
		ВлЭлементы = ЭлементСтрокаНастройкиКолонокСписка.ПолучитьЭлементы();
		
		Для каждого ВлЭлемент Из ВлЭлементы Цикл
			ВлЭлемент.Видимость = Пометка;
			Элементы[ВлЭлемент.ИмяКолонки].Видимость = ВлЭлемент.Видимость;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 

#КонецОбласти

#Область Процедуры

#Область НаКлиенте

&НаКлиенте
Процедура ПриВыбореСтрокиСтруктурыМетаданныхКонфигурации(ДанныеСтроки)
	
	#Область Предусловия
	
	Если ДанныеСтроки = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ОтображениеСпискаЭлементовДоступно = ОтображениеСпискаЭлементовКоллекцииДоступно(ДанныеСтроки.ИмяКоллекции);
	
	Если ДанныеСтроки.ТипЗаписи = "ОбъектМетаданных" Тогда
		Если ДанныеСтроки.ИмяЭлементаКоллекции = "Форма" Тогда
			// TODO: Сформировать имя формы (это надо подняться до элемента-родителя), открыть форму.
		Иначе
			Если ОтображениеСпискаЭлементовДоступно Тогда
				ОтобразитьСписокЭлементовКоллекции(ДанныеСтроки);
			Иначе
				ОбработатьВыборСтрокиОбъектаОбработкиДанных(ДанныеСтроки);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборСтрокиОбъектаОбработкиДанных(ДанныеСтроки)
	
	#Область Предусловия
	
	Если ДанныеСтроки = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ЯвляетсяСредствомОбработки = ЭлементКоллекцииЯвляетсяСредствомОбработкиДанных(ДанныеСтроки.ИмяКоллекции);
	
	Если Не ЯвляетсяСредствомОбработки Тогда
		Возврат;
	КонецЕсли;
	
	СвойстваОбъекта = Тип_СвойстваОбъектаОбработкиДанных();
	СвойстваОбъекта.ИмяКоллекции = ДанныеСтроки.ИмяКоллекции;
	СвойстваОбъекта.ИмяЭлементаКоллекции = ДанныеСтроки.ИмяЭлементаКоллекции;
	СвойстваОбъекта.Имя = ДанныеСтроки.Имя;
	
	ИмяОсновнойФормы = ИмяОсновнойФормыОбъектаОбработкиДанных(СвойстваОбъекта);
	
	Если Не ЗначениеЗаполнено(ИмяОсновнойФормы) Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму(ИмяОсновнойФормы, , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьКоличествоЭлементовКоллекции(ДанныеСтроки)
	
	#Область Предусловия
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	КолЗаписей = КоличествоЭлементовКоллекцииТипаОбъектаМетаданных(
		ДанныеСтроки.ИмяЭлементаКоллекции, 
		ДанныеСтроки.Имя
	);
	
	ДанныеСтроки.КоличествоЗаписей = КолЗаписей;
	
	Если КолЗаписей = 0 Тогда
		ДанныеСтроки.Представление = ПодставитьПараметрыВСтроку("%1", ДанныеСтроки.Имя);
	Иначе
		ДанныеСтроки.Представление = ПодставитьПараметрыВСтроку("%1 (%2)", ДанныеСтроки.Имя, КолЗаписей);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьСвойстваОбъектаМетаданных()
	
	#Область Предусловия
	
	Если Элементы.СтруктураМетаданныхКонфигурации.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ПараметрыФормы = Новый Структура();
	
	ПолноеИмяФормы = ПолноеИмяФормыОбработки(ЭтаФорма.ИмяФормы, "ФормаСвойстваОбъекта");
	ОткрытьФорму(ПолноеИмяФормы, ПараметрыФормы, ЭтаФорма, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьСтруктуруОбъектаМетаданных(ИдСтроки)
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ИдСтроки) Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	СтрокаДерева = СтруктураМетаданныхКонфигурации.НайтиПоИдентификатору(ИдСтроки);
	
	Если СтрокаДерева = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураОбъекта = СтруктураОбъектаМетаданных(
		СтрокаДерева.ИмяКоллекции, 
		СтрокаДерева.Имя
	);
	
	Если СтруктураОбъекта = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПодчиненныеСтроки = СтрокаДерева.ПолучитьЭлементы();
	ПодчиненныеСтроки.Очистить();
	
	Для каждого КлючЗначение Из СтруктураОбъекта Цикл
		
		СтрокаКоллекции = ПодчиненныеСтроки.Добавить();
		СтрокаКоллекции.Имя = КлючЗначение.Ключ;
		СтрокаКоллекции.Представление = КлючЗначение.Ключ;
		СтрокаКоллекции.Синоним = КлючЗначение.Значение.Коллекция.Синоним;
		СтрокаКоллекции.ТипЗаписи = КлючЗначение.Значение.Коллекция.ТипЗаписи;
		СтрокаКоллекции.ИмяКоллекции = КлючЗначение.Значение.Коллекция.ИмяКоллекции;
		СтрокаКоллекции.ИмяЭлементаКоллекции = КлючЗначение.Значение.Коллекция.ИмяЭлементаКоллекции;
		СтрокаКоллекции.НомерКартинки = КлючЗначение.Значение.Коллекция.НомерКартинки;
		
		СтрокиКоллекции = СтрокаКоллекции.ПолучитьЭлементы();
		
		Для каждого ДанныеЭлементаКоллекции Из КлючЗначение.Значение.ДанныеКоллекции Цикл
			
			СтрокаЭлементаКоллекции = СтрокиКоллекции.Добавить();
			СтрокаЭлементаКоллекции.Имя = ДанныеЭлементаКоллекции.Имя;
			СтрокаЭлементаКоллекции.Представление = ДанныеЭлементаКоллекции.Имя;
			СтрокаЭлементаКоллекции.Синоним = ДанныеЭлементаКоллекции.Синоним;
			СтрокаЭлементаКоллекции.ТипЗаписи = ДанныеЭлементаКоллекции.ТипЗаписи;
			СтрокаЭлементаКоллекции.ИмяКоллекции = КлючЗначение.Значение.Коллекция.ИмяКоллекции;
			СтрокаЭлементаКоллекции.ИмяЭлементаКоллекции = КлючЗначение.Значение.Коллекция.ИмяЭлементаКоллекции;
			СтрокаЭлементаКоллекции.НомерКартинки = КлючЗначение.Значение.Коллекция.НомерКартинки;
			
			Если Не ДанныеЭлементаКоллекции.ДанныеКоллекции.Количество() = 0 Тогда
				
				СтрокиКоллекцииРеквизиты = СтрокаЭлементаКоллекции.ПолучитьЭлементы();
				
				Для каждого СтруктураРеквизита Из ДанныеЭлементаКоллекции.ДанныеКоллекции Цикл
					
					СтрокаРеквизита = СтрокиКоллекцииРеквизиты.Добавить();
					СтрокаРеквизита.Имя = СтруктураРеквизита.Имя;
					СтрокаРеквизита.Представление = СтруктураРеквизита.Имя;
					СтрокаРеквизита.Синоним = СтруктураРеквизита.Синоним;
					СтрокаРеквизита.ТипЗаписи = СтруктураРеквизита.ТипЗаписи;
					СтрокаРеквизита.ИмяКоллекции = "Реквизиты";
					СтрокаРеквизита.ИмяЭлементаКоллекции = "Реквизит";
					СтрокаРеквизита.НомерКартинки = 45;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла; 
	
	Элементы.СтруктураМетаданныхКонфигурации.Развернуть(ИдСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура СкрытьПоказатьСтруктураМетаданныхКонфигурации()
	
	Элементы.СтруктураМетаданныхКонфигурации.Видимость = Не Элементы.СтруктураМетаданныхКонфигурации.Видимость;
	Элементы.КомандаСкрытьПоказатьСтруктуруМетаданныхКонфигурации.Пометка = Элементы.СтруктураМетаданныхКонфигурации.Видимость;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЭлементПоНавигационнойСсылкеВРедакторе()
	
	Перем НавигационнаяСсылка;
	
	НавигационнаяСсылка = "";
	
	ПоказатьВводСтроки(Новый ОписаниеОповещения("ОткрытьЭлементПоНавигационнойСсылкеВРедактореЗавершение", ЭтотОбъект), НавигационнаяСсылка, "Переход по навигационной ссылке");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЭлементПоНавигационнойСсылкеВРедактореЗавершение(НавигационнаяСсылка, ДополнительныеПараметры) Экспорт
	
	#Область Предусловия
	
	Если (Не ЗначениеЗаполнено(НавигационнаяСсылка)) Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	СсылкаНаЭлемент = ПолучитьСсылкуНаЭлементИзНавигационнойСсылки(НавигационнаяСсылка);
	
	Если (Не ЗначениеЗаполнено(СсылкаНаЭлемент)) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура("ОбъектКонфигурации", СсылкаНаЭлемент);
	
	ПолноеИмяФормы = ПолноеИмяФормыОбработки(ЭтаФорма.ИмяФормы, "ФормаРедакторОбъекта");
	ОткрытьФорму(ПолноеИмяФормы, ПараметрыОткрытия, ЭтаФорма, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СкрытьПоказатьПанельИзбранныхЭлементов()
	
	Элементы.ИзбранныеЭлементы.Видимость = Не Элементы.ИзбранныеЭлементы.Видимость;
	Элементы.КомандаСкрытьПоказатьПанельИзбранныхЭлементов.Пометка = Элементы.ИзбранныеЭлементы.Видимость; 
	
КонецПроцедуры

#КонецОбласти

#Область НаСервере

&НаСервере
Процедура ОтобразитьСписокЭлементовКоллекции(ДанныеСтроки)
	
	// Добавить страницу списка элементов объекта метаданных.
	
	СтраницаСпискаЭлементовОМ = Неопределено;
	ДобавитьСтраницуСпискаЭлементовОМ(ДанныеСтроки, СтраницаСпискаЭлементовОМ);
	
	Если СтраницаСпискаЭлементовОМ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Добавить список элементов объекта метаданных.
	
	СписокЭлементовОМ = Неопределено;
	ДобавитьСписокЭлементовОбъектаМетаданных(ДанныеСтроки, СтраницаСпискаЭлементовОМ, СписокЭлементовОМ);
	
	ДобавитьКолонкиСпискаЭлементовОМ(СписокЭлементовОМ, ДанныеСтроки);
	
	// Активизировать добавленную страницу.
	
	Элементы.СтраницыСписковЭлементовОбъектовМетаданныхКонфгурации.ТекущаяСтраница = СтраницаСпискаЭлементовОМ;
	
	ДобавитьКомандуДляОткрытыхОбъектов(ДанныеСтроки);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьКомандуДляОткрытыхОбъектов(ДанныеСтроки)
	
	ИмяКоманды = "КомандаОткрытьИспользованныйСписокЭлементов" + Формат(Элементы.ФормаПодменюПоследниеОбъекты.ПодчиненныеЭлементы.Количество() + 1, "ЧГ=0");
	ЗаголовокКоманды = 
		"" 
		+ Элементы.ФормаПодменюПоследниеОбъекты.ПодчиненныеЭлементы.Количество() + 1
		+ " " 
		+ ДанныеСтроки.ИмяЭлементаКоллекции 
		+ "." 
		+ ДанныеСтроки.Имя;
	
	ПодсказкаКоманды = "";
	ДействиеКоманды = "КомандаОткрытьИспользованныйСписокЭлементов";
	
	КомандаИспСписок = Команды.Добавить(ИмяКоманды);
	КомандаИспСписок.Заголовок = ЗаголовокКоманды;
	КомандаИспСписок.Подсказка = ПодсказкаКоманды;
	КомандаИспСписок.Действие = ДействиеКоманды;
	
	ИмяЭлемента = ИмяКоманды;
	
	ЭлИспСписок = Элементы.Добавить(ИмяЭлемента, Тип("КнопкаФормы"), Элементы.ФормаПодменюПоследниеОбъекты);
	ЭлИспСписок.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
	ЭлИспСписок.Заголовок = ЗаголовокКоманды;
	ЭлИспСписок.ИмяКоманды = ИмяКоманды;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСписокЭлементовОбъектаМетаданных(СтрокаСтруктуры, СтраницаСписка, СписокЭлементов)
	
	// TODO: В зависимости от типа источника требуется отображать список по-разному.
	// Например, для регистра бухгалтерии потребуется отображать таблицу "ДвижениясСубконто".
	// Сбор текста запроса динамического списка необходимо выполнять с помощью схемы запроса.
	
	ИмяСпискаЭлементов = ИмяСпискаЭлементовОбъектаМетаданных(СтрокаСтруктуры);
	ИмяОсновнойТаблицыСписка = ИмяОсновнойТаблицыСпискаЭлементовОбъектаМетаданных(СтрокаСтруктуры);
	
	// Добавить реквизит формы списка элементов.
	
	РеквизитФормы = Новый РеквизитФормы(ИмяСпискаЭлементов, 
		Новый ОписаниеТипов("ДинамическийСписок"), , СтрокаСтруктуры.ИмяЭлементаКоллекции + "." + СтрокаСтруктуры.Имя);
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(РеквизитФормы);
	
	ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	ЭтаФорма[ИмяСпискаЭлементов].ОсновнаяТаблица = ИмяОсновнойТаблицыСписка;
	
	// Добавить элемент формы - список.
	
	СписокЭлементов = ЭтаФорма.Элементы.Добавить(ИмяСпискаЭлементов, Тип("ТаблицаФормы"), СтраницаСписка);
	СписокЭлементов.ПутьКДанным = ИмяСпискаЭлементов;
	СписокЭлементов.Видимость = Истина;
	
	Подменю = Неопределено;
	//ДобавитьПодменюДопКомандСписка(СписокЭлементов, Подменю);
	
	ДобавитьКомандуНастройкиКолонокСпискаЭлементовОМ(СписокЭлементов, Подменю);
	ДобавитьКомандуЗакрытияСпискаЭлементовОМ(СписокЭлементов, Подменю);
	
	СписокЭлементов.УстановитьДействие("Выбор", "Подключаемый_СписокЭлементовОбъектаМетаданных_Выбор");
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьКолонкиСпискаЭлементовОМ(СписокЭлементов, СтрокаСтруктуры)
	
	ИмяСписка = СписокЭлементов.Имя;
	
	ПараметрыКолонок = ПараметрыКолонокСпискаЭлементовОМ(СтрокаСтруктуры);
	
	Для каждого КлючЗначение Из ПараметрыКолонок Цикл
		
		КоллекцияКолонок = КлючЗначение.Значение;
		
		Для Каждого ПараметрыКолонки Из КоллекцияКолонок Цикл
			
			ИмяКолонкиСписка = ИмяКолонкиСпискаЭлементовОМ(ПараметрыКолонки.ИмяРеквизита, СтрокаСтруктуры);
			ПутьКДаннымКолонкиСписка = ПутьКДаннымКолонкиСпискаЭлементовОМ(ИмяСписка, ПараметрыКолонки.ИмяРеквизита);
			
			Попытка
				
				Колонка = Элементы.Добавить(ИмяКолонкиСписка, Тип("ПолеФормы"), Элементы[ИмяСписка]);
				Колонка.Вид = ВидПоляФормы.ПолеНадписи;
				Колонка.ПутьКДанным = ПутьКДаннымКолонкиСписка;
				Колонка.Заголовок = ПараметрыКолонки.ИмяРеквизита;
				Колонка.Видимость = ПараметрыКолонки.Видимость;
				
			Исключение
				//
			КонецПопытки;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьПодменюДопКомандСписка(СписокЭлементов, Подменю)
	
	#Область Предусловия
	
	Если СписокЭлементов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ЭтаОбработка = ЭтаОбработка();
	
	ИмяПодменю = ЭтаОбработка.ПодставитьПараметрыВСтроку("Подменю" + Объект.Система_РазделительЧастейИмен + "%1" + Объект.Система_РазделительЧастейИмен + "ДопКоманды", СписокЭлементов.Имя);
	
	Подменю = Элементы.Добавить(ИмяПодменю, Тип("ГруппаФормы"), Элементы[СписокЭлементов.Имя].КоманднаяПанель);
	Подменю.Заголовок = "Список";
	Подменю.Картинка = БиблиотекаКартинок.КонструкторЗапросаПараметрыТаблицы;
	Подменю.Отображение = ОтображениеКнопки.Картинка;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьКомандуНастройкиКолонокСпискаЭлементовОМ(СписокЭлементов, Подменю = Неопределено)
	
	#Область Предусловия
	
	Если СписокЭлементов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ИмяКоманды = ИмяДопКомандыСпискаЭлементовОМ(СписокЭлементов.Имя, "НастройкаКолонок");
	
	Команда = ЭтаФорма.Команды.Добавить(ИмяКоманды);
	Команда.Действие = "КомандаСписокЭлементовОМНастроитьКолонки";
	Команда.Подсказка = "Настроить видимость колонок";
	
	Если (Подменю = Неопределено) Тогда
		Элемент = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), Элементы[СписокЭлементов.Имя].КоманднаяПанель);
	Иначе
		Элемент = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), Подменю);		
	КонецЕсли;
	
	Элемент.ИмяКоманды = ИмяКоманды;
	Элемент.ТолькоВоВсехДействиях = Ложь;
	Элемент.Заголовок = "Колонки";
	Элемент.Отображение = ОтображениеКнопки.Картинка;
	Элемент.Картинка = БиблиотекаКартинок.НастройкиОтчета;
		
КонецПроцедуры

&НаСервере
Процедура ДобавитьКомандуЗакрытияСпискаЭлементовОМ(СписокЭлементов, Подменю = Неопределено)
	
	#Область Предусловия
	
	Если СписокЭлементов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ИмяКоманды = ИмяДопКомандыСпискаЭлементовОМ(СписокЭлементов.Имя, "Закрыть");
	
	Команда = ЭтаФорма.Команды.Добавить(ИмяКоманды);
	Команда.Действие = "КомандаСписокЭлементовОМЗакрыть";
	Команда.Подсказка = "Закрыть страницу";
	
	Если (Подменю = Неопределено) Тогда
		Элемент = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), Элементы[СписокЭлементов.Имя].КоманднаяПанель);
	Иначе
		Элемент = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), Подменю);		
	КонецЕсли;
	
	Элемент.ИмяКоманды = ИмяКоманды;
	Элемент.ТолькоВоВсехДействиях = Ложь;
	Элемент.Заголовок = "Закрыть";
	Элемент.Отображение = ОтображениеКнопки.Картинка;
	Элемент.Картинка = БиблиотекаКартинок.Закрыть;
		
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтраницуСпискаЭлементовОМ(СтрокаСтруктурыМетаданныхКонфигурации, СтраницаСписка)
	
	СтраницаСписка = Неопределено;
	
	ИмяСтраницы = ИмяСтраницыСпискаЭлементовОМ(СтрокаСтруктурыМетаданныхКонфигурации);
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ИмяСтраницы) Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	// Сформировать заголовок страницы.
	
	ЗаголовокСтраницы = ЗаголовокСтраницыСпискаЭлементовОМ(СтрокаСтруктурыМетаданныхКонфигурации);
	
	// Добавить страницу для списка элементов.
	
	СтраницаСписка = ЭтаФорма.Элементы.Добавить(ИмяСтраницы, Тип("ГруппаФормы"), ЭтаФорма.Элементы.СтраницыСписковЭлементовОбъектовМетаданныхКонфгурации);
	СтраницаСписка.Заголовок = ЗаголовокСтраницы;
	
КонецПроцедуры

&НаСервере
Процедура УвеличитьСчетчикДобавленныхЭлементов()
	
	СчетчикДобавленныхЭлементов = СчетчикДобавленныхЭлементов + 1;
	
КонецПроцедуры

&НаСервере
Процедура СписокЭлементовОМЗакрыть(ИмяЭлементаКомандыЗакрытия)
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ИмяЭлементаКомандыЗакрытия) Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ЭтаОбработка = ЭтаОбработка();
	
	// Удаляет элементы и реквизиты.
	
	ЧастиСтроки = ЭтаОбработка.РазложитьСтрокуВМассивПодстрок(ИмяЭлементаКомандыЗакрытия, Объект.Система_РазделительЧастейИмен); // "Команда_Закрыть_Список_Справочники_Справочник_ДоговорыКонтрагентов_2"
	
	// Сделать: 
	// Переделать на централизованные функции определения имен элементов. 
	// Иначе расползется и костей не собрать.
	
	ИмяСписка   = ЭтаОбработка.ПодставитьПараметрыВСтроку("Список" + Объект.Система_РазделительЧастейИмен + "%1" + Объект.Система_РазделительЧастейИмен + "%2" + Объект.Система_РазделительЧастейИмен + "%3" + Объект.Система_РазделительЧастейИмен + "%4", ЧастиСтроки[3], ЧастиСтроки[4], ЧастиСтроки[5], ЧастиСтроки[6]);
	
	ИмяСтраницы = "";
	
	Для каждого Страница Из Элементы.СтраницыСписковЭлементовОбъектовМетаданныхКонфгурации.ПодчиненныеЭлементы Цикл
		Для каждого ПодчиненныйЭлемент Из Страница.ПодчиненныеЭлементы Цикл
			Если ПодчиненныйЭлемент.Имя = ИмяСписка Тогда
				ИмяСтраницы = Страница.Имя;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла; 
	
	ИмяКомандыЗакрытия = ИмяЭлементаКомандыЗакрытия;
	
	// Сформировать списки реквизитов и элементов на удаление.
	
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить(ИмяКомандыЗакрытия);
	МассивЭлементов.Добавить(ИмяСписка);
	МассивЭлементов.Добавить(ИмяСтраницы);
	
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(ИмяСписка);
	
	// ... удаляем элементы в начале.
	
	Для каждого ИмяЭлемента Из МассивЭлементов Цикл
		Элементы.Удалить(Элементы[ИмяЭлемента]);
	КонецЦикла;
	
	// ... потом реквизиты.
	
	ЭтаФорма.ИзменитьРеквизиты(, МассивРеквизитов);
	
	ЭтаФорма.Команды.Удалить(ЭтаФорма.Команды[ИмяКомандыЗакрытия]);
	
КонецПроцедуры

&НаСервере
Процедура СписокЭлементовОМНастроитьКолонки(ИмяЭлементаКомандыНастройки)
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ИмяЭлементаКомандыНастройки) Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ЭтаОбработка = ЭтаОбработка();
	
	ЧастиСтроки = ЭтаОбработка.РазложитьСтрокуВМассивПодстрок(ИмяЭлементаКомандыНастройки, Объект.Система_РазделительЧастейИмен);
	
	ИмяКоллекции = ЧастиСтроки[3];
	ИмяОбъектаМетаданных = ЧастиСтроки[5];
	
	// Установить заголовок.
	
	Элементы.НастройкиКолонокСпискаИмя.Заголовок = ЧастиСтроки[4] + "." + ЧастиСтроки[5];
	
	// Определить имя элемента списка.
	
	ЧастиСтрокиИмениЭлементаСписка = Новый Массив;
	ЧастиСтрокиИмениЭлементаСписка.Добавить(ЧастиСтроки[2]);
	ЧастиСтрокиИмениЭлементаСписка.Добавить(ЧастиСтроки[3]);
	ЧастиСтрокиИмениЭлементаСписка.Добавить(ЧастиСтроки[4]);
	ЧастиСтрокиИмениЭлементаСписка.Добавить(ЧастиСтроки[5]);
	ЧастиСтрокиИмениЭлементаСписка.Добавить(ЧастиСтроки[6]);
	
	ИмяЭлементаСписка = ЭтаОбработка.СтрокаИзМассиваПодстрок(ЧастиСтрокиИмениЭлементаСписка, Объект.Система_РазделительЧастейИмен);
	
	// Получить таблицу элементов списка.
	
	тз_ТаблицаКолонокЭлементаСписка = Новый ТаблицаЗначений;
	тз_ТаблицаКолонокЭлементаСписка.Колонки.Добавить("ИмяКолонки");
	тз_ТаблицаКолонокЭлементаСписка.Колонки.Добавить("ИмяРеквизита");
	тз_ТаблицаКолонокЭлементаСписка.Колонки.Добавить("Видимость");
	
	Для каждого ЭлКолонка Из Элементы[ИмяЭлементаСписка].ПодчиненныеЭлементы Цикл
		
		СтрокаТз = тз_ТаблицаКолонокЭлементаСписка.Добавить();
		СтрокаТз.ИмяКолонки = ЭлКолонка.Имя;
		
		ЧастиСтрокиПутьКДанным = ЭтаОбработка.РазложитьСтрокуВМассивПодстрок(ЭлКолонка.ПутьКДанным, ".");
		СтрокаТз.ИмяРеквизита = ЧастиСтрокиПутьКДанным[1];
		СтрокаТз.Видимость = ЭлКолонка.Видимость;
		
	КонецЦикла;
	
	// Получить параметры колонок списка.
	
	ПараметрыКолонокСписка = ЭтаОбработка.ПараметрыКолонокСпискаЭлементовОМ(ИмяКоллекции, ИмяОбъектаМетаданных);
	
	дз_НастройкиКолонокСписка = РеквизитФормыВЗначение("НастройкиКолонокСписка");
	дз_НастройкиКолонокСписка.Строки.Очистить();
	
	Для каждого КлючЗначение Из ПараметрыКолонокСписка Цикл
		
		Если КлючЗначение.Значение.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли; 
		
		стр_ГруппаРеквизитов = дз_НастройкиКолонокСписка.Строки.Добавить();
		стр_ГруппаРеквизитов.ТипЗаписи = "ГруппаКолонок";
		стр_ГруппаРеквизитов.Имя = КлючЗначение.Ключ;
		
		Если КлючЗначение.Ключ = "СтандартныеРеквизиты" Тогда
			стр_ГруппаРеквизитов.НомерКартинки = 1;
		ИначеЕсли КлючЗначение.Ключ = "Реквизиты" Тогда
			стр_ГруппаРеквизитов.НомерКартинки = 2;
		ИначеЕсли КлючЗначение.Ключ = "Измерения" Тогда
			стр_ГруппаРеквизитов.НомерКартинки = 3;
		ИначеЕсли КлючЗначение.Ключ = "Ресурсы" Тогда
			стр_ГруппаРеквизитов.НомерКартинки = 4;
		КонецЕсли;
		
		стр_ГруппаРеквизитов.ИмяЭлементаСписка = ИмяЭлементаСписка;
		
		Для каждого ПараметрыКолонки Из КлючЗначение.Значение Цикл
			
			стр_Реквизит = стр_ГруппаРеквизитов.Строки.Добавить();
			стр_Реквизит.ТипЗаписи         = "Колонка";
			стр_Реквизит.Имя               = ПараметрыКолонки.ИмяРеквизита;
			стр_Реквизит.НомерКартинки     = стр_ГруппаРеквизитов.НомерКартинки;
			стр_Реквизит.ИмяЭлементаСписка = ИмяЭлементаСписка;
			стр_Реквизит.ПредставлениеТипа = ПараметрыКолонки.ПредставлениеТипа;
			
			СтрокаТаблицыКолонок = тз_ТаблицаКолонокЭлементаСписка.Найти(ПараметрыКолонки.ИмяРеквизита, "ИмяРеквизита");
			
			Если Не (СтрокаТаблицыКолонок = Неопределено) Тогда
				
				стр_Реквизит.ИмяКолонки = СтрокаТаблицыКолонок.ИмяКолонки;
				стр_Реквизит.Видимость  = СтрокаТаблицыКолонок.Видимость;
				
			КонецЕсли;
			
		КонецЦикла;
		
		стр_ГруппаРеквизитов.Строки.Сортировать("Имя");
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(дз_НастройкиКолонокСписка, "НастройкиКолонокСписка");
	
	Элементы.ГруппаНастройкаКолонокСписка.Видимость = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьКоличествоВсехЭлементовВсехКоллекций()
	
	#Область КонтекстнаяПодсказка
		
	Если (Ложь) Тогда
		дз_СтруктураМетаданныхКонфигурации = Новый ДеревоЗначений;			
	КонецЕсли;
		
	#КонецОбласти
	
	ЭтаОбработка = ЭтаОбработка(); 
	
	ИменаКоллекцийДляРасчетаКоличества = Новый Массив;
	ИменаКоллекцийДляРасчетаКоличества.Добавить("Справочники");
	ИменаКоллекцийДляРасчетаКоличества.Добавить("Документы");
	ИменаКоллекцийДляРасчетаКоличества.Добавить("ПланыВидовХарактеристик");
	ИменаКоллекцийДляРасчетаКоличества.Добавить("ПланыСчетов");
	ИменаКоллекцийДляРасчетаКоличества.Добавить("РегистрыСведений");
	ИменаКоллекцийДляРасчетаКоличества.Добавить("РегистрыНакопления");
	ИменаКоллекцийДляРасчетаКоличества.Добавить("РегистрыБухгалтерии");
	ИменаКоллекцийДляРасчетаКоличества.Добавить("РегистрыРасчета");
	ИменаКоллекцийДляРасчетаКоличества.Добавить("Задачи");
	ИменаКоллекцийДляРасчетаКоличества.Добавить("БизнесПроцессы");
	
	дз_СтруктураМетаданныхКонфигурации = РеквизитФормыВЗначение("СтруктураМетаданныхКонфигурации");
	
	Для Каждого ИмяКоллекции Из ИменаКоллекцийДляРасчетаКоличества Цикл
		
		стк_СтруктураМетаданныхКонфигурации = дз_СтруктураМетаданныхКонфигурации.Строки.НайтиСтроки(Новый Структура("ИмяКоллекции", ИмяКоллекции), Истина);
		
		Если (стк_СтруктураМетаданныхКонфигурации.Количество() = 0) Тогда
			Продолжить;
		КонецЕсли;
		
		стр_КоллекцияОбъектовМетаданных = стк_СтруктураМетаданныхКонфигурации[0].Строки; 
		
		Для Каждого стр_СтрокаКоллекции Из стр_КоллекцияОбъектовМетаданных Цикл
			
			стр_СтрокаКоллекции.КоличествоЗаписей = ЭтаОбработка.КоличествоЭлементовКоллекцииТипаОбъектаМетаданных(стр_СтрокаКоллекции.ИмяЭлементаКоллекции, стр_СтрокаКоллекции.Имя);
			
			Если стр_СтрокаКоллекции.КоличествоЗаписей = 0 Тогда
				стр_СтрокаКоллекции.Представление = ПодставитьПараметрыВСтроку("%1", стр_СтрокаКоллекции.Имя);
			Иначе
				стр_СтрокаКоллекции.Представление = ПодставитьПараметрыВСтроку("%1 (%2)", стр_СтрокаКоллекции.Имя, стр_СтрокаКоллекции.КоличествоЗаписей);
			КонецЕсли;
						
		КонецЦикла;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(дз_СтруктураМетаданныхКонфигурации, "СтруктураМетаданныхКонфигурации");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Функции

#Область НаКлиенте

&НаКлиенте
Функция СтруктураСтрокиМетаданныхКонфигурации(ДанныеСтроки)
	
	ЗаписьСтруктурыМетаданныхКонфигурации = Тип_ЗаписьСтруктурыМетаданныхКонфигурации();
	
	ЗаполнитьЗначенияСвойств(ЗаписьСтруктурыМетаданныхКонфигурации, ДанныеСтроки);
	
	Результат = ЗаписьСтруктурыМетаданныхКонфигурации;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область НаСервере

&НаСервере
Функция ПолноеИмяФормыОбработки(ИмяТекущейФормы, ИмяФормыОбработки)
	
	Результат = ЭтаОбработка().ПолноеИмяФормыОбработки(ИмяТекущейФормы, ИмяФормыОбработки);
	
	Возврат Результат; 
	
КонецФункции

&НаСервере
Функция ИмяОсновнойФормыОбъектаОбработкиДанных(СвойстваОбъекта)
	
	Результат = ЭтаОбработка().ИмяОсновнойФормыОбъектаОбработкиДанных(СвойстваОбъекта);
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ЭлементКоллекцииЯвляетсяСредствомОбработкиДанных(ИмяКоллекции)
	
	Результат = ЭтаОбработка().ЭлементКоллекцииЯвляетсяСредствомОбработкиДанных(ИмяКоллекции);
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ОтображениеСпискаЭлементовКоллекцииДоступно(ИмяКоллекции)
	
	Результат = ЭтаОбработка().ОтображениеСпискаЭлементовКоллекцииДоступно(ИмяКоллекции);
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПутьКДаннымКолонкиСпискаЭлементовОМ(ИмяСписка, ИмяКолонки)
	
	Результат = "";
	Результат = ЭтаОбработка().ПодставитьПараметрыВСтроку("%1.%2", ИмяСписка, ИмяКолонки);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ИмяКолонкиСпискаЭлементовОМ(ИмяКолонки, СтрокаСтруктурыМетаданныхКонфигурации)
	
	Результат = "";
	
	УвеличитьСчетчикДобавленныхЭлементов();
	
	НомерЭлемента = СчетчикДобавленныхЭлементов;
	
	Результат = ЭтаОбработка().ПодставитьПараметрыВСтроку(
		"Колонка" + Объект.Система_РазделительЧастейИмен + "%1" + Объект.Система_РазделительЧастейИмен + "%2" + Объект.Система_РазделительЧастейИмен + "%3" + Объект.Система_РазделительЧастейИмен + "%4" + Объект.Система_РазделительЧастейИмен + "%5", 
		СтрокаСтруктурыМетаданныхКонфигурации.ИмяКоллекции, 
		СтрокаСтруктурыМетаданныхКонфигурации.ИмяЭлементаКоллекции,
		СтрокаСтруктурыМетаданныхКонфигурации.Имя,
		ИмяКолонки,
		НомерЭлемента
	);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПараметрыКолонокСпискаЭлементовОМ(СтрокаСтруктурыМд)
	
	Результат = Новый Массив;
	ПустойРезультат = Новый Массив;
	
	#Область Предусловия
	
	Если СтрокаСтруктурыМд = Неопределено Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	#КонецОбласти
	
	Результат = ЭтаОбработка().ПараметрыКолонокСпискаЭлементовОМ(
		СтрокаСтруктурыМд.ИмяКоллекции, 
		СтрокаСтруктурыМд.Имя
	);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ИмяОсновнойТаблицыСпискаЭлементовОбъектаМетаданных(СтрокаСтруктурыМетаданныхКонфигурации)
	
	Результат = ЭтаОбработка().ПодставитьПараметрыВСтроку("%1.%2", 
		СтрокаСтруктурыМетаданныхКонфигурации.ИмяЭлементаКоллекции, 
		СтрокаСтруктурыМетаданныхКонфигурации.Имя
	);
	
	Возврат Результат;
	
КонецФункции

// Имя списка элементов.
//
// Параметры:
//	СтрокаСтруктурыМетаданныхКонфигурации - Строка - данные выбранной строки дерева метаданных.
//
// Возвращаемое значение:
//	Тип: Строка
//	Имя списка элементов, например: "Список_Справочники_Справочник_Товары_1".
//	
&НаСервере
Функция ИмяСпискаЭлементовОбъектаМетаданных(СтрокаСтруктурыМетаданныхКонфигурации)
	
	Результат = "";
	
	// TODO: Рефакторинг. Разнести по разным функциям увеличение счетчика добавленных
	// элементов и составление имени элемента из всех "ингредиентов".
	
	УвеличитьСчетчикДобавленныхЭлементов();
	
	НомерЭлемента = СчетчикДобавленныхЭлементов;
	
	Результат = ЭтаОбработка().ПодставитьПараметрыВСтроку(
		"Список" + Объект.Система_РазделительЧастейИмен + "%1" + Объект.Система_РазделительЧастейИмен + "%2" + Объект.Система_РазделительЧастейИмен + "%3" + Объект.Система_РазделительЧастейИмен + "%4", 
		СтрокаСтруктурыМетаданныхКонфигурации.ИмяКоллекции, 
		СтрокаСтруктурыМетаданныхКонфигурации.ИмяЭлементаКоллекции,
		СтрокаСтруктурыМетаданныхКонфигурации.Имя,
		НомерЭлемента
	);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ЗаголовокСтраницыСпискаЭлементовОМ(СтрокаСтруктурыМетаданныхКонфигурации)
	
	Результат = "";
	ПустойРезультат = "";
	
	#Область Предусловия
	
	Если СтрокаСтруктурыМетаданныхКонфигурации = Неопределено Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	#КонецОбласти
	
	Результат = ЭтаОбработка().ПодставитьПараметрыВСтроку(
		"%1.%2", 
		СтрокаСтруктурыМетаданныхКонфигурации.ИмяЭлементаКоллекции, 
		СтрокаСтруктурыМетаданныхКонфигурации.Имя
	);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ИмяСтраницыСпискаЭлементовОМ(СтрокаСтруктурыМетаданныхКонфигурации)
	
	Результат = "";
	ПустойРезультат = "";
	
	#Область Предусловия
	
	Если СтрокаСтруктурыМетаданныхКонфигурации = Неопределено Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	#КонецОбласти
	
	УвеличитьСчетчикДобавленныхЭлементов(); 
	
	НомерЭлемента = СчетчикДобавленныхЭлементов;
	
	Результат = ЭтаОбработка().ПодставитьПараметрыВСтроку(
		"Страница" + Объект.Система_РазделительЧастейИмен + "%1" + Объект.Система_РазделительЧастейИмен + "%2" + Объект.Система_РазделительЧастейИмен + "%3" + Объект.Система_РазделительЧастейИмен + "%4", 
		СтрокаСтруктурыМетаданныхКонфигурации.ИмяКоллекции, 
		СтрокаСтруктурыМетаданныхКонфигурации.ИмяЭлементаКоллекции,
		СтрокаСтруктурыМетаданныхКонфигурации.Имя,
		НомерЭлемента
	);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ЭтаОбработка()
	
	Результат = РеквизитФормыВЗначение("Объект");
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция КоличествоЭлементовКоллекцииТипаОбъектаМетаданных(ИмяКоллекцииМетаданных, ИмяОбъектаМетаданных)
	
	Результат = ЭтаОбработка().КоличествоЭлементовКоллекцииТипаОбъектаМетаданных(ИмяКоллекцииМетаданных, ИмяОбъектаМетаданных);
	Возврат Результат; 
	
КонецФункции

&НаСервере
Функция ИмяДопКомандыСпискаЭлементовОМ(ИмяСпискаЭлементов, ТипДопКоманды)
	
	Результат = "";
	ПустойРезультат = "";
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ИмяСпискаЭлементов) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТипДопКоманды) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	#КонецОбласти
	
	Результат = ЭтаОбработка().ПодставитьПараметрыВСтроку("Команда" + Объект.Система_РазделительЧастейИмен + "%1" + Объект.Система_РазделительЧастейИмен + "%2", ТипДопКоманды, ИмяСпискаЭлементов);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПутьКДаннымПоляСпискаЭлементов(ИмяПоляСписка)
	
	ЧастиСтроки = ЭтаОбработка().РазложитьСтрокуВМАссивПодстрок(ИмяПоляСписка, Объект.Система_РазделительЧастейИмен);
	
	Результат = ЧастиСтроки[ЧастиСтроки.Количество() - 2];
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПодставитьПараметрыВСтроку(Знач СтрокаПодстановки,
	Знач Параметр1, Знач Параметр2 = Неопределено, Знач Параметр3 = Неопределено,
	Знач Параметр4 = Неопределено, Знач Параметр5 = Неопределено, Знач Параметр6 = Неопределено,
	Знач Параметр7 = Неопределено, Знач Параметр8 = Неопределено, Знач Параметр9 = Неопределено)
	
	Результат = ЭтаОбработка().ПодставитьПараметрыВСтроку(СтрокаПодстановки, Параметр1, Параметр2, Параметр3, Параметр4, Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьСсылкуНаЭлементИзНавигационнойСсылки(НавигационнаяСсылка)
    
    Результат = ЭтаОбработка().ПолучитьСсылкуНаЭлементИзНавигационнойСсылки(НавигационнаяСсылка);
    
    Возврат Результат; 
    
КонецФункции   

#КонецОбласти

#Область НаСервереБезКонтекста

&НаСервереБезКонтекста
Функция СтруктураОбъектаМетаданных(ИмяКоллекции, ИмяОбъектаМетаданных)
	
	Результат = Новый Структура;
	ПустойРезультат = Неопределено;
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ИмяКоллекции) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИмяОбъектаМетаданных) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	#КонецОбласти
	
	Попытка
		ОбъектМд = Метаданные[ИмяКоллекции][ИмяОбъектаМетаданных];
	Исключение
		Возврат ПустойРезультат;
	КонецПопытки;
	
	КоллекцииСвойств = КоллекцииСвойствОбъектаМетаданных();
	
	Для каждого КоллекцияСвойств Из КоллекцииСвойств Цикл
		
		Попытка
			КоллекцияСвойствМд = ОбъектМд[КоллекцияСвойств.Имя];
		Исключение
			Продолжить;
		КонецПопытки;
		
		ДанныеКоллекции = Новый Массив;
		
		Если ТипЗнч(КоллекцияСвойствМд) = Тип("ОписанияСтандартныхРеквизитов") 
			Или ТипЗнч(КоллекцияСвойствМд) = Тип("КоллекцияЗначенийСвойстваОбъектаМетаданных") 
			Или ТипЗнч(КоллекцияСвойствМд) = Тип("КоллекцияОбъектовМетаданных") Тогда
			
			Для каждого ЭлементКоллекции Из КоллекцияСвойствМд Цикл
				
				ДанныеЭлементаКоллекции = Новый Структура("ТипЗаписи, Имя, Синоним, Комментарий, ДанныеКоллекции");
				ЗаполнитьЗначенияСвойств(ДанныеЭлементаКоллекции, ЭлементКоллекции);
				
				ДанныеЭлементаКоллекции.ДанныеКоллекции = Новый Массив;
				ДанныеЭлементаКоллекции.ТипЗаписи = "ОбъектМетаданных";
				
				Если КоллекцияСвойств.Имя = "ТабличныеЧасти" Тогда
					
					Для каждого Реквизит Из ЭлементКоллекции.Реквизиты Цикл
						
						СтруктураРеквизита = Новый Структура("ТипЗаписи, Имя, Синоним, Комментарий");
						ЗаполнитьЗначенияСвойств(СтруктураРеквизита, Реквизит);
						
						СтруктураРеквизита.ТипЗаписи = "ОбъектМетаданных";
						
						ДанныеЭлементаКоллекции.ДанныеКоллекции.Добавить(СтруктураРеквизита);
						
					КонецЦикла;
					
				КонецЕсли;
				
				ДанныеКоллекции.Добавить(ДанныеЭлементаКоллекции);
				
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(КоллекцияСвойствМд) = Тип("ОписаниеТипов") Тогда
			
			// Сделать:
			// Это ветка для построения списка источников. Надо разделять их по типам: справочники, документы и т.п.
			
			КоллекцияСвойствМд = КоллекцияСвойствМд.Типы();
			
			Для А = 0 По КоллекцияСвойствМд.Количество() - 1 Цикл
				
				ЭлементКоллекции = КоллекцияСвойствМд[А];
				ДанныеЭлементаКоллекции = Новый Структура("ТипЗаписи, Имя, Синоним, Комментарий, ДанныеКоллекции");
				
				ОбъектТипа = Новый(ЭлементКоллекции);
				МетаданныеОбъектТипа = ОбъектТипа.Метаданные();
				ЗаполнитьЗначенияСвойств(ДанныеЭлементаКоллекции, МетаданныеОбъектТипа);
				
				ДанныеЭлементаКоллекции.ДанныеКоллекции = Новый Массив;
				ДанныеЭлементаКоллекции.ТипЗаписи = "ОбъектМетаданных";
				
				Если КоллекцияСвойств.Имя = "ТабличныеЧасти" Тогда
					
					Для каждого Реквизит Из МетаданныеОбъектТипа.Реквизиты Цикл
						
						СтруктураРеквизита = Новый Структура("ТипЗаписи, Имя, Синоним, Комментарий");
						ЗаполнитьЗначенияСвойств(СтруктураРеквизита, Реквизит);
						
						СтруктураРеквизита.ТипЗаписи = "ОбъектМетаданных";
						
						ДанныеЭлементаКоллекции.ДанныеКоллекции.Добавить(СтруктураРеквизита);
						
					КонецЦикла;
					
				КонецЕсли;
				
				ДанныеКоллекции.Добавить(ДанныеЭлементаКоллекции);
				
				А = А + 1;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Результат.Вставить(КоллекцияСвойств.Имя, Новый Структура("Коллекция, ДанныеКоллекции", КоллекцияСвойств, ДанныеКоллекции));
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция КоллекцииСвойствОбъектаМетаданных()
	
	Результат = Новый Массив;
	
	Результат.Добавить(Новый Структура("ТипЗаписи, ИмяКоллекции, ИмяЭлементаКоллекции, Имя, Синоним, НомерКартинки", 
		"ГруппаОбъектовМетаданных", "СтандартныеРеквизиты", "СтандартныйРеквизит", "СтандартныеРеквизиты", "Стандартные реквизиты", 44));
	
	Результат.Добавить(Новый Структура("ТипЗаписи, ИмяКоллекции, ИмяЭлементаКоллекции, Имя, Синоним, НомерКартинки", 
		"ГруппаОбъектовМетаданных", "Графы", "Граф", "Графы", "Графы"));
	
	Результат.Добавить(Новый Структура("ТипЗаписи, ИмяКоллекции, ИмяЭлементаКоллекции, Имя, Синоним, НомерКартинки", 
		"ГруппаОбъектовМетаданных", "ЗначенияПеречисления", "ЗначениеПеречисления", "ЗначенияПеречисления", "Значения", 45));
	
	Результат.Добавить(Новый Структура("ТипЗаписи, ИмяКоллекции, ИмяЭлементаКоллекции, Имя, Синоним, НомерКартинки", 
		"ГруппаОбъектовМетаданных", "Измерения", "Измерение", "Измерения", "Измерения", 47));
	
	Результат.Добавить(Новый Структура("ТипЗаписи, ИмяКоллекции, ИмяЭлементаКоллекции, Имя, Синоним, НомерКартинки", 
		"ГруппаОбъектовМетаданных", "Ресурсы", "Ресурс", "Ресурсы", "Ресурсы", 48));
	
	Результат.Добавить(Новый Структура("ТипЗаписи, ИмяКоллекции, ИмяЭлементаКоллекции, Имя, Синоним, НомерКартинки", 
		"ГруппаОбъектовМетаданных", "Реквизиты", "Реквизит", "Реквизиты", "Реквизиты", 45));
	
	Результат.Добавить(Новый Структура("ТипЗаписи, ИмяКоллекции, ИмяЭлементаКоллекции, Имя, Синоним, НомерКартинки", 
		"ГруппаОбъектовМетаданных", "ПризнакиУчета", "ПризнакУчета", "ПризнакиУчета", "Признаки учета"));
	
	Результат.Добавить(Новый Структура("ТипЗаписи, ИмяКоллекции, ИмяЭлементаКоллекции, Имя, Синоним, НомерКартинки", 
		"ГруппаОбъектовМетаданных", "ПризнакиУчетаСубконто", "ПризнакУчетаСубконто", "ПризнакиУчетаСубконто", "Признаки учета субконто"));
	
	Результат.Добавить(Новый Структура("ТипЗаписи, ИмяКоллекции, ИмяЭлементаКоллекции, Имя, Синоним, НомерКартинки", 
		"ГруппаОбъектовМетаданных", "Перерасчеты", "Перерасчет", "Перерасчеты", "Перерасчеты"));
	
	Результат.Добавить(Новый Структура("ТипЗаписи, ИмяКоллекции, ИмяЭлементаКоллекции, Имя, Синоним, НомерКартинки", 
		"ГруппаОбъектовМетаданных", "ТабличныеЧасти", "ТабличнаяЧасть", "ТабличныеЧасти", "Табличные части", 46));
	
	Результат.Добавить(Новый Структура("ТипЗаписи, ИмяКоллекции, ИмяЭлементаКоллекции, Имя, Синоним, НомерКартинки", 
		"ГруппаОбъектовМетаданных", "Формы", "Форма", "Формы", "Формы", 33));
	
	Результат.Добавить(Новый Структура("ТипЗаписи, ИмяКоллекции, ИмяЭлементаКоллекции, Имя, Синоним, НомерКартинки", 
		"ГруппаОбъектовМетаданных", "Команды", "Команда", "Команды", "Команды", 34));
	
	Результат.Добавить(Новый Структура("ТипЗаписи, ИмяКоллекции, ИмяЭлементаКоллекции, Имя, Синоним, НомерКартинки", 
		"ГруппаОбъектовМетаданных", "Макеты", "Макет", "Макеты", "Макеты", 36));
	
	Результат.Добавить(Новый Структура("ТипЗаписи, ИмяКоллекции, ИмяЭлементаКоллекции, Имя, Синоним, НомерКартинки", 
		"ГруппаОбъектовМетаданных", "Операции", "Операция", "Операции", "Операции"));
	
	Результат.Добавить(Новый Структура("ТипЗаписи, ИмяКоллекции, ИмяЭлементаКоллекции, Имя, Синоним, НомерКартинки", 
		"ГруппаОбъектовМетаданных", "Источник", "Источник", "Источник", "Источник"));
	
	Результат.Добавить(Новый Структура("ТипЗаписи, ИмяКоллекции, ИмяЭлементаКоллекции, Имя, Синоним, НомерКартинки", 
		"ГруппаОбъектовМетаданных", "Состав", "Состав", "Состав", "Состав"));
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область Подключаемые

&НаКлиенте
Процедура Подключаемый_СписокЭлементовОбъектаМетаданных_Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ПутьКДаннымПоля = ПутьКДаннымПоляСпискаЭлементов(Поле.Имя);
	
	Попытка
		ПараметрыФормы = Новый Структура("ОбъектКонфигурации", Элемент.ТекущиеДанные[ПутьКДаннымПоля]);
	Исключение
		Возврат;
	КонецПопытки;
	
	ПолноеИмяФормы = ПолноеИмяФормыОбработки(ЭтаФорма.ИмяФормы, "ФормаРедакторОбъекта");
	ОткрытьФорму(ПолноеИмяФормы, ПараметрыФормы, ЭтаФорма, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область Типы

&НаСервере
Функция Тип_ЗаписьСтруктурыМетаданныхКонфигурации()
	
	Результат = ЭтаОбработка().Тип_ЗаписьСтруктурыМетаданныхКонфигурации();
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция Тип_СвойстваОбъектаОбработкиДанных()
	
	Результат = ЭтаОбработка().Тип_СвойстваОбъектаОбработкиДанных();
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция Тип_ПараметрыФормированияИмениЭлементаСписка()
	
	Результат = Новый Структура;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти